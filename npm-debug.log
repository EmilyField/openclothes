0 info it worked if it ends with ok
1 verbose cli [ '/usr/local/bin/node',
1 verbose cli   '/usr/local/bin/npm',
1 verbose cli   'install',
1 verbose cli   'nodemailer',
1 verbose cli   '--save' ]
2 info using npm@1.3.21
3 info using node@v0.10.24
4 verbose readDependencies using package.json deps
5 verbose cache add [ 'nodemailer', null ]
6 verbose cache add name=undefined spec="nodemailer" args=["nodemailer",null]
7 verbose parsed url { protocol: null,
7 verbose parsed url   slashes: null,
7 verbose parsed url   auth: null,
7 verbose parsed url   host: null,
7 verbose parsed url   port: null,
7 verbose parsed url   hostname: null,
7 verbose parsed url   hash: null,
7 verbose parsed url   search: null,
7 verbose parsed url   query: null,
7 verbose parsed url   pathname: 'nodemailer',
7 verbose parsed url   path: 'nodemailer',
7 verbose parsed url   href: 'nodemailer' }
8 silly lockFile 2e159dcb-nodemailer nodemailer
9 verbose lock nodemailer /home/vagrant/.npm/2e159dcb-nodemailer.lock
10 silly lockFile 2e159dcb-nodemailer nodemailer
11 silly lockFile 2e159dcb-nodemailer nodemailer
12 verbose addNamed [ 'nodemailer', '' ]
13 verbose addNamed [ null, '*' ]
14 silly lockFile a9602281-nodemailer nodemailer@
15 verbose lock nodemailer@ /home/vagrant/.npm/a9602281-nodemailer.lock
16 silly addNameRange { name: 'nodemailer', range: '*', hasData: false }
17 verbose url raw nodemailer
18 verbose url resolving [ 'https://registry.npmjs.org/', './nodemailer' ]
19 verbose url resolved https://registry.npmjs.org/nodemailer
20 info trying registry request attempt 1 at 00:51:48
21 http GET https://registry.npmjs.org/nodemailer
22 http 200 https://registry.npmjs.org/nodemailer
23 silly registry.get cb [ 200,
23 silly registry.get   { date: 'Fri, 14 Feb 2014 00:51:49 GMT',
23 silly registry.get     server: 'CouchDB/1.5.0 (Erlang OTP/R16B)',
23 silly registry.get     etag: '"BP8YO4HL2E62FL2OHSZI449EL"',
23 silly registry.get     'content-type': 'application/json',
23 silly registry.get     via: '1.1 varnish',
23 silly registry.get     'cache-control': 'max-age=1',
23 silly registry.get     'content-length': '140981',
23 silly registry.get     'accept-ranges': 'bytes',
23 silly registry.get     age: '653',
23 silly registry.get     'x-served-by': 'cache-v37-ASH, cache-sv95-SJC3',
23 silly registry.get     'x-cache': 'HIT, HIT',
23 silly registry.get     'x-cache-hits': '1, 1',
23 silly registry.get     'x-timer': 'S1392092925.990846872,VS0,VS40,VE56,VE246183431',
23 silly registry.get     vary: 'Accept',
23 silly registry.get     'keep-alive': 'timeout=10, max=50',
23 silly registry.get     connection: 'Keep-Alive' } ]
24 silly addNameRange number 2 { name: 'nodemailer', range: '*', hasData: true }
25 silly addNameRange versions [ 'nodemailer',
25 silly addNameRange   [ '0.1.1',
25 silly addNameRange     '0.1.2',
25 silly addNameRange     '0.1.3',
25 silly addNameRange     '0.1.4',
25 silly addNameRange     '0.1.5',
25 silly addNameRange     '0.1.6',
25 silly addNameRange     '0.1.7',
25 silly addNameRange     '0.1.8',
25 silly addNameRange     '0.1.9',
25 silly addNameRange     '0.1.10',
25 silly addNameRange     '0.1.11',
25 silly addNameRange     '0.1.12',
25 silly addNameRange     '0.1.13',
25 silly addNameRange     '0.1.14',
25 silly addNameRange     '0.1.15',
25 silly addNameRange     '0.1.16',
25 silly addNameRange     '0.1.17',
25 silly addNameRange     '0.1.18',
25 silly addNameRange     '0.1.19',
25 silly addNameRange     '0.1.20',
25 silly addNameRange     '0.1.21',
25 silly addNameRange     '0.1.22',
25 silly addNameRange     '0.1.23',
25 silly addNameRange     '0.1.24',
25 silly addNameRange     '0.2.0',
25 silly addNameRange     '0.2.1',
25 silly addNameRange     '0.2.2',
25 silly addNameRange     '0.2.3',
25 silly addNameRange     '0.2.4',
25 silly addNameRange     '0.3.0',
25 silly addNameRange     '0.3.1',
25 silly addNameRange     '0.3.2',
25 silly addNameRange     '0.3.3',
25 silly addNameRange     '0.3.4',
25 silly addNameRange     '0.3.5',
25 silly addNameRange     '0.3.6',
25 silly addNameRange     '0.3.7',
25 silly addNameRange     '0.3.8',
25 silly addNameRange     '0.3.9',
25 silly addNameRange     '0.3.10',
25 silly addNameRange     '0.3.11',
25 silly addNameRange     '0.3.12',
25 silly addNameRange     '0.3.13',
25 silly addNameRange     '0.3.14',
25 silly addNameRange     '0.3.15',
25 silly addNameRange     '0.3.16',
25 silly addNameRange     '0.3.17',
25 silly addNameRange     '0.3.18',
25 silly addNameRange     '0.3.19',
25 silly addNameRange     '0.3.20',
25 silly addNameRange     '0.3.21',
25 silly addNameRange     '0.3.22',
25 silly addNameRange     '0.3.23',
25 silly addNameRange     '0.3.24',
25 silly addNameRange     '0.3.25',
25 silly addNameRange     '0.3.26',
25 silly addNameRange     '0.3.27',
25 silly addNameRange     '0.3.28',
25 silly addNameRange     '0.3.29',
25 silly addNameRange     '0.3.30',
25 silly addNameRange     '0.3.31',
25 silly addNameRange     '0.3.32',
25 silly addNameRange     '0.3.33',
25 silly addNameRange     '0.3.34',
25 silly addNameRange     '0.3.35',
25 silly addNameRange     '0.3.37',
25 silly addNameRange     '0.3.38',
25 silly addNameRange     '0.3.39',
25 silly addNameRange     '0.3.40',
25 silly addNameRange     '0.3.41',
25 silly addNameRange     '0.3.42',
25 silly addNameRange     '0.3.43',
25 silly addNameRange     '0.3.44',
25 silly addNameRange     '0.4.0',
25 silly addNameRange     '0.4.1',
25 silly addNameRange     '0.4.2',
25 silly addNameRange     '0.4.3',
25 silly addNameRange     '0.4.4',
25 silly addNameRange     '0.5.0',
25 silly addNameRange     '0.5.1',
25 silly addNameRange     '0.5.2',
25 silly addNameRange     '0.5.3',
25 silly addNameRange     '0.5.4',
25 silly addNameRange     '0.5.5',
25 silly addNameRange     '0.5.6',
25 silly addNameRange     '0.5.7',
25 silly addNameRange     '0.5.8',
25 silly addNameRange     '0.5.9',
25 silly addNameRange     '0.5.10',
25 silly addNameRange     '0.5.11',
25 silly addNameRange     '0.5.12',
25 silly addNameRange     '0.5.13',
25 silly addNameRange     '0.5.14',
25 silly addNameRange     '0.5.15',
25 silly addNameRange     '0.6.0' ] ]
26 verbose addNamed [ 'nodemailer', '0.6.0' ]
27 verbose addNamed [ '0.6.0', '0.6.0' ]
28 silly lockFile 6449152d-nodemailer-0-6-0 nodemailer@0.6.0
29 verbose lock nodemailer@0.6.0 /home/vagrant/.npm/6449152d-nodemailer-0-6-0.lock
30 silly lockFile b34d9e7e--nodemailer-nodemailer-0-6-0-tgz https://registry.npmjs.org/nodemailer/-/nodemailer-0.6.0.tgz
31 verbose lock https://registry.npmjs.org/nodemailer/-/nodemailer-0.6.0.tgz /home/vagrant/.npm/b34d9e7e--nodemailer-nodemailer-0-6-0-tgz.lock
32 verbose addRemoteTarball [ 'https://registry.npmjs.org/nodemailer/-/nodemailer-0.6.0.tgz',
32 verbose addRemoteTarball   '230620f83b0186305ce1970db656838e04ec30df' ]
33 info retry fetch attempt 1 at 00:51:49
34 verbose fetch to= /home/vagrant/tmp/npm-2653-guL4N6pB/1392339109898-0.5272035542875528/tmp.tgz
35 http GET https://registry.npmjs.org/nodemailer/-/nodemailer-0.6.0.tgz
36 http 200 https://registry.npmjs.org/nodemailer/-/nodemailer-0.6.0.tgz
37 verbose tar unpack /home/vagrant/tmp/npm-2653-guL4N6pB/1392339109898-0.5272035542875528/tmp.tgz
38 silly lockFile d652922c-09898-0-5272035542875528-package tar:///home/vagrant/tmp/npm-2653-guL4N6pB/1392339109898-0.5272035542875528/package
39 verbose lock tar:///home/vagrant/tmp/npm-2653-guL4N6pB/1392339109898-0.5272035542875528/package /home/vagrant/.npm/d652922c-09898-0-5272035542875528-package.lock
40 silly lockFile f57fb81c-09898-0-5272035542875528-tmp-tgz tar:///home/vagrant/tmp/npm-2653-guL4N6pB/1392339109898-0.5272035542875528/tmp.tgz
41 verbose lock tar:///home/vagrant/tmp/npm-2653-guL4N6pB/1392339109898-0.5272035542875528/tmp.tgz /home/vagrant/.npm/f57fb81c-09898-0-5272035542875528-tmp-tgz.lock
42 silly gunzTarPerm modes [ '755', '644' ]
43 silly gunzTarPerm extractEntry package.json
44 silly gunzTarPerm extractEntry .npmignore
45 silly gunzTarPerm extractEntry README.md
46 silly gunzTarPerm extractEntry LICENSE
47 silly gunzTarPerm extractEntry .travis.yml
48 silly gunzTarPerm extractEntry CHANGELOG.md
49 silly gunzTarPerm extractEntry CONTRIBUTING.md
50 silly gunzTarPerm extractEntry examples/example_alternative.js
51 silly gunzTarPerm extractEntry examples/example_direct.js
52 silly gunzTarPerm extractEntry examples/example_dkim.js
53 silly gunzTarPerm extractEntry examples/example_sendmail.js
54 silly gunzTarPerm extractEntry examples/example_ses.js
55 silly gunzTarPerm extractEntry examples/example_autoembedding.js
56 silly gunzTarPerm extractEntry examples/example_smtp.js
57 silly gunzTarPerm extractEntry examples/example_xoauth.js
58 silly gunzTarPerm extractEntry examples/example_xoauth2.js
59 silly gunzTarPerm extractEntry examples/example_short.js
60 silly gunzTarPerm extractEntry examples/nyan.gif
61 silly gunzTarPerm extractEntry examples/test_private.pem
62 silly gunzTarPerm extractEntry lib/helpers.js
63 silly gunzTarPerm extractEntry lib/nodemailer.js
64 silly gunzTarPerm extractEntry lib/transport.js
65 silly gunzTarPerm extractEntry lib/wellknown.js
66 silly gunzTarPerm extractEntry lib/xoauth.js
67 silly gunzTarPerm extractEntry lib/engines/direct.js
68 silly gunzTarPerm extractEntry lib/engines/pickup.js
69 silly gunzTarPerm extractEntry lib/engines/sendmail.js
70 silly gunzTarPerm extractEntry lib/engines/ses.js
71 silly gunzTarPerm extractEntry lib/engines/smtp.js
72 silly gunzTarPerm extractEntry lib/engines/stub.js
73 silly gunzTarPerm extractEntry test/nodemailer.js
74 silly gunzTarPerm extractEntry test/mock/sendmail
75 silly lockFile d652922c-09898-0-5272035542875528-package tar:///home/vagrant/tmp/npm-2653-guL4N6pB/1392339109898-0.5272035542875528/package
76 silly lockFile d652922c-09898-0-5272035542875528-package tar:///home/vagrant/tmp/npm-2653-guL4N6pB/1392339109898-0.5272035542875528/package
77 silly lockFile f57fb81c-09898-0-5272035542875528-tmp-tgz tar:///home/vagrant/tmp/npm-2653-guL4N6pB/1392339109898-0.5272035542875528/tmp.tgz
78 silly lockFile f57fb81c-09898-0-5272035542875528-tmp-tgz tar:///home/vagrant/tmp/npm-2653-guL4N6pB/1392339109898-0.5272035542875528/tmp.tgz
79 verbose tar pack [ '/home/vagrant/.npm/nodemailer/0.6.0/package.tgz',
79 verbose tar pack   '/home/vagrant/tmp/npm-2653-guL4N6pB/1392339109898-0.5272035542875528/package' ]
80 verbose tarball /home/vagrant/.npm/nodemailer/0.6.0/package.tgz
81 verbose folder /home/vagrant/tmp/npm-2653-guL4N6pB/1392339109898-0.5272035542875528/package
82 silly lockFile d652922c-09898-0-5272035542875528-package tar:///home/vagrant/tmp/npm-2653-guL4N6pB/1392339109898-0.5272035542875528/package
83 verbose lock tar:///home/vagrant/tmp/npm-2653-guL4N6pB/1392339109898-0.5272035542875528/package /home/vagrant/.npm/d652922c-09898-0-5272035542875528-package.lock
84 silly lockFile b0024fe3-npm-nodemailer-0-6-0-package-tgz tar:///home/vagrant/.npm/nodemailer/0.6.0/package.tgz
85 verbose lock tar:///home/vagrant/.npm/nodemailer/0.6.0/package.tgz /home/vagrant/.npm/b0024fe3-npm-nodemailer-0-6-0-package-tgz.lock
86 silly lockFile d652922c-09898-0-5272035542875528-package tar:///home/vagrant/tmp/npm-2653-guL4N6pB/1392339109898-0.5272035542875528/package
87 silly lockFile d652922c-09898-0-5272035542875528-package tar:///home/vagrant/tmp/npm-2653-guL4N6pB/1392339109898-0.5272035542875528/package
88 silly lockFile b0024fe3-npm-nodemailer-0-6-0-package-tgz tar:///home/vagrant/.npm/nodemailer/0.6.0/package.tgz
89 silly lockFile b0024fe3-npm-nodemailer-0-6-0-package-tgz tar:///home/vagrant/.npm/nodemailer/0.6.0/package.tgz
90 silly lockFile 22bbaea3-ant-npm-nodemailer-0-6-0-package /home/vagrant/.npm/nodemailer/0.6.0/package
91 verbose lock /home/vagrant/.npm/nodemailer/0.6.0/package /home/vagrant/.npm/22bbaea3-ant-npm-nodemailer-0-6-0-package.lock
92 silly lockFile 22bbaea3-ant-npm-nodemailer-0-6-0-package /home/vagrant/.npm/nodemailer/0.6.0/package
93 silly lockFile 22bbaea3-ant-npm-nodemailer-0-6-0-package /home/vagrant/.npm/nodemailer/0.6.0/package
94 verbose tar unpack /home/vagrant/.npm/nodemailer/0.6.0/package.tgz
95 silly lockFile b75b79c4-ant-npm-nodemailer-0-6-0-package tar:///home/vagrant/.npm/nodemailer/0.6.0/package
96 verbose lock tar:///home/vagrant/.npm/nodemailer/0.6.0/package /home/vagrant/.npm/b75b79c4-ant-npm-nodemailer-0-6-0-package.lock
97 silly lockFile b0024fe3-npm-nodemailer-0-6-0-package-tgz tar:///home/vagrant/.npm/nodemailer/0.6.0/package.tgz
98 verbose lock tar:///home/vagrant/.npm/nodemailer/0.6.0/package.tgz /home/vagrant/.npm/b0024fe3-npm-nodemailer-0-6-0-package-tgz.lock
99 silly gunzTarPerm modes [ '755', '644' ]
100 silly gunzTarPerm extractEntry package.json
101 silly gunzTarPerm modified mode [ 'package.json', 384, 420 ]
102 silly gunzTarPerm extractEntry .npmignore
103 silly gunzTarPerm modified mode [ '.npmignore', 384, 420 ]
104 silly gunzTarPerm extractEntry README.md
105 silly gunzTarPerm modified mode [ 'README.md', 384, 420 ]
106 silly gunzTarPerm extractEntry LICENSE
107 silly gunzTarPerm modified mode [ 'LICENSE', 384, 420 ]
108 silly gunzTarPerm extractEntry .travis.yml
109 silly gunzTarPerm modified mode [ '.travis.yml', 384, 420 ]
110 silly gunzTarPerm extractEntry CHANGELOG.md
111 silly gunzTarPerm modified mode [ 'CHANGELOG.md', 384, 420 ]
112 silly gunzTarPerm extractEntry CONTRIBUTING.md
113 silly gunzTarPerm modified mode [ 'CONTRIBUTING.md', 384, 420 ]
114 silly gunzTarPerm extractEntry examples/example_alternative.js
115 silly gunzTarPerm modified mode [ 'examples/example_alternative.js', 384, 420 ]
116 silly gunzTarPerm extractEntry examples/example_direct.js
117 silly gunzTarPerm modified mode [ 'examples/example_direct.js', 384, 420 ]
118 silly gunzTarPerm extractEntry examples/example_dkim.js
119 silly gunzTarPerm modified mode [ 'examples/example_dkim.js', 384, 420 ]
120 silly gunzTarPerm extractEntry examples/example_sendmail.js
121 silly gunzTarPerm modified mode [ 'examples/example_sendmail.js', 384, 420 ]
122 silly gunzTarPerm extractEntry examples/example_ses.js
123 silly gunzTarPerm modified mode [ 'examples/example_ses.js', 384, 420 ]
124 silly gunzTarPerm extractEntry examples/example_autoembedding.js
125 silly gunzTarPerm modified mode [ 'examples/example_autoembedding.js', 384, 420 ]
126 silly gunzTarPerm extractEntry examples/example_smtp.js
127 silly gunzTarPerm modified mode [ 'examples/example_smtp.js', 384, 420 ]
128 silly gunzTarPerm extractEntry examples/example_xoauth.js
129 silly gunzTarPerm modified mode [ 'examples/example_xoauth.js', 384, 420 ]
130 silly gunzTarPerm extractEntry examples/example_xoauth2.js
131 silly gunzTarPerm modified mode [ 'examples/example_xoauth2.js', 384, 420 ]
132 silly gunzTarPerm extractEntry examples/example_short.js
133 silly gunzTarPerm modified mode [ 'examples/example_short.js', 384, 420 ]
134 silly gunzTarPerm extractEntry examples/nyan.gif
135 silly gunzTarPerm modified mode [ 'examples/nyan.gif', 384, 420 ]
136 silly gunzTarPerm extractEntry examples/test_private.pem
137 silly gunzTarPerm modified mode [ 'examples/test_private.pem', 384, 420 ]
138 silly gunzTarPerm extractEntry lib/helpers.js
139 silly gunzTarPerm modified mode [ 'lib/helpers.js', 384, 420 ]
140 silly gunzTarPerm extractEntry lib/nodemailer.js
141 silly gunzTarPerm modified mode [ 'lib/nodemailer.js', 384, 420 ]
142 silly gunzTarPerm extractEntry lib/transport.js
143 silly gunzTarPerm modified mode [ 'lib/transport.js', 384, 420 ]
144 silly gunzTarPerm extractEntry lib/wellknown.js
145 silly gunzTarPerm modified mode [ 'lib/wellknown.js', 384, 420 ]
146 silly gunzTarPerm extractEntry lib/xoauth.js
147 silly gunzTarPerm modified mode [ 'lib/xoauth.js', 384, 420 ]
148 silly gunzTarPerm extractEntry lib/engines/direct.js
149 silly gunzTarPerm modified mode [ 'lib/engines/direct.js', 384, 420 ]
150 silly gunzTarPerm extractEntry lib/engines/pickup.js
151 silly gunzTarPerm modified mode [ 'lib/engines/pickup.js', 384, 420 ]
152 silly gunzTarPerm extractEntry lib/engines/sendmail.js
153 silly gunzTarPerm modified mode [ 'lib/engines/sendmail.js', 384, 420 ]
154 silly gunzTarPerm extractEntry lib/engines/ses.js
155 silly gunzTarPerm modified mode [ 'lib/engines/ses.js', 384, 420 ]
156 silly gunzTarPerm extractEntry lib/engines/smtp.js
157 silly gunzTarPerm modified mode [ 'lib/engines/smtp.js', 384, 420 ]
158 silly gunzTarPerm extractEntry lib/engines/stub.js
159 silly gunzTarPerm modified mode [ 'lib/engines/stub.js', 384, 420 ]
160 silly gunzTarPerm extractEntry test/nodemailer.js
161 silly gunzTarPerm modified mode [ 'test/nodemailer.js', 384, 420 ]
162 silly gunzTarPerm extractEntry test/mock/sendmail
163 silly gunzTarPerm modified mode [ 'test/mock/sendmail', 384, 420 ]
164 silly lockFile b75b79c4-ant-npm-nodemailer-0-6-0-package tar:///home/vagrant/.npm/nodemailer/0.6.0/package
165 silly lockFile b75b79c4-ant-npm-nodemailer-0-6-0-package tar:///home/vagrant/.npm/nodemailer/0.6.0/package
166 silly lockFile b0024fe3-npm-nodemailer-0-6-0-package-tgz tar:///home/vagrant/.npm/nodemailer/0.6.0/package.tgz
167 silly lockFile b0024fe3-npm-nodemailer-0-6-0-package-tgz tar:///home/vagrant/.npm/nodemailer/0.6.0/package.tgz
168 verbose chmod /home/vagrant/.npm/nodemailer/0.6.0/package.tgz 644
169 verbose chown /home/vagrant/.npm/nodemailer/0.6.0/package.tgz [ 1000, 1000 ]
170 silly lockFile b34d9e7e--nodemailer-nodemailer-0-6-0-tgz https://registry.npmjs.org/nodemailer/-/nodemailer-0.6.0.tgz
171 silly lockFile b34d9e7e--nodemailer-nodemailer-0-6-0-tgz https://registry.npmjs.org/nodemailer/-/nodemailer-0.6.0.tgz
172 silly lockFile 6449152d-nodemailer-0-6-0 nodemailer@0.6.0
173 silly lockFile 6449152d-nodemailer-0-6-0 nodemailer@0.6.0
174 silly lockFile a9602281-nodemailer nodemailer@
175 silly lockFile a9602281-nodemailer nodemailer@
176 silly resolved [ { name: 'nodemailer',
176 silly resolved     description: 'Easy to use module to send e-mails, supports unicode and SSL/TLS',
176 silly resolved     version: '0.6.0',
176 silly resolved     author: { name: 'Andris Reinman' },
176 silly resolved     maintainers: [ [Object] ],
176 silly resolved     homepage: 'http://github.com/andris9/nodemailer',
176 silly resolved     repository: { type: 'git', url: 'http://github.com/andris9/nodemailer.git' },
176 silly resolved     scripts: { test: 'nodeunit test/' },
176 silly resolved     main: './lib/nodemailer',
176 silly resolved     licenses: [ [Object] ],
176 silly resolved     dependencies:
176 silly resolved      { mailcomposer: '~0.2.7',
176 silly resolved        simplesmtp: '~0.2 || ~0.3',
176 silly resolved        directmail: '~0.1.6',
176 silly resolved        he: '~0.3.6',
176 silly resolved        'public-address': '~0.1.0',
176 silly resolved        'readable-stream': '~1.1.9' },
176 silly resolved     devDependencies: { nodeunit: '*' },
176 silly resolved     optionalDependencies: { 'readable-stream': '~1.1.9' },
176 silly resolved     engines: { node: '>=0.6.0' },
176 silly resolved     keywords: [ 'e-mail', 'mime', 'email', 'mail', 'sendmail', 'ses', 'smtp' ],
176 silly resolved     readme: 'Nodemailer\n==========\n\n**Nodemailer** is an easy to use module to send e-mails with Node.JS (using\nSMTP or sendmail or Amazon SES) and is unicode friendly - You can use any characters you like ✔\n\nNodemailer is Windows friendly, you can install it with *npm* on Windows just like any other module, there are no compiled dependencies. Use it from Azure or from your Windows box hassle free.\n\n**[Read about using Nodemailer from the Node Knockout blog](http://blog.nodeknockout.com/post/34641712180/sending-email-from-node-js)**\n\n[![Build Status](https://secure.travis-ci.org/andris9/Nodemailer.png)](http://travis-ci.org/andris9/Nodemailer)\n[![NPM version](https://badge.fury.io/js/nodemailer.png)](http://badge.fury.io/js/nodemailer)\n\n## Notes and information\n\n### Nodemailer supports\n\n  * **Unicode** to use any characters\n  * **HTML content** as well as **plain text** alternative\n  * **Attachments** (including attachment **streaming** for sending larger files)\n  * **Embedded images** in HTML\n  * **SSL/STARTTLS** for secure e-mail delivery\n  * Different transport methods - **SMTP**, **sendmail**, **Amazon SES** or **directly** to recipients MX server or even a **custom** method\n  * SMTP **Connection pool** and connection reuse for rapid delivery\n  * **Preconfigured** services for using SMTP with Gmail, Hotmail etc.\n  * Use objects as header values for **SendGrid** SMTP API\n  * **XOAUTH2** authentication and token generation support - useful with Gmail\n  * **DKIM** signing\n\n### Support Nodemailer development\n\n[![Donate to author](https://www.paypalobjects.com/en_US/i/btn/btn_donate_SM.gif)](https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=DB26KWR2BQX5W)\n\nIf you want to support with Bitcoins, then my wallet address is `15Z8ADxhssKUiwP3jbbqJwA21744KMCfTM`\n\n### Nodemailer PaaS support\n\nNodemailer has been tested successfully on the following PaaS platforms (using free/trial accounts):\n\n  * [heroku](http://www.heroku.com/)\n  * [AppFog](http://www.appfog.com/)\n  * [OpenShift](https://openshift.redhat.com/app/)\n  * [Nodejitsu](http://nodejitsu.com/)\n  * [Windows Azure](http://www.windowsazure.com/)\n  * [Modulus](https://modulus.io/)\n\n### Check out my other mail related modules\n\nIf you want to parse generated or received e-mail instead of sending it, check\nout [MailParser](https://github.com/andris9/mailparser).\n\nIf you only want to generate the raw e-mail stream, check out\n[MailComposer](https://github.com/andris9/mailcomposer).\n\nIf you only want to communicate with the SMTP (both as client and the server),\ncheck out [simplesmtp](https://github.com/andris9/simplesmtp).\n\n### Templates\n\nTo use Nodemailer with templates, please see documentation for these projects.\n\n * [swig-email-templates](https://github.com/superjoe30/swig-email-templates) - swig, template inheritance, dummy context\n * [node-email-templates](https://github.com/niftylettuce/node-email-templates) - ejs\n\n## TL;DR Usage Example\n\nThis is a complete example to send an e-mail with plaintext and HTML body\n\n```javascript\nvar nodemailer = require("nodemailer");\n\n// create reusable transport method (opens pool of SMTP connections)\nvar smtpTransport = nodemailer.createTransport("SMTP",{\n    service: "Gmail",\n    auth: {\n        user: "gmail.user@gmail.com",\n        pass: "userpass"\n    }\n});\n\n// setup e-mail data with unicode symbols\nvar mailOptions = {\n    from: "Fred Foo ✔ <foo@blurdybloop.com>", // sender address\n    to: "bar@blurdybloop.com, baz@blurdybloop.com", // list of receivers\n    subject: "Hello ✔", // Subject line\n    text: "Hello world ✔", // plaintext body\n    html: "<b>Hello world ✔</b>" // html body\n}\n\n// send mail with defined transport object\nsmtpTransport.sendMail(mailOptions, function(error, response){\n    if(error){\n        console.log(error);\n    }else{\n        console.log("Message sent: " + response.message);\n    }\n\n    // if you don\'t want to use this transport object anymore, uncomment following line\n    //smtpTransport.close(); // shut down the connection pool, no more messages\n});\n```\n\nOr if you want to go the really easy (but not the best) route, you can try to send e-mails directly to\nthe recipients MX server without a relaying service:\n\n```javascript\nvar mail = require("nodemailer").mail;\n\nmail({\n    from: "Fred Foo ✔ <foo@blurdybloop.com>", // sender address\n    to: "bar@blurdybloop.com, baz@blurdybloop.com", // list of receivers\n    subject: "Hello ✔", // Subject line\n    text: "Hello world ✔", // plaintext body\n    html: "<b>Hello world ✔</b>" // html body\n});\n```\n\nSee also the [examples folder](https://github.com/andris9/Nodemailer/tree/master/examples)\nfor full featured examples\n\n## Installation\n\nInstall through NPM\n\n```\nnpm install nodemailer\n```\n\n## Usage\n\nInclude the module\n\n```javascript\nvar nodemailer = require("nodemailer");\n```\n\nAn e-mail can be sent with `sendMail(mailOptions[, callback])` command\n\n```javascript\ntransport.sendMail(mailOptions, callback);\n```\n\nWhere\n\n  * `transport` is a transport object created from the `nodemailer.createTransport` method\n  * **mailOptions** defines the e-mail (set its subject, body text, receivers etc.), see [E-mail Message Fields](#e-mail-message-fields) for details\n  * **callback** is the callback function that will be run after the e-mail is sent or the sending failed (see [Return callback](#return-callback) for details)\n\n## Setting up a transport method\n\nBefore you can send any e-mails you need to set up a transport method. This can\nbe done with `nodemailer.createTransport(type, options)` where `type` indicates\nthe transport protocol and `options` defines how it is used.\n\n```javascript\nvar transport = nodemailer.createTransport("SMTP", {smtp_options});\n```\n\nThe same transport object can and should be reused several times.\n\nWhen the transport method is defined, it can be used to send e-mail with `sendMail`\n\n```javascript\nvar transport = nodemailer.createTransport("SMTP", {smtp_options});\n\ntransport.sendMail({\n    from: "sender@tr.ee",\n    to: "receiver@tr.ee"\n    ...\n});\n```\n\n### Possible transport methods\n\n`type` parameter can be one of the following:\n\n  * **SMTP** for using SMTP\n  * **SES** for using Amazon SES\n  * **Sendmail** for utilizing systems *sendmail* command\n  * **Pickup** for storing the e-mail in a directory on your machine\n  * **Direct** for sending e-mails directly to recipients MTA servers\n\nIf `type` is not set, "direct" will be used\n\nIf you want to use custom transport method, you need to provide the transport handler constructor as the `type` parameter. See [Custom Transport Methods](#custom-transport-methods) for details\n\n### Global transport options\n\nIn addition to any specific configuration for a selected transport type, a few global\nones exist.\n\n  * **resolveHostname** - if set to true, resolves the public hostname for the current machine (makes an external HTTP request to [remoteAddress.net](http://www.remoteaddress.net/) for resolving it). The value is used when generating `Message-ID` values (as the domain part) and when identifying itself to a SMTP server\n  * **xMailer** - if the value is a string it replaces the default `X-Mailer` header value. If the value is `false` then `X-Mailer` is stripped from the header\n\n### Setting up SMTP\n\nSMTP is different from the other transport mechanisms, as in its case a connection\npool is created. All the connections try to stay alive as long as possible and\nare reusable to minimize the protocol overhead delay - for example setting up\nTLS for authenticating is relatively lengthy process (in CPU terms, not by human\nterms), you do not want to do it several times.\n\nPossible SMTP options are the following:\n\n * **service** - an optional well known service identifier ("Gmail", "Hotmail" etc., see [Well known Services](#well-known-services-for-smtp) for a list of supported services) to auto-configure host, port and secure connection settings\n * **host** - hostname of the SMTP server (defaults to "localhost", not needed with `service`)\n * **port** - port of the SMTP server (defaults to 25, not needed with `service`)\n * **secureConnection** - use SSL (default is `false`, not needed with `service`). If you\'re using port 587 then keep `secureConnection` false, since the connection is started in insecure plain text mode and only later upgraded with STARTTLS\n * **name** - the name of the client server (defaults to machine name)\n * **auth** - authentication object as `{user:"...", pass:"..."}` or  `{XOAuth2: {xoauth2_options}}` or  `{XOAuthToken: "base64data"}`\n * **ignoreTLS** - ignore server support for STARTTLS (defaults to `false`)\n * **debug** - output client and server messages to console\n * **maxConnections** - how many connections to keep in the pool (defaults to 5)\n * **maxMessages** - limit the count of messages to send through a single connection (no limit by default)\n\nExample:\n\n```javascript\nvar transport = nodemailer.createTransport("SMTP", {\n    service: "Gmail",\n    auth: {\n        user: "gmail.user@gmail.com",\n        pass: "userpass"\n    }\n});\n```\n\nor the same without `service` parameter\n\n```javascript\nvar transport = nodemailer.createTransport("SMTP", {\n    host: "smtp.gmail.com", // hostname\n    secureConnection: true, // use SSL\n    port: 465, // port for secure SMTP\n    auth: {\n        user: "gmail.user@gmail.com",\n        pass: "userpass"\n    }\n});\n```\n\n**NB!** if you want to close the pool (cancel all open connections) you can use `transport.close()`\n\n```javascript\n\nvar transport = nodemailer.createTransport("SMTP",{});\n...\ntransport.close(); // close the pool\n```\n\n\n#### SMTP XOAUTH and token generation\n\n##### XOAUTH2\n\n**nodemailer** supports XOAUTH2 authentication protocol. To use this you need to obtain a Client ID and a Client Secret from [Google API Console](https://code.google.com/apis/console) (Open "API Access" and create "Client ID for web applications") and then request a refresh token for an user. See [Google OAuth 2.0 Offline Access](https://developers.google.com/accounts/docs/OAuth2WebServer#offline) for more information.\n\nOnce you have obtained the Client ID, Client Secret and a Refresh Token for an user, you can use these values to send mail on behalf of the user.\n\n```javascript\nvar transportOptions = {\n    ...,\n    auth: {\n        XOAuth2: {\n            user: "example.user@gmail.com",\n            clientId: "8819981768.apps.googleusercontent.com",\n            clientSecret: "{client_secret}",\n            refreshToken: "1/xEoDL4iW3cxlI7yDbSRFYNG01kVKM2C-259HOF2aQbI",\n            accessToken: "vF9dft4qmTc2Nvb3RlckBhdHRhdmlzdGEuY29tCg==",\n            timeout: 3600\n        }\n    }\n}\n```\n\n`accessToken` and `timeout` values are both optional. If XOAUTH2 login fails a new access token is generated automatically and the login is retried.\n\n##### XOAUTH\n\nOlder XOAUTH is also supported by **nodemailer** for SMTP. XOAUTH is based on OAuth protocol 1.0 and is considered deprecated.\n\nTo use this, include `XOAuthToken` option in `auth` instead of the regular `user` and `pass`.\n\n```javascript\nvar transportOptions = {\n    ...,\n    auth: {\n        XOAuthToken: "R0VUIGh0dHBzOi8vbWFpbC5nb29...."\n    }\n}\n```\n\n**nodemailer** includes also built in XOAUTH token generator which can be used\nwith `nodemailer.createXOAuthGenerator()`. The function is preconfigured for\nGmail, so in this case only mandatory options are `user`, `token` and `tokenSecret`.\n\n```javascript\nvar XOAuthTokenGenerator = nodemailer.createXOAuthGenerator({\n        user: "test.nodemailer@gmail.com",\n        // requestUrl: "https://oauth.access.point",\n        // consumerKey: "anonymous",\n        // consumerSecret: "anonymous",\n        token: "1/O_HgoO4h2uOUfpus0V--7mygICXrQQ0ZajB3ZH52KqM",\n        tokenSecret: "_mUBkIwNPnfQBUIWrJrpXJ0c"\n    });\n```\n\nOne of `user` or `requestUrl` is mandatory. `consumerKey` and `consumerSecret` both\ndefault to `"anonymous"`.\n\n```javascript\nvar transportOptions = {\n    service: "Gmail",\n    auth: {\n        XOAuthToken: nodemailer.createXOAuthGenerator({\n            user: "test.nodemailer@gmail.com",\n            token: "1/O_HgoO4h2uOUfpus0V--7mygICXrQQ0ZajB3ZH52KqM",\n            tokenSecret: "_mUBkIwNPnfQBUIWrJrpXJ0c"\n        })\n    }\n}\n```\n\n### Setting up SES\n\nSES is actually a HTTP based protocol, the compiled e-mail and related info\n(signatures and such) are sent as a HTTP request to SES servers.\n\nPossible SES options are the following:\n\n * **AWSAccessKeyID** - AWS access key (required)\n * **AWSSecretKey** - AWS secret (required)\n * **ServiceUrl** - optional API end point URL (defaults to *"https://email.us-east-1.amazonaws.com"*)\n\nExample:\n\n```javascript\nvar transport = nodemailer.createTransport("SES", {\n    AWSAccessKeyID: "AWSACCESSKEY",\n    AWSSecretKey: "AWS/Secret/key"\n});\n```\n\n### Setting up Sendmail\n\nSendmail transport method streams the compiled message to the *stdin* of *sendmail*\ncommand.\n\nOptions object is optional, possible sendmail options are the following:\n\n  * **path** - path to the `sendmail` command (defaults to *"sendmail"*)\n  * **args** - an array of extra command line options to pass to the `sendmail` command (ie. `["-f", "foo@blurdybloop.com"]`).\n\nCurrently the command to be spawned is built up like this: the command is either using `sendmail -i -f from_addr to_addr[]` (by default) or `sendmail -i list_of_args[]` (if `args` property was given). `-i` is ensured to be present on either case.\n\nIn the default case (no `args` defined) From and To addresses are either taken from `From`,`To`, `Cc` and `Bcc` properties or from the `envelope` property if one is present.\n\nBe wary when using the `args` property - no recipients are defined by default, you need to ensure these by yourself, for example by using the `-t` flag.\n\nExample:\n\n```javascript\nvar transport = nodemailer.createTransport("sendmail");\n```\n\nor\n\n```javascript\nvar transport = nodemailer.createTransport("sendmail", {\n    path: "/usr/local/bin/sendmail",\n    args: ["-t", "-f", "foo@blurdybloop.com"]\n});\n```\n\nSendmail uses a Transform stream, which is available in NodeJS >= 0.10. For\nprevious versions you can include [`readable-stream`](https://github.com/isaacs/readable-stream)\nin your depencies, which provides a polyfill.\n\n### Setting up Pickup\n\nWhen choosing `Pickup` all e-mails will be stored in a directory so that they can be picked up by your SMTP server.\n\nPossible options are the following:\n\n * **directory** - The directory where applications save e-mail for later processing by the SMTP server (required)\n\nExample:\n\n```javascript\nvar transport = nodemailer.createTransport("PICKUP", {\n    directory: "C:\\\\inetpub\\\\mailroot\\\\Pickup"\n});\n```\n\nor the shorthand version:\n\n```javascript\nvar transport = nodemailer.createTransport("PICKUP", "C:\\\\inetpub\\\\mailroot\\\\Pickup");\n```\n\n### Setting up Direct transport\n\n*Direct* transport is useful when you can not or want not to use a relaying service or the sendmail command.\n\nTo set it up, you do not need to provide anything, just run the following to create a transport object:\n\n```\nvar transport = nodemailer.createTransport();\n```\n\nIf you want to use debug logging, use the following form:\n\n```\nvar transport = nodemailer.createTransport("direct", {debug: true});\n```\n\nThere is also a shorthand method `mail` if you do not like to set up a transport object (see [E-mail message fields](#e-mail-message-fields) for options for the `mailOptions` object).\n\n```javascript\nvar mail = require("nodemailer").mail;\nmail(mailOptions);\n```\n\n*Direct* can be quite inefficient as it queues all e-mails to be sent into memory. Additionally, if a message is not yet sent and the process is closed, all data about queued messages are lost. Thus *direct* is only suitable for low throughput systems, like password remainders and such, where the message can be processed immediatelly.\n\n*Direct* is able to handle sending errors, graylisting and such. If a message can not be sent, it is requeued and retried later.\n\nTo raise the odds of getting your emails into recipients inboxes, you should setup [SPF records](http://en.wikipedia.org/wiki/Sender_Policy_Framework) for your domain. Using [DKIM](#dkim-signing) wouldn\'t hurt either. Dynamic IP addresses are frequently treated as spam sources, so using static IPs is advised.\n\n#### Handling responses\n\n*Direct* exposes an event emitter for receiving status updates. If the message includes several recipients, the message\nis not sent to everyone at once but is sharded in chunks based on the domain name of the addresses. For example\nif your message includes the following recipients: *user1@example.com*, *user2@example.com* and *user3@blurdybloop.com*, then 2 separate messages are sent out - one for *user1@example.com* and *user2@example.com* and one for *user3@blurdybloop.com*. This means that sending to different recipients may succeed or fail independently. All information about messages being delivered, failed or requeued is emitted by the status emitter `statusHandler`.\n\n*Direct* exposes the following events:\n\n  * **\'sent\'** - message was sent successfully\n  * **\'failed\'** - message was failed permanently\n  * **\'requeue\'** - message failed but the error might not be permanent, so the message is requeued for later (once the message is retried an event is fired again).\n\nAll events get the same argument which is an object with the following properties:\n\n  * **domain** - is the domain part of the e-mail addresses\n  * **response** - is the last line form the SMTP transmission\n\n**Usage example**\n\n```javascript\ntransport.sendMail(messageOptions, function(error, response){\n    if(error){\n        console.log(error);\n        return;\n    }\n\n    // response.statusHandler only applies to \'direct\' transport\n    response.statusHandler.once("failed", function(data){\n        console.log(\n          "Permanently failed delivering message to %s with the following response: %s",\n          data.domain, data.response);\n    });\n\n    response.statusHandler.once("requeue", function(data){\n        console.log("Temporarily failed delivering message to %s", data.domain);\n    });\n\n    response.statusHandler.once("sent", function(data){\n        console.log("Message was accepted by %s", data.domain);\n    });\n});\n```\n\n**NB!** If you want to provide instant feedback to the user, listen for the first `\'sent\'`, `\'failed\'`, or `\'requeued\'` event only. The first event should arrive quickly but once the message gets requeued, the delay until the next event for this particular domain is fired is at least 15 minutes.\n\n> This example uses `.once` for listening to the events which is ok if you have just one recipient. For several recipients with different domains, the events get called several times and thus would need a more complex handling.\n\n#### When would you use Direct transport?\n\n  * When prototyping your application\n  * If you do not have or do not want to use a relaying service account\n  * When running under Windows as a Sendmail replacement (by default Sendmail is not available in Windows)\n\n### DKIM Signing\n\n**Nodemailer** supports DKIM signing with very simple setup. Use this with caution\nthough since the generated message needs to be buffered entirely before it can be\nsigned. Not a big deal with small messages but might consume a lot of RAM when\nusing larger attachments.\n\nSet up the DKIM signing with `useDKIM` method for a transport object:\n\n```javascript\ntransport.useDKIM(dkimOptions)\n```\n\nWhere `dkimOptions` includes necessary options for signing\n\n  * **domainName** - the domainname that is being used for signing\n  * **keySelector** - key selector. If you have set up a TXT record with DKIM public key at *zzz._domainkey.blurdybloop.com* then `zzz` is the selector\n  * **privateKey** - DKIM private key that is used for signing as a string\n  * **headerFieldNames** - optional colon separated list of header fields to sign, by default all fields suggested by RFC4871 #5.5 are used\n\nAll messages transmitted through this transport objects are from now on DKIM signed.\n\nCurrently if several header fields with the same name exists, only the last one (the one in the bottom) is signed.\n\nExample:\n\n```javascript\nvar transport = nodemailer.createTransport("Sendmail");\n\ntransport.useDKIM({\n    domainName: "kreata.ee",\n    keySelector: "dkim",\n    privateKey: fs.readFileSync("private_key.pem")\n});\n\ntransport.sendMail(mailOptions);\n```\n\nSee [examples/example_dkim.js](https://github.com/andris9/Nodemailer/blob/master/examples/example_dkim.js) for a complete example.\n\n### Well known services for SMTP\n\nIf you want to use a well known service as the SMTP host, you do not need\nto enter the hostname or port number, just use the `service` parameter\n\nCurrently supported services are:\n\n  * **DynectEmail**\n  * **Gmail**\n  * **hot.ee**\n  * **Hotmail**\n  * **iCloud**\n  * **mail.ee**\n  * **Mail.Ru**\n  * **Mailgun**\n  * **Mailjet**\n  * **Mandrill**\n  * **Postmark**\n  * **QQ**\n  * **QQex** (Tencent Business Email)\n  * **SendGrid**\n  * **SES**\n  * **Yahoo**\n  * **yandex**\n  * **Zoho**\n\nPredefined service data covers `host`, `port` and secure connection settings,\nany other parameters (ie. `auth`) need to be set separately. Service names are\ncase insensitive, so using "gmail" instead of "Gmail" is totally fine.\n\nExample:\n\n```javascript\nvar smtpTransport = nodemailer.createTransport("Gmail",{\n    auth: {\n        user: "gmail.user@gmail.com",\n        pass: "userpass"\n    }\n});\n```\n\nor alternatively\n\n```javascript\nvar smtpTransport = nodemailer.createTransport("SMTP",{\n    service: "Gmail", // sets automatically host, port and connection security settings\n    auth: {\n        user: "gmail.user@gmail.com",\n        pass: "userpass"\n    }\n});\n```\n\nActually, if you are authenticating with an e-mail address that has a domain name\nlike @gmail.com or @yahoo.com etc., then you don\'t even need to provide the service name,\nit is detected automatically.\n\n```javascript\nvar smtpTransport = nodemailer.createTransport("SMTP",{\n    auth: {\n        user: "gmail.user@gmail.com", // service is detected from the username\n        pass: "userpass"\n    }\n});\n```\n\n## E-mail message fields\n\nThe following are the possible fields of an e-mail message:\n\n  - **from** - The e-mail address of the sender. All e-mail addresses can be plain `sender@server.com` or formatted `Sender Name <sender@server.com>`\n  - **to** - Comma separated list or an array of recipients e-mail addresses that will appear on the `To:` field\n  - **cc** - Comma separated list or an array of recipients e-mail addresses that will appear on the `Cc:` field\n  - **bcc** - Comma separated list or an array of recipients e-mail addresses that will appear on the `Bcc:` field\n  - **replyTo** - An e-mail address that will appear on the `Reply-To:` field\n  - **inReplyTo** - The message-id this message is replying\n  - **references** - Message-id list\n  - **subject** - The subject of the e-mail\n  - **text** - The plaintext version of the message\n  - **html** - The HTML version of the message\n  - **generateTextFromHTML** - if set to true uses HTML to generate plain text body part from the HTML if the text is not defined\n  - **headers** - An object of additional header fields `{"X-Key-Name": "key value"}` (NB! values are passed as is, you should do your own encoding to 7bit and folding if needed)\n  - **attachments** - An array of attachment objects.\n  - **alternatives** - An array of alternative text contents (in addition to text and html parts)\n  - **envelope** - optional SMTP envelope, if auto generated envelope is not suitable\n  - **messageId** - optional Message-Id value, random value will be generated if not set. Set to false to omit the Message-Id header\n  - **date** - optional Date value, current UTC string will be used if not set\n  - **encoding** - optional transfer encoding for the textual parts (defaults to "quoted-printable")\n  - **charset** - optional output character set for the textual parts (defaults to "utf-8")\n  - **dsn** - An object with methods `success`, `failure` and `delay`. If any of these are set to true, DSN will be used\n\nAll text fields (e-mail addresses, plaintext body, html body) use UTF-8 as the encoding.\nAttachments are streamed as binary.\n\nExample:\n\n```javascript\nvar transport = nodemailer.createTransport("Sendmail");\n\nvar mailOptions = {\n    from: "me@tr.ee",\n    to: "me@tr.ee",\n    subject: "Hello world!",\n    text: "Plaintext body"\n}\n\ntransport.sendMail(mailOptions);\n```\n\n### SendGrid support\n\nNodemailer supports SendGrid [SMTP API](http://docs.sendgrid.com/documentation/api/smtp-api/) out of the box - you can\nuse objects as header values and these are automatically JSONized (and mime encoded if needed).\n\n```javascript\nvar mailOptions = {\n    ...,\n    headers: {\n        \'X-SMTPAPI\': {\n            category : "newuser",\n            sub:{\n                "%name%": ["Žiguli Õllepruul"]\n            }\n        }\n    },\n    subject: "Hello, %name%"\n}\n```\n\nThis also applies to any other service that expects a JSON string as a header value for specified key.\n\n### Generate Text from HTML\n\nIf `generateTextFromHTML` option is set to true, then HTML contents of the mail is automatically converted\nto plaintext format when plaintext content is empty or missing.\n\nFor example\n\n```javascript\nmailOptions = {\n    ...,\n    generateTextFromHTML: true,\n    html: \'<h1>Hello world</h1><p><b>How</b> are you?\',\n    // text: \'\' // no text part\n}\n```\n\nis automatically converted in the backround by Nodemailer to:\n\n```javascript\nmailOptions = {\n    ...,\n    // source html:\n    html: \'<h1>Hello world</h1><p><b>How</b> are you?\',\n    // automatically generated plaintext message:\n    text: "Hello world\\n"+\n          "===========\\n"+\n          "\\n"+\n          "**How** are you?"\n}\n```\n\nAs you can see the output syntax for `generateTextFromHTML` looks similar to markdown, and that\nis exactly the case here - Nodemailer includes a simple HTML to markdown converter. But don\'t\nexpect too much from it, it\'s not full featured or perfect, just some regexes here and there.\n\n### Attachment fields\n\nAttachment object consists of the following properties:\n\n  * **fileName** - filename to be reported as the name of the attached file, use of unicode is allowed (except when using Amazon SES which doesn\'t like it)\n  * **cid** - optional content id for using inline images in HTML message source\n  * **contents** - String or a Buffer contents for the attachment\n  * **filePath** - path to a file or an URL if you want to stream the file instead of including it (better for larger attachments)\n  * **streamSource** - Stream object for arbitrary binary streams if you want to stream the contents (needs to support *pause*/*resume*)\n  * **contentType** - optional content type for the attachment, if not set will be derived from the `fileName` property\n  * **contentDisposition** - optional content disposition type for the attachment, defaults to "attachment"\n\nOne of `contents`, `filePath` or `streamSource` must be specified, if none is\npresent, the attachment will be discarded. Other fields are optional.\n\nAttachments can be added as many as you want.\n\n```javascript\nvar mailOptions = {\n    ...\n    attachments: [\n        {   // utf-8 string as an attachment\n            fileName: "text1.txt",\n            contents: "hello world!"\n        },\n        {   // binary buffer as an attachment\n            fileName: "text2.txt",\n            contents: new Buffer("hello world!","utf-8")\n        },\n        {   // file on disk as an attachment\n            fileName: "text3.txt",\n            filePath: "/path/to/file.txt" // stream this file\n        },\n        {   // fileName and content type is derived from filePath\n            filePath: "/path/to/file.txt"\n        },\n        {   // stream as an attachment\n            fileName: "text4.txt",\n            streamSource: fs.createReadStream("file.txt")\n        },\n        {   // define custom content type for the attachment\n            fileName: "text.bin",\n            contents: "hello world!",\n            contentType: "text/plain"\n        },\n        {   // use URL as an attachment\n            fileName: "license.txt",\n            filePath: "https://raw.github.com/andris9/Nodemailer/master/LICENSE"\n        }\n    ]\n}\n```\n\n### Alternative fields\n\nIn addition to text and HTML, any kind of data can be inserted as an alternative content of the main body - for example a word processing document with the same text as in the HTML field. It is the job of the e-mail client to select and show the best fitting alternative to the reader.\n\nAttahcment object consists of the following properties:\n\n  * **contents** - String or a Buffer contents for the attachment\n  * **contentType** - optional content type for the attachment, if not set will be set to "application/octet-stream"\n  * **contentEncoding** - optional value of how the data is encoded, defaults to "base64"\n\nIf `contents` is empty, the alternative will be discarded. Other fields are optional.\n\n**Usage example:**\n\n```javascript\nvar mailOptions = {\n    ...\n    html: "<b>Hello world!</b>",\n    alternatives: [\n        {\n            contentType: "text/x-web-markdown",\n            contents: "**Hello world!**"\n        }\n    ]\n}\n```\nIf the receiving e-mail client can render messages in Markdown syntax as well, it could prefer\nto display this alternative as the main content of the message instead of the html part.\n\nAlternatives can be added as many as you want.\n\n### Address Formatting\n\nAll the e-mail addresses can be plain e-mail address\n\n```\nfoobar@blurdybloop.com\n```\n\nor with formatted name (includes unicode support)\n\n```\n"Ноде Майлер" <foobar@blurdybloop.com>\n```\n\nTo, Cc and Bcc fields accept comma separated list of e-mails or an array of\nemails or an array of comma separated list of e-mails - use it as you like.\nFormatting can be mixed.\n\n```\n...,\nto: \'foobar@blurdybloop.com, "Ноде Майлер" <bar@blurdybloop.com>, "Name, User" <baz@blurdybloop.com>\',\ncc: [\'foobar@blurdybloop.com\', \'"Ноде Майлер" <bar@blurdybloop.com>, "Name, User" <baz@blurdybloop.com>\']\n...\n```\n\nYou can even use unicode domain and user names, these are automatically converted\nto the supported form\n\n```\n"Unicode Domain" <info@müriaad-polüteism.info>\n```\n\n### SMTP envelope\n\nSMTP envelope is usually auto generated from `from`, `to`, `cc` and `bcc` fields but\nif for some reason you want to specify it yourself, you can do it with `envelope` property.\n\n`envelope` is an object with the following params: `from`, `to`, `cc` and `bcc` just like\nwith regular mail options. You can also use the regular address format, unicode domains etc.\n\n```javascript\nmailOptions = {\n    ...,\n    from: "mailer@kreata.ee",\n    to: "daemon@kreata.ee",\n    envelope: {\n        from: "Daemon <deamon@kreata.ee>",\n        to: "mailer@kreata.ee, Mailer <mailer2@kreata.ee>"\n    }\n}\n```\n\nThe envelope only applies when using SMTP or sendmail, setting envelope has no effect with SES.\n\n### Using Embedded Images\n\nAttachments can be used as embedded images in the HTML body. To use this\nfeature, you need to set additional property of the attachment - `cid` (unique\nidentifier of the file) which is a reference to the attachment file. The same\n`cid` value must be used as the image URL in HTML (using `cid:` as the URL\nprotocol, see example below).\n\n**NB!** the cid value should be as unique as possible!\n\n```javascript\nvar mailOptions = {\n    ...\n    html: "Embedded image: <img src=\'cid:unique@kreata.ee\' />",\n    attachments: [{\n        filename: "image.png",\n        filePath: "/path/to/file",\n        cid: "unique@kreata.ee" //same cid value as in the html img src\n    }]\n}\n```\n\n**Automatic embedding images**\n\nIf you want to convert images in the HTML to embedded images automatically, you can\nset mail option `forceEmbeddedImages` to true. In this case all images in\nthe HTML that are either using an absolute URL (http://...) or absolute file path\n(/path/to/file) are replaced with embedded attachments.\n\nFor example when using this code\n\n```javascript\nvar mailOptions = {\n    forceEmbeddedImages: true\n    html: \'Embedded image: <img src="http://example.com/image.png">\'\n};\n```\n\nThe image linked is fetched and added automatically as an attachment and the url\nin the HTML is replaced automatically with a proper `cid:` string.\n\n## Return callback\n\nReturn callback gets two parameters\n\n  * **error** - an error object if the message failed\n  * **responseStatus** - an object with some information about the status on success\n    * **responseStatus.messageId** - message ID used with the message\n\n> Different transport methods may expose additional properties to the `responseStatus` object, eg. *direct* transport exposes `statusHandler`, see the docs for the particular transport type for more info.\n\nExample:\n\n```javascript\nnodemailer.sendMail(mailOptions, function(error, responseStatus){\n    if(!error){\n        console.log(responseStatus.message); // response from the server\n        console.log(responseStatus.messageId); // Message-ID value used\n    }\n});\n```\n\n**NB!** Message-ID used might not be the same that reaches recipients inbox since some providers (like **SES**) may change the value.\n\n\n## Custom Transport Methods\n\nIf you want to use a custom transport method you need to define a constructor function with the following API\n\n```javascript\nfunction MyCustomHandler(options){}\nMyCustomHandler.prototype.sendMail = function(emailMessage, callback){};\nMyCustomHandler.prototype.close = function(closeCallback){};\n```\n\nWhere\n\n  * `options` is the optional options object passed to `createTransport`\n  * `sendMail()` is the function that is going to deliver the message\n  * `emailMessage` is a paused [MailComposer](https://github.com/andris9/mailcomposer#create-a-new-mailcomposer-instance) object. You should call `emailMessage.streamMessage()` once you have everything set up for streaming the message\n  * `callback` is the function to run once the message has been sent or an error occurred. The response object *should* include `messageId` property (you can get the value from `emailMessage._messageId`)\n  * `close()` is an optional method (no need to define it) to close the transport method\n  * `closeCallback` is the function to run once the transport method is closed\n\n### Example usage\n\n```javascript\nvar nodemailer = require("nodemailer");\n// Pipes all messages to stdout\nfunction MyTransport(options){\n    this.options = options;\n}\nMyTransport.prototype.sendMail = function(emailMessage, callback) {\n    console.log("Envelope: ", emailMessage.getEnvelope());\n    emailMessage.pipe(process.stdout);\n    emailMessage.on("error", function(err){\n        callback(err);\n    });\n    emailMessage.on("end", function(){\n        callback(null, {\n            messageId: emailMessage._messageId\n        });\n    });\n    // everything set up, start streaming\n    emailMessage.streamMessage();\n};\n// Use MyTransport as the transport method\nvar transport = nodemailer.createTransport(MyTransport, {\n    name: "my.host" // hostname for generating Message-ID values\n});\ntransport.sendMail({\n    from: "sender@example.com",\n    to: "receiver@example.com",\n    subject: "hello",\n    text: "world"\n}, function(err, response){\n    console.log(err || response);\n});\n```\n\n## Command line usage\n\n**NB!** Command line usage was removed from v0.4\n\n## Tests\n\nRun the tests with npm in Nodemailer\'s directory\n\n```\nnpm test\n```\n\nThere aren\'t currently many tests for Nodemailer but there are a lot of tests\nin the modules that are used to generate the raw e-mail body and to use the\nSMTP client connection.\n\n## Tweaking\n\nNodemailer in itself is actually more like a wrapper for my other modules\n[mailcomposer](https://github.com/andris9/mailcomposer) for composing the raw message stream\nand [simplesmtp](https://github.com/andris9/simplesmtp) for delivering it, by providing an\nunified API. If there\'s some problems with particular parts of the\nmessage composing/sending process you should look at the  appropriate module.\n\n## License\n\n**Nodemailer** is licensed under [MIT license](https://github.com/andris9/Nodemailer/blob/master/LICENSE). Basically you can do whatever you want to with it.\n\n[![Bitdeli Badge](https://d2weczhvl823v0.cloudfront.net/andris9/nodemailer/trend.png)](https://bitdeli.com/free "Bitdeli Badge")\n',
176 silly resolved     readmeFilename: 'README.md',
176 silly resolved     bugs: { url: 'https://github.com/andris9/nodemailer/issues' },
176 silly resolved     _id: 'nodemailer@0.6.0',
176 silly resolved     dist: { shasum: '1a4bab40aa86146ef6caa87f935d106f84869eb0' },
176 silly resolved     _from: 'nodemailer@',
176 silly resolved     _resolved: 'https://registry.npmjs.org/nodemailer/-/nodemailer-0.6.0.tgz' } ]
177 info install nodemailer@0.6.0 into /home/vagrant/openclothes
178 info installOne nodemailer@0.6.0
179 info /home/vagrant/openclothes/node_modules/nodemailer unbuild
180 verbose tar unpack /home/vagrant/.npm/nodemailer/0.6.0/package.tgz
181 silly lockFile d2f114c2-nclothes-node-modules-nodemailer tar:///home/vagrant/openclothes/node_modules/nodemailer
182 verbose lock tar:///home/vagrant/openclothes/node_modules/nodemailer /home/vagrant/.npm/d2f114c2-nclothes-node-modules-nodemailer.lock
183 silly lockFile b0024fe3-npm-nodemailer-0-6-0-package-tgz tar:///home/vagrant/.npm/nodemailer/0.6.0/package.tgz
184 verbose lock tar:///home/vagrant/.npm/nodemailer/0.6.0/package.tgz /home/vagrant/.npm/b0024fe3-npm-nodemailer-0-6-0-package-tgz.lock
185 silly gunzTarPerm modes [ '755', '644' ]
186 silly gunzTarPerm extractEntry package.json
187 silly gunzTarPerm modified mode [ 'package.json', 384, 420 ]
188 silly gunzTarPerm extractEntry .npmignore
189 silly gunzTarPerm modified mode [ '.npmignore', 384, 420 ]
190 silly gunzTarPerm extractEntry README.md
191 silly gunzTarPerm modified mode [ 'README.md', 384, 420 ]
192 silly gunzTarPerm extractEntry LICENSE
193 silly gunzTarPerm modified mode [ 'LICENSE', 384, 420 ]
194 silly gunzTarPerm extractEntry .travis.yml
195 silly gunzTarPerm modified mode [ '.travis.yml', 384, 420 ]
196 silly gunzTarPerm extractEntry CHANGELOG.md
197 silly gunzTarPerm modified mode [ 'CHANGELOG.md', 384, 420 ]
198 silly gunzTarPerm extractEntry CONTRIBUTING.md
199 silly gunzTarPerm modified mode [ 'CONTRIBUTING.md', 384, 420 ]
200 silly gunzTarPerm extractEntry examples/example_alternative.js
201 silly gunzTarPerm modified mode [ 'examples/example_alternative.js', 384, 420 ]
202 silly gunzTarPerm extractEntry examples/example_direct.js
203 silly gunzTarPerm modified mode [ 'examples/example_direct.js', 384, 420 ]
204 silly gunzTarPerm extractEntry examples/example_dkim.js
205 silly gunzTarPerm modified mode [ 'examples/example_dkim.js', 384, 420 ]
206 silly gunzTarPerm extractEntry examples/example_sendmail.js
207 silly gunzTarPerm modified mode [ 'examples/example_sendmail.js', 384, 420 ]
208 silly gunzTarPerm extractEntry examples/example_ses.js
209 silly gunzTarPerm modified mode [ 'examples/example_ses.js', 384, 420 ]
210 silly gunzTarPerm extractEntry examples/example_autoembedding.js
211 silly gunzTarPerm modified mode [ 'examples/example_autoembedding.js', 384, 420 ]
212 silly gunzTarPerm extractEntry examples/example_smtp.js
213 silly gunzTarPerm modified mode [ 'examples/example_smtp.js', 384, 420 ]
214 silly gunzTarPerm extractEntry examples/example_xoauth.js
215 silly gunzTarPerm modified mode [ 'examples/example_xoauth.js', 384, 420 ]
216 silly gunzTarPerm extractEntry examples/example_xoauth2.js
217 silly gunzTarPerm modified mode [ 'examples/example_xoauth2.js', 384, 420 ]
218 silly gunzTarPerm extractEntry examples/example_short.js
219 silly gunzTarPerm modified mode [ 'examples/example_short.js', 384, 420 ]
220 silly gunzTarPerm extractEntry examples/nyan.gif
221 silly gunzTarPerm modified mode [ 'examples/nyan.gif', 384, 420 ]
222 silly gunzTarPerm extractEntry examples/test_private.pem
223 silly gunzTarPerm modified mode [ 'examples/test_private.pem', 384, 420 ]
224 silly gunzTarPerm extractEntry lib/helpers.js
225 silly gunzTarPerm modified mode [ 'lib/helpers.js', 384, 420 ]
226 silly gunzTarPerm extractEntry lib/nodemailer.js
227 silly gunzTarPerm modified mode [ 'lib/nodemailer.js', 384, 420 ]
228 silly gunzTarPerm extractEntry lib/transport.js
229 silly gunzTarPerm modified mode [ 'lib/transport.js', 384, 420 ]
230 silly gunzTarPerm extractEntry lib/wellknown.js
231 silly gunzTarPerm modified mode [ 'lib/wellknown.js', 384, 420 ]
232 silly gunzTarPerm extractEntry lib/xoauth.js
233 silly gunzTarPerm modified mode [ 'lib/xoauth.js', 384, 420 ]
234 silly gunzTarPerm extractEntry lib/engines/direct.js
235 silly gunzTarPerm modified mode [ 'lib/engines/direct.js', 384, 420 ]
236 silly gunzTarPerm extractEntry lib/engines/pickup.js
237 silly gunzTarPerm modified mode [ 'lib/engines/pickup.js', 384, 420 ]
238 silly gunzTarPerm extractEntry lib/engines/sendmail.js
239 silly gunzTarPerm modified mode [ 'lib/engines/sendmail.js', 384, 420 ]
240 silly gunzTarPerm extractEntry lib/engines/ses.js
241 silly gunzTarPerm modified mode [ 'lib/engines/ses.js', 384, 420 ]
242 silly gunzTarPerm extractEntry lib/engines/smtp.js
243 silly gunzTarPerm modified mode [ 'lib/engines/smtp.js', 384, 420 ]
244 silly gunzTarPerm extractEntry lib/engines/stub.js
245 silly gunzTarPerm modified mode [ 'lib/engines/stub.js', 384, 420 ]
246 silly gunzTarPerm extractEntry test/nodemailer.js
247 silly gunzTarPerm modified mode [ 'test/nodemailer.js', 384, 420 ]
248 silly gunzTarPerm extractEntry test/mock/sendmail
249 silly gunzTarPerm modified mode [ 'test/mock/sendmail', 384, 420 ]
250 silly lockFile d2f114c2-nclothes-node-modules-nodemailer tar:///home/vagrant/openclothes/node_modules/nodemailer
251 silly lockFile d2f114c2-nclothes-node-modules-nodemailer tar:///home/vagrant/openclothes/node_modules/nodemailer
252 silly lockFile b0024fe3-npm-nodemailer-0-6-0-package-tgz tar:///home/vagrant/.npm/nodemailer/0.6.0/package.tgz
253 silly lockFile b0024fe3-npm-nodemailer-0-6-0-package-tgz tar:///home/vagrant/.npm/nodemailer/0.6.0/package.tgz
254 info preinstall nodemailer@0.6.0
255 verbose readDependencies using package.json deps
256 verbose readDependencies using package.json deps
257 verbose cache add [ 'directmail@~0.1.6', null ]
258 verbose cache add name=undefined spec="directmail@~0.1.6" args=["directmail@~0.1.6",null]
259 verbose parsed url { protocol: null,
259 verbose parsed url   slashes: null,
259 verbose parsed url   auth: null,
259 verbose parsed url   host: null,
259 verbose parsed url   port: null,
259 verbose parsed url   hostname: null,
259 verbose parsed url   hash: null,
259 verbose parsed url   search: null,
259 verbose parsed url   query: null,
259 verbose parsed url   pathname: 'directmail@~0.1.6',
259 verbose parsed url   path: 'directmail@~0.1.6',
259 verbose parsed url   href: 'directmail@~0.1.6' }
260 verbose cache add name="directmail" spec="~0.1.6" args=["directmail","~0.1.6"]
261 verbose parsed url { protocol: null,
261 verbose parsed url   slashes: null,
261 verbose parsed url   auth: null,
261 verbose parsed url   host: null,
261 verbose parsed url   port: null,
261 verbose parsed url   hostname: null,
261 verbose parsed url   hash: null,
261 verbose parsed url   search: null,
261 verbose parsed url   query: null,
261 verbose parsed url   pathname: '~0.1.6',
261 verbose parsed url   path: '~0.1.6',
261 verbose parsed url   href: '~0.1.6' }
262 verbose addNamed [ 'directmail', '~0.1.6' ]
263 verbose addNamed [ null, '>=0.1.6-0 <0.2.0-0' ]
264 silly lockFile a048f12c-directmail-0-1-6 directmail@~0.1.6
265 verbose lock directmail@~0.1.6 /home/vagrant/.npm/a048f12c-directmail-0-1-6.lock
266 verbose cache add [ 'he@~0.3.6', null ]
267 verbose cache add name=undefined spec="he@~0.3.6" args=["he@~0.3.6",null]
268 verbose parsed url { protocol: null,
268 verbose parsed url   slashes: null,
268 verbose parsed url   auth: null,
268 verbose parsed url   host: null,
268 verbose parsed url   port: null,
268 verbose parsed url   hostname: null,
268 verbose parsed url   hash: null,
268 verbose parsed url   search: null,
268 verbose parsed url   query: null,
268 verbose parsed url   pathname: 'he@~0.3.6',
268 verbose parsed url   path: 'he@~0.3.6',
268 verbose parsed url   href: 'he@~0.3.6' }
269 verbose cache add name="he" spec="~0.3.6" args=["he","~0.3.6"]
270 verbose parsed url { protocol: null,
270 verbose parsed url   slashes: null,
270 verbose parsed url   auth: null,
270 verbose parsed url   host: null,
270 verbose parsed url   port: null,
270 verbose parsed url   hostname: null,
270 verbose parsed url   hash: null,
270 verbose parsed url   search: null,
270 verbose parsed url   query: null,
270 verbose parsed url   pathname: '~0.3.6',
270 verbose parsed url   path: '~0.3.6',
270 verbose parsed url   href: '~0.3.6' }
271 verbose addNamed [ 'he', '~0.3.6' ]
272 verbose addNamed [ null, '>=0.3.6-0 <0.4.0-0' ]
273 silly lockFile 92ca361f-he-0-3-6 he@~0.3.6
274 verbose lock he@~0.3.6 /home/vagrant/.npm/92ca361f-he-0-3-6.lock
275 verbose cache add [ 'public-address@~0.1.0', null ]
276 verbose cache add name=undefined spec="public-address@~0.1.0" args=["public-address@~0.1.0",null]
277 verbose parsed url { protocol: null,
277 verbose parsed url   slashes: null,
277 verbose parsed url   auth: null,
277 verbose parsed url   host: null,
277 verbose parsed url   port: null,
277 verbose parsed url   hostname: null,
277 verbose parsed url   hash: null,
277 verbose parsed url   search: null,
277 verbose parsed url   query: null,
277 verbose parsed url   pathname: 'public-address@~0.1.0',
277 verbose parsed url   path: 'public-address@~0.1.0',
277 verbose parsed url   href: 'public-address@~0.1.0' }
278 verbose cache add name="public-address" spec="~0.1.0" args=["public-address","~0.1.0"]
279 verbose parsed url { protocol: null,
279 verbose parsed url   slashes: null,
279 verbose parsed url   auth: null,
279 verbose parsed url   host: null,
279 verbose parsed url   port: null,
279 verbose parsed url   hostname: null,
279 verbose parsed url   hash: null,
279 verbose parsed url   search: null,
279 verbose parsed url   query: null,
279 verbose parsed url   pathname: '~0.1.0',
279 verbose parsed url   path: '~0.1.0',
279 verbose parsed url   href: '~0.1.0' }
280 verbose addNamed [ 'public-address', '~0.1.0' ]
281 verbose addNamed [ null, '>=0.1.0-0 <0.2.0-0' ]
282 silly lockFile 0d2be6b6-public-address-0-1-0 public-address@~0.1.0
283 verbose lock public-address@~0.1.0 /home/vagrant/.npm/0d2be6b6-public-address-0-1-0.lock
284 verbose cache add [ 'readable-stream@~1.1.9', null ]
285 verbose cache add name=undefined spec="readable-stream@~1.1.9" args=["readable-stream@~1.1.9",null]
286 verbose parsed url { protocol: null,
286 verbose parsed url   slashes: null,
286 verbose parsed url   auth: null,
286 verbose parsed url   host: null,
286 verbose parsed url   port: null,
286 verbose parsed url   hostname: null,
286 verbose parsed url   hash: null,
286 verbose parsed url   search: null,
286 verbose parsed url   query: null,
286 verbose parsed url   pathname: 'readable-stream@~1.1.9',
286 verbose parsed url   path: 'readable-stream@~1.1.9',
286 verbose parsed url   href: 'readable-stream@~1.1.9' }
287 verbose cache add name="readable-stream" spec="~1.1.9" args=["readable-stream","~1.1.9"]
288 verbose parsed url { protocol: null,
288 verbose parsed url   slashes: null,
288 verbose parsed url   auth: null,
288 verbose parsed url   host: null,
288 verbose parsed url   port: null,
288 verbose parsed url   hostname: null,
288 verbose parsed url   hash: null,
288 verbose parsed url   search: null,
288 verbose parsed url   query: null,
288 verbose parsed url   pathname: '~1.1.9',
288 verbose parsed url   path: '~1.1.9',
288 verbose parsed url   href: '~1.1.9' }
289 verbose addNamed [ 'readable-stream', '~1.1.9' ]
290 verbose addNamed [ null, '>=1.1.9-0 <1.2.0-0' ]
291 silly lockFile f517707b-readable-stream-1-1-9 readable-stream@~1.1.9
292 verbose lock readable-stream@~1.1.9 /home/vagrant/.npm/f517707b-readable-stream-1-1-9.lock
293 verbose cache add [ 'mailcomposer@~0.2.7', null ]
294 verbose cache add name=undefined spec="mailcomposer@~0.2.7" args=["mailcomposer@~0.2.7",null]
295 verbose parsed url { protocol: null,
295 verbose parsed url   slashes: null,
295 verbose parsed url   auth: null,
295 verbose parsed url   host: null,
295 verbose parsed url   port: null,
295 verbose parsed url   hostname: null,
295 verbose parsed url   hash: null,
295 verbose parsed url   search: null,
295 verbose parsed url   query: null,
295 verbose parsed url   pathname: 'mailcomposer@~0.2.7',
295 verbose parsed url   path: 'mailcomposer@~0.2.7',
295 verbose parsed url   href: 'mailcomposer@~0.2.7' }
296 verbose cache add name="mailcomposer" spec="~0.2.7" args=["mailcomposer","~0.2.7"]
297 verbose parsed url { protocol: null,
297 verbose parsed url   slashes: null,
297 verbose parsed url   auth: null,
297 verbose parsed url   host: null,
297 verbose parsed url   port: null,
297 verbose parsed url   hostname: null,
297 verbose parsed url   hash: null,
297 verbose parsed url   search: null,
297 verbose parsed url   query: null,
297 verbose parsed url   pathname: '~0.2.7',
297 verbose parsed url   path: '~0.2.7',
297 verbose parsed url   href: '~0.2.7' }
298 verbose addNamed [ 'mailcomposer', '~0.2.7' ]
299 verbose addNamed [ null, '>=0.2.7-0 <0.3.0-0' ]
300 silly lockFile c5995a0c-mailcomposer-0-2-7 mailcomposer@~0.2.7
301 verbose lock mailcomposer@~0.2.7 /home/vagrant/.npm/c5995a0c-mailcomposer-0-2-7.lock
302 verbose cache add [ 'simplesmtp@~0.2 || ~0.3', null ]
303 verbose cache add name=undefined spec="simplesmtp@~0.2 || ~0.3" args=["simplesmtp@~0.2 || ~0.3",null]
304 verbose parsed url { protocol: null,
304 verbose parsed url   slashes: null,
304 verbose parsed url   auth: null,
304 verbose parsed url   host: null,
304 verbose parsed url   port: null,
304 verbose parsed url   hostname: null,
304 verbose parsed url   hash: null,
304 verbose parsed url   search: null,
304 verbose parsed url   query: null,
304 verbose parsed url   pathname: 'simplesmtp@~0.2%20||%20~0.3',
304 verbose parsed url   path: 'simplesmtp@~0.2%20||%20~0.3',
304 verbose parsed url   href: 'simplesmtp@~0.2%20||%20~0.3' }
305 verbose cache add name="simplesmtp" spec="~0.2 || ~0.3" args=["simplesmtp","~0.2 || ~0.3"]
306 verbose parsed url { protocol: null,
306 verbose parsed url   slashes: null,
306 verbose parsed url   auth: null,
306 verbose parsed url   host: null,
306 verbose parsed url   port: null,
306 verbose parsed url   hostname: null,
306 verbose parsed url   hash: null,
306 verbose parsed url   search: null,
306 verbose parsed url   query: null,
306 verbose parsed url   pathname: '~0.2%20||%20~0.3',
306 verbose parsed url   path: '~0.2%20||%20~0.3',
306 verbose parsed url   href: '~0.2%20||%20~0.3' }
307 verbose addNamed [ 'simplesmtp', '~0.2 || ~0.3' ]
308 verbose addNamed [ null, '>=0.2.0-0 <0.3.0-0||>=0.3.0-0 <0.4.0-0' ]
309 silly lockFile 53ed49a0-simplesmtp-0-2-0-3 simplesmtp@~0.2 || ~0.3
310 verbose lock simplesmtp@~0.2 || ~0.3 /home/vagrant/.npm/53ed49a0-simplesmtp-0-2-0-3.lock
311 silly addNameRange { name: 'directmail',
311 silly addNameRange   range: '>=0.1.6-0 <0.2.0-0',
311 silly addNameRange   hasData: false }
312 silly addNameRange { name: 'he', range: '>=0.3.6-0 <0.4.0-0', hasData: false }
313 silly addNameRange { name: 'public-address',
313 silly addNameRange   range: '>=0.1.0-0 <0.2.0-0',
313 silly addNameRange   hasData: false }
314 silly addNameRange { name: 'readable-stream',
314 silly addNameRange   range: '>=1.1.9-0 <1.2.0-0',
314 silly addNameRange   hasData: false }
315 silly addNameRange { name: 'mailcomposer',
315 silly addNameRange   range: '>=0.2.7-0 <0.3.0-0',
315 silly addNameRange   hasData: false }
316 silly addNameRange { name: 'simplesmtp',
316 silly addNameRange   range: '>=0.2.0-0 <0.3.0-0||>=0.3.0-0 <0.4.0-0',
316 silly addNameRange   hasData: false }
317 verbose url raw directmail
318 verbose url resolving [ 'https://registry.npmjs.org/', './directmail' ]
319 verbose url resolved https://registry.npmjs.org/directmail
320 info trying registry request attempt 1 at 00:51:55
321 http GET https://registry.npmjs.org/directmail
322 verbose url raw he
323 verbose url resolving [ 'https://registry.npmjs.org/', './he' ]
324 verbose url resolved https://registry.npmjs.org/he
325 info trying registry request attempt 1 at 00:51:55
326 http GET https://registry.npmjs.org/he
327 verbose url raw public-address
328 verbose url resolving [ 'https://registry.npmjs.org/', './public-address' ]
329 verbose url resolved https://registry.npmjs.org/public-address
330 info trying registry request attempt 1 at 00:51:55
331 http GET https://registry.npmjs.org/public-address
332 verbose url raw readable-stream
333 verbose url resolving [ 'https://registry.npmjs.org/', './readable-stream' ]
334 verbose url resolved https://registry.npmjs.org/readable-stream
335 info trying registry request attempt 1 at 00:51:56
336 http GET https://registry.npmjs.org/readable-stream
337 verbose url raw mailcomposer
338 verbose url resolving [ 'https://registry.npmjs.org/', './mailcomposer' ]
339 verbose url resolved https://registry.npmjs.org/mailcomposer
340 info trying registry request attempt 1 at 00:51:56
341 http GET https://registry.npmjs.org/mailcomposer
342 verbose url raw simplesmtp
343 verbose url resolving [ 'https://registry.npmjs.org/', './simplesmtp' ]
344 verbose url resolved https://registry.npmjs.org/simplesmtp
345 info trying registry request attempt 1 at 00:51:56
346 http GET https://registry.npmjs.org/simplesmtp
347 http 200 https://registry.npmjs.org/readable-stream
348 silly registry.get cb [ 200,
348 silly registry.get   { date: 'Fri, 14 Feb 2014 00:51:56 GMT',
348 silly registry.get     server: 'CouchDB/1.5.0 (Erlang OTP/R16B)',
348 silly registry.get     etag: '"77BJ62UGK6VPLDD1H19WB46VN"',
348 silly registry.get     'content-type': 'application/json',
348 silly registry.get     via: '1.1 varnish',
348 silly registry.get     'cache-control': 'max-age=1',
348 silly registry.get     'content-length': '48944',
348 silly registry.get     'accept-ranges': 'bytes',
348 silly registry.get     age: '5538',
348 silly registry.get     'x-served-by': 'cache-v42-ASH, cache-sv94-SJC3',
348 silly registry.get     'x-cache': 'MISS, HIT',
348 silly registry.get     'x-cache-hits': '0, 1',
348 silly registry.get     'x-timer': 'S1392333576.255124807,VS0,VS35,VE136,VE5540014',
348 silly registry.get     vary: 'Accept',
348 silly registry.get     'keep-alive': 'timeout=10, max=50',
348 silly registry.get     connection: 'Keep-Alive' } ]
349 http 200 https://registry.npmjs.org/directmail
350 silly registry.get cb [ 200,
350 silly registry.get   { date: 'Fri, 14 Feb 2014 00:51:56 GMT',
350 silly registry.get     server: 'CouchDB/1.5.0 (Erlang OTP/R16B)',
350 silly registry.get     etag: '"1C5F7RBL0YF0FQENSDBJNDTUD"',
350 silly registry.get     'content-type': 'application/json',
350 silly registry.get     via: '1.1 varnish',
350 silly registry.get     'cache-control': 'max-age=1',
350 silly registry.get     'content-length': '24463',
350 silly registry.get     'accept-ranges': 'bytes',
350 silly registry.get     age: '195566',
350 silly registry.get     'x-served-by': 'cache-v43-ASH, cache-sv62-SJC3',
350 silly registry.get     'x-cache': 'HIT, HIT',
350 silly registry.get     'x-cache-hits': '1130, 1',
350 silly registry.get     'x-timer': 'S1392244080.537205935,VS0,VS35,VE35,VE95035745',
350 silly registry.get     vary: 'Accept',
350 silly registry.get     'keep-alive': 'timeout=10, max=50',
350 silly registry.get     connection: 'Keep-Alive' } ]
351 http 200 https://registry.npmjs.org/public-address
352 silly registry.get cb [ 200,
352 silly registry.get   { date: 'Fri, 14 Feb 2014 00:51:56 GMT',
352 silly registry.get     server: 'CouchDB/1.5.0 (Erlang OTP/R16B)',
352 silly registry.get     etag: '"AO8CBHGAVO9Q30AVWS6FPZICN"',
352 silly registry.get     'content-type': 'application/json',
352 silly registry.get     via: '1.1 varnish',
352 silly registry.get     'cache-control': 'max-age=1',
352 silly registry.get     'content-length': '3737',
352 silly registry.get     'accept-ranges': 'bytes',
352 silly registry.get     age: '517',
352 silly registry.get     'x-served-by': 'cache-v43-ASH, cache-sv94-SJC3',
352 silly registry.get     'x-cache': 'HIT, HIT',
352 silly registry.get     'x-cache-hits': '1, 1',
352 silly registry.get     'x-timer': 'S1392289864.093789339,VS0,VS37,VE108,VE49252256',
352 silly registry.get     vary: 'Accept',
352 silly registry.get     'keep-alive': 'timeout=10, max=50',
352 silly registry.get     connection: 'Keep-Alive' } ]
353 silly addNameRange number 2 { name: 'readable-stream',
353 silly addNameRange   range: '>=1.1.9-0 <1.2.0-0',
353 silly addNameRange   hasData: true }
354 silly addNameRange versions [ 'readable-stream',
354 silly addNameRange   [ '0.0.1',
354 silly addNameRange     '0.0.2',
354 silly addNameRange     '0.0.3',
354 silly addNameRange     '0.0.4',
354 silly addNameRange     '0.1.0',
354 silly addNameRange     '0.2.0',
354 silly addNameRange     '0.3.0',
354 silly addNameRange     '0.3.1',
354 silly addNameRange     '1.0.0',
354 silly addNameRange     '1.0.1',
354 silly addNameRange     '1.0.2',
354 silly addNameRange     '1.0.15',
354 silly addNameRange     '1.0.17',
354 silly addNameRange     '1.1.7',
354 silly addNameRange     '1.1.8',
354 silly addNameRange     '1.1.9',
354 silly addNameRange     '1.0.24',
354 silly addNameRange     '1.0.25',
354 silly addNameRange     '1.1.10',
354 silly addNameRange     '1.0.25-1' ] ]
355 verbose addNamed [ 'readable-stream', '1.1.10' ]
356 verbose addNamed [ '1.1.10', '1.1.10' ]
357 silly lockFile 987e367e-readable-stream-1-1-10 readable-stream@1.1.10
358 verbose lock readable-stream@1.1.10 /home/vagrant/.npm/987e367e-readable-stream-1-1-10.lock
359 http 200 https://registry.npmjs.org/mailcomposer
360 silly registry.get cb [ 200,
360 silly registry.get   { date: 'Fri, 14 Feb 2014 00:51:56 GMT',
360 silly registry.get     server: 'CouchDB/1.5.0 (Erlang OTP/R16B)',
360 silly registry.get     etag: '"642M70QVCN6OC16DABG9AX9RS"',
360 silly registry.get     'content-type': 'application/json',
360 silly registry.get     via: '1.1 varnish',
360 silly registry.get     'cache-control': 'max-age=1',
360 silly registry.get     'content-length': '56976',
360 silly registry.get     'accept-ranges': 'bytes',
360 silly registry.get     age: '2593',
360 silly registry.get     'x-served-by': 'cache-v42-ASH, cache-sv61-SJC3',
360 silly registry.get     'x-cache': 'HIT, HIT',
360 silly registry.get     'x-cache-hits': '1, 1',
360 silly registry.get     'x-timer': 'S1392223042.111010075,VS0,VS36,VE117,VE116074192',
360 silly registry.get     vary: 'Accept',
360 silly registry.get     'keep-alive': 'timeout=10, max=50',
360 silly registry.get     connection: 'Keep-Alive' } ]
361 silly addNameRange number 2 { name: 'directmail',
361 silly addNameRange   range: '>=0.1.6-0 <0.2.0-0',
361 silly addNameRange   hasData: true }
362 silly addNameRange versions [ 'directmail',
362 silly addNameRange   [ '0.1.0', '0.1.1', '0.1.2', '0.1.3', '0.1.4', '0.1.5', '0.1.6' ] ]
363 verbose addNamed [ 'directmail', '0.1.6' ]
364 verbose addNamed [ '0.1.6', '0.1.6' ]
365 silly lockFile 27ceb7c0-directmail-0-1-6 directmail@0.1.6
366 verbose lock directmail@0.1.6 /home/vagrant/.npm/27ceb7c0-directmail-0-1-6.lock
367 silly lockFile a0f976f2-tream-readable-stream-1-1-10-tgz https://registry.npmjs.org/readable-stream/-/readable-stream-1.1.10.tgz
368 verbose lock https://registry.npmjs.org/readable-stream/-/readable-stream-1.1.10.tgz /home/vagrant/.npm/a0f976f2-tream-readable-stream-1-1-10-tgz.lock
369 silly addNameRange number 2 { name: 'public-address',
369 silly addNameRange   range: '>=0.1.0-0 <0.2.0-0',
369 silly addNameRange   hasData: true }
370 silly addNameRange versions [ 'public-address', [ '0.1.0' ] ]
371 verbose addNamed [ 'public-address', '0.1.0' ]
372 verbose addNamed [ '0.1.0', '0.1.0' ]
373 silly lockFile fc4818ff-public-address-0-1-0 public-address@0.1.0
374 verbose lock public-address@0.1.0 /home/vagrant/.npm/fc4818ff-public-address-0-1-0.lock
375 verbose addRemoteTarball [ 'https://registry.npmjs.org/readable-stream/-/readable-stream-1.1.10.tgz',
375 verbose addRemoteTarball   'd4dc2e5319e9c90d1e71c69390ef62cd90827f65' ]
376 silly lockFile 759b95dc--directmail-directmail-0-1-6-tgz https://registry.npmjs.org/directmail/-/directmail-0.1.6.tgz
377 verbose lock https://registry.npmjs.org/directmail/-/directmail-0.1.6.tgz /home/vagrant/.npm/759b95dc--directmail-directmail-0-1-6-tgz.lock
378 http 200 https://registry.npmjs.org/simplesmtp
379 silly registry.get cb [ 200,
379 silly registry.get   { date: 'Fri, 14 Feb 2014 00:51:56 GMT',
379 silly registry.get     server: 'CouchDB/1.5.0 (Erlang OTP/R16B)',
379 silly registry.get     etag: '"4PEDR26HD4V7G3XWIRP50WSAU"',
379 silly registry.get     'content-type': 'application/json',
379 silly registry.get     via: '1.1 varnish',
379 silly registry.get     'cache-control': 'max-age=1',
379 silly registry.get     'content-length': '68692',
379 silly registry.get     'accept-ranges': 'bytes',
379 silly registry.get     age: '56545',
379 silly registry.get     'x-served-by': 'cache-v43-ASH, cache-sv94-SJC3',
379 silly registry.get     'x-cache': 'HIT, HIT',
379 silly registry.get     'x-cache-hits': '1, 1',
379 silly registry.get     'x-timer': 'S1392282625.193514347,VS0,VS36,VE45,VE56491232',
379 silly registry.get     vary: 'Accept',
379 silly registry.get     'keep-alive': 'timeout=10, max=49',
379 silly registry.get     connection: 'Keep-Alive' } ]
380 info retry fetch attempt 1 at 00:51:56
381 verbose fetch to= /home/vagrant/tmp/npm-2653-guL4N6pB/1392339116602-0.8731026493478566/tmp.tgz
382 silly lockFile 479206a1-address-public-address-0-1-0-tgz https://registry.npmjs.org/public-address/-/public-address-0.1.0.tgz
383 verbose lock https://registry.npmjs.org/public-address/-/public-address-0.1.0.tgz /home/vagrant/.npm/479206a1-address-public-address-0-1-0-tgz.lock
384 verbose addRemoteTarball [ 'https://registry.npmjs.org/directmail/-/directmail-0.1.6.tgz',
384 verbose addRemoteTarball   '21add6a35cf70e6050b3aee1a816c88149937748' ]
385 http GET https://registry.npmjs.org/readable-stream/-/readable-stream-1.1.10.tgz
386 http 200 https://registry.npmjs.org/he
387 silly registry.get cb [ 200,
387 silly registry.get   { date: 'Fri, 14 Feb 2014 00:51:56 GMT',
387 silly registry.get     server: 'CouchDB/1.5.0 (Erlang OTP/R16B)',
387 silly registry.get     etag: '"9BMN6AY5UTKMXNE6OJDSV8OHO"',
387 silly registry.get     'content-type': 'application/json',
387 silly registry.get     via: '1.1 varnish',
387 silly registry.get     'cache-control': 'max-age=1',
387 silly registry.get     'content-length': '119752',
387 silly registry.get     'accept-ranges': 'bytes',
387 silly registry.get     age: '1036',
387 silly registry.get     'x-served-by': 'cache-v36-ASH, cache-sv61-SJC3',
387 silly registry.get     'x-cache': 'HIT, HIT',
387 silly registry.get     'x-cache-hits': '1, 1',
387 silly registry.get     'x-timer': 'S1392298953.451185465,VS0,VS38,VE109,VE40162858',
387 silly registry.get     vary: 'Accept',
387 silly registry.get     'keep-alive': 'timeout=10, max=50',
387 silly registry.get     connection: 'Keep-Alive' } ]
388 verbose addRemoteTarball [ 'https://registry.npmjs.org/public-address/-/public-address-0.1.0.tgz',
388 verbose addRemoteTarball   '92e6ae2d69f90da0eaf7ca5a74f1d3e7aadc8db5' ]
389 info retry fetch attempt 1 at 00:51:56
390 verbose fetch to= /home/vagrant/tmp/npm-2653-guL4N6pB/1392339116621-0.968885759357363/tmp.tgz
391 silly addNameRange number 2 { name: 'mailcomposer',
391 silly addNameRange   range: '>=0.2.7-0 <0.3.0-0',
391 silly addNameRange   hasData: true }
392 silly addNameRange versions [ 'mailcomposer',
392 silly addNameRange   [ '0.1.0',
392 silly addNameRange     '0.1.1',
392 silly addNameRange     '0.1.2',
392 silly addNameRange     '0.1.3',
392 silly addNameRange     '0.1.4',
392 silly addNameRange     '0.1.5',
392 silly addNameRange     '0.1.6',
392 silly addNameRange     '0.1.7',
392 silly addNameRange     '0.1.8',
392 silly addNameRange     '0.1.9',
392 silly addNameRange     '0.1.10',
392 silly addNameRange     '0.1.11',
392 silly addNameRange     '0.1.12',
392 silly addNameRange     '0.1.13',
392 silly addNameRange     '0.1.14',
392 silly addNameRange     '0.1.15',
392 silly addNameRange     '0.1.16',
392 silly addNameRange     '0.1.17',
392 silly addNameRange     '0.1.18',
392 silly addNameRange     '0.1.19',
392 silly addNameRange     '0.1.20',
392 silly addNameRange     '0.1.21',
392 silly addNameRange     '0.1.22',
392 silly addNameRange     '0.1.23',
392 silly addNameRange     '0.1.24',
392 silly addNameRange     '0.1.25',
392 silly addNameRange     '0.1.26',
392 silly addNameRange     '0.1.27',
392 silly addNameRange     '0.1.28',
392 silly addNameRange     '0.1.29',
392 silly addNameRange     '0.1.30',
392 silly addNameRange     '0.1.31',
392 silly addNameRange     '0.1.33',
392 silly addNameRange     '0.1.34',
392 silly addNameRange     '0.2.0',
392 silly addNameRange     '0.2.1',
392 silly addNameRange     '0.2.2',
392 silly addNameRange     '0.2.3',
392 silly addNameRange     '0.2.4',
392 silly addNameRange     '0.2.5',
392 silly addNameRange     '0.2.6',
392 silly addNameRange     '0.2.7',
392 silly addNameRange     '0.2.8' ] ]
393 verbose addNamed [ 'mailcomposer', '0.2.8' ]
394 verbose addNamed [ '0.2.8', '0.2.8' ]
395 silly lockFile e39bbbd5-mailcomposer-0-2-8 mailcomposer@0.2.8
396 verbose lock mailcomposer@0.2.8 /home/vagrant/.npm/e39bbbd5-mailcomposer-0-2-8.lock
397 info retry fetch attempt 1 at 00:51:56
398 verbose fetch to= /home/vagrant/tmp/npm-2653-guL4N6pB/1392339116671-0.3442700773011893/tmp.tgz
399 http GET https://registry.npmjs.org/directmail/-/directmail-0.1.6.tgz
400 http GET https://registry.npmjs.org/public-address/-/public-address-0.1.0.tgz
401 silly lockFile 58410585-lcomposer-mailcomposer-0-2-8-tgz https://registry.npmjs.org/mailcomposer/-/mailcomposer-0.2.8.tgz
402 verbose lock https://registry.npmjs.org/mailcomposer/-/mailcomposer-0.2.8.tgz /home/vagrant/.npm/58410585-lcomposer-mailcomposer-0-2-8-tgz.lock
403 verbose addRemoteTarball [ 'https://registry.npmjs.org/mailcomposer/-/mailcomposer-0.2.8.tgz',
403 verbose addRemoteTarball   'bcb4d84aea08ea6f4c007f927c0ad214986370cc' ]
404 silly addNameRange number 2 { name: 'simplesmtp',
404 silly addNameRange   range: '>=0.2.0-0 <0.3.0-0||>=0.3.0-0 <0.4.0-0',
404 silly addNameRange   hasData: true }
405 silly addNameRange versions [ 'simplesmtp',
405 silly addNameRange   [ '0.1.0',
405 silly addNameRange     '0.1.2',
405 silly addNameRange     '0.1.3',
405 silly addNameRange     '0.1.4',
405 silly addNameRange     '0.1.5',
405 silly addNameRange     '0.1.6',
405 silly addNameRange     '0.1.7',
405 silly addNameRange     '0.1.8',
405 silly addNameRange     '0.1.9',
405 silly addNameRange     '0.1.11',
405 silly addNameRange     '0.1.12',
405 silly addNameRange     '0.1.13',
405 silly addNameRange     '0.1.14',
405 silly addNameRange     '0.1.15',
405 silly addNameRange     '0.1.16',
405 silly addNameRange     '0.1.17',
405 silly addNameRange     '0.1.18',
405 silly addNameRange     '0.1.19',
405 silly addNameRange     '0.1.20',
405 silly addNameRange     '0.1.21',
405 silly addNameRange     '0.1.22',
405 silly addNameRange     '0.1.23',
405 silly addNameRange     '0.1.24',
405 silly addNameRange     '0.1.25',
405 silly addNameRange     '0.1.26',
405 silly addNameRange     '0.1.27',
405 silly addNameRange     '0.1.28',
405 silly addNameRange     '0.1.29',
405 silly addNameRange     '0.1.30',
405 silly addNameRange     '0.2.0',
405 silly addNameRange     '0.2.1',
405 silly addNameRange     '0.2.2',
405 silly addNameRange     '0.2.3',
405 silly addNameRange     '0.2.4',
405 silly addNameRange     '0.2.6',
405 silly addNameRange     '0.2.7',
405 silly addNameRange     '0.3.0',
405 silly addNameRange     '0.3.1',
405 silly addNameRange     '0.3.2',
405 silly addNameRange     '0.3.3',
405 silly addNameRange     '0.3.4',
405 silly addNameRange     '0.3.5',
405 silly addNameRange     '0.3.6',
405 silly addNameRange     '0.3.7',
405 silly addNameRange     '0.3.8',
405 silly addNameRange     '0.3.9',
405 silly addNameRange     '0.3.10',
405 silly addNameRange     '0.3.11',
405 silly addNameRange     '0.3.13',
405 silly addNameRange     '0.3.14',
405 silly addNameRange     '0.3.15',
405 silly addNameRange     '0.3.16',
405 silly addNameRange     '0.3.18',
405 silly addNameRange     '0.3.19',
405 silly addNameRange     '0.3.20' ] ]
406 verbose addNamed [ 'simplesmtp', '0.3.20' ]
407 verbose addNamed [ '0.3.20', '0.3.20' ]
408 silly lockFile fa437f23-simplesmtp-0-3-20 simplesmtp@0.3.20
409 verbose lock simplesmtp@0.3.20 /home/vagrant/.npm/fa437f23-simplesmtp-0-3-20.lock
410 info retry fetch attempt 1 at 00:51:56
411 verbose fetch to= /home/vagrant/tmp/npm-2653-guL4N6pB/1392339116825-0.14684996102005243/tmp.tgz
412 http GET https://registry.npmjs.org/mailcomposer/-/mailcomposer-0.2.8.tgz
413 silly addNameRange number 2 { name: 'he', range: '>=0.3.6-0 <0.4.0-0', hasData: true }
414 silly addNameRange versions [ 'he',
414 silly addNameRange   [ '0.1.0',
414 silly addNameRange     '0.1.1',
414 silly addNameRange     '0.1.2',
414 silly addNameRange     '0.1.3',
414 silly addNameRange     '0.1.4',
414 silly addNameRange     '0.1.5',
414 silly addNameRange     '0.1.6',
414 silly addNameRange     '0.1.7',
414 silly addNameRange     '0.1.8',
414 silly addNameRange     '0.1.9',
414 silly addNameRange     '0.1.10',
414 silly addNameRange     '0.2.0',
414 silly addNameRange     '0.2.1',
414 silly addNameRange     '0.3.0',
414 silly addNameRange     '0.3.1',
414 silly addNameRange     '0.3.2',
414 silly addNameRange     '0.3.3',
414 silly addNameRange     '0.3.4',
414 silly addNameRange     '0.3.5',
414 silly addNameRange     '0.3.6' ] ]
415 verbose addNamed [ 'he', '0.3.6' ]
416 verbose addNamed [ '0.3.6', '0.3.6' ]
417 silly lockFile fb88f3cf-he-0-3-6 he@0.3.6
418 verbose lock he@0.3.6 /home/vagrant/.npm/fb88f3cf-he-0-3-6.lock
419 silly lockFile afa29330-simplesmtp-simplesmtp-0-3-20-tgz https://registry.npmjs.org/simplesmtp/-/simplesmtp-0.3.20.tgz
420 verbose lock https://registry.npmjs.org/simplesmtp/-/simplesmtp-0.3.20.tgz /home/vagrant/.npm/afa29330-simplesmtp-simplesmtp-0-3-20-tgz.lock
421 http 200 https://registry.npmjs.org/readable-stream/-/readable-stream-1.1.10.tgz
422 verbose addRemoteTarball [ 'https://registry.npmjs.org/simplesmtp/-/simplesmtp-0.3.20.tgz',
422 verbose addRemoteTarball   '9de032acd3f4dfee69aed80ea9843b09419bd001' ]
423 silly lockFile 9ea0c52d-gistry-npmjs-org-he-he-0-3-6-tgz https://registry.npmjs.org/he/-/he-0.3.6.tgz
424 verbose lock https://registry.npmjs.org/he/-/he-0.3.6.tgz /home/vagrant/.npm/9ea0c52d-gistry-npmjs-org-he-he-0-3-6-tgz.lock
425 info retry fetch attempt 1 at 00:51:56
426 verbose fetch to= /home/vagrant/tmp/npm-2653-guL4N6pB/1392339116905-0.2876651016995311/tmp.tgz
427 verbose addRemoteTarball [ 'https://registry.npmjs.org/he/-/he-0.3.6.tgz',
427 verbose addRemoteTarball   '9d7bc446e77963933301dd602d5731cb861135e0' ]
428 info retry fetch attempt 1 at 00:51:56
429 verbose fetch to= /home/vagrant/tmp/npm-2653-guL4N6pB/1392339116952-0.48120681708678603/tmp.tgz
430 http GET https://registry.npmjs.org/simplesmtp/-/simplesmtp-0.3.20.tgz
431 http 200 https://registry.npmjs.org/directmail/-/directmail-0.1.6.tgz
432 http 200 https://registry.npmjs.org/public-address/-/public-address-0.1.0.tgz
433 http GET https://registry.npmjs.org/he/-/he-0.3.6.tgz
434 verbose tar unpack /home/vagrant/tmp/npm-2653-guL4N6pB/1392339116602-0.8731026493478566/tmp.tgz
435 silly lockFile 5cc6368e-16602-0-8731026493478566-package tar:///home/vagrant/tmp/npm-2653-guL4N6pB/1392339116602-0.8731026493478566/package
436 verbose lock tar:///home/vagrant/tmp/npm-2653-guL4N6pB/1392339116602-0.8731026493478566/package /home/vagrant/.npm/5cc6368e-16602-0-8731026493478566-package.lock
437 silly lockFile 9752323b-16602-0-8731026493478566-tmp-tgz tar:///home/vagrant/tmp/npm-2653-guL4N6pB/1392339116602-0.8731026493478566/tmp.tgz
438 verbose lock tar:///home/vagrant/tmp/npm-2653-guL4N6pB/1392339116602-0.8731026493478566/tmp.tgz /home/vagrant/.npm/9752323b-16602-0-8731026493478566-tmp-tgz.lock
439 verbose tar unpack /home/vagrant/tmp/npm-2653-guL4N6pB/1392339116621-0.968885759357363/tmp.tgz
440 silly lockFile 60ce982e-116621-0-968885759357363-package tar:///home/vagrant/tmp/npm-2653-guL4N6pB/1392339116621-0.968885759357363/package
441 verbose lock tar:///home/vagrant/tmp/npm-2653-guL4N6pB/1392339116621-0.968885759357363/package /home/vagrant/.npm/60ce982e-116621-0-968885759357363-package.lock
442 silly lockFile 17336f7d-116621-0-968885759357363-tmp-tgz tar:///home/vagrant/tmp/npm-2653-guL4N6pB/1392339116621-0.968885759357363/tmp.tgz
443 verbose lock tar:///home/vagrant/tmp/npm-2653-guL4N6pB/1392339116621-0.968885759357363/tmp.tgz /home/vagrant/.npm/17336f7d-116621-0-968885759357363-tmp-tgz.lock
444 verbose tar unpack /home/vagrant/tmp/npm-2653-guL4N6pB/1392339116671-0.3442700773011893/tmp.tgz
445 silly lockFile 3f5898b3-16671-0-3442700773011893-package tar:///home/vagrant/tmp/npm-2653-guL4N6pB/1392339116671-0.3442700773011893/package
446 verbose lock tar:///home/vagrant/tmp/npm-2653-guL4N6pB/1392339116671-0.3442700773011893/package /home/vagrant/.npm/3f5898b3-16671-0-3442700773011893-package.lock
447 silly lockFile 6b2e934c-16671-0-3442700773011893-tmp-tgz tar:///home/vagrant/tmp/npm-2653-guL4N6pB/1392339116671-0.3442700773011893/tmp.tgz
448 verbose lock tar:///home/vagrant/tmp/npm-2653-guL4N6pB/1392339116671-0.3442700773011893/tmp.tgz /home/vagrant/.npm/6b2e934c-16671-0-3442700773011893-tmp-tgz.lock
449 http 200 https://registry.npmjs.org/mailcomposer/-/mailcomposer-0.2.8.tgz
450 silly gunzTarPerm modes [ '755', '644' ]
451 silly gunzTarPerm modes [ '755', '644' ]
452 silly gunzTarPerm modes [ '755', '644' ]
453 http 200 https://registry.npmjs.org/simplesmtp/-/simplesmtp-0.3.20.tgz
454 verbose tar unpack /home/vagrant/tmp/npm-2653-guL4N6pB/1392339116825-0.14684996102005243/tmp.tgz
455 silly lockFile b821b94e-6825-0-14684996102005243-package tar:///home/vagrant/tmp/npm-2653-guL4N6pB/1392339116825-0.14684996102005243/package
456 verbose lock tar:///home/vagrant/tmp/npm-2653-guL4N6pB/1392339116825-0.14684996102005243/package /home/vagrant/.npm/b821b94e-6825-0-14684996102005243-package.lock
457 silly lockFile 89643c22-6825-0-14684996102005243-tmp-tgz tar:///home/vagrant/tmp/npm-2653-guL4N6pB/1392339116825-0.14684996102005243/tmp.tgz
458 verbose lock tar:///home/vagrant/tmp/npm-2653-guL4N6pB/1392339116825-0.14684996102005243/tmp.tgz /home/vagrant/.npm/89643c22-6825-0-14684996102005243-tmp-tgz.lock
459 silly gunzTarPerm extractEntry package.json
460 silly gunzTarPerm extractEntry package.json
461 silly gunzTarPerm extractEntry package.json
462 silly gunzTarPerm modes [ '755', '644' ]
463 verbose tar unpack /home/vagrant/tmp/npm-2653-guL4N6pB/1392339116905-0.2876651016995311/tmp.tgz
464 silly lockFile b88cb88c-16905-0-2876651016995311-package tar:///home/vagrant/tmp/npm-2653-guL4N6pB/1392339116905-0.2876651016995311/package
465 verbose lock tar:///home/vagrant/tmp/npm-2653-guL4N6pB/1392339116905-0.2876651016995311/package /home/vagrant/.npm/b88cb88c-16905-0-2876651016995311-package.lock
466 silly lockFile 3c31dcc2-16905-0-2876651016995311-tmp-tgz tar:///home/vagrant/tmp/npm-2653-guL4N6pB/1392339116905-0.2876651016995311/tmp.tgz
467 verbose lock tar:///home/vagrant/tmp/npm-2653-guL4N6pB/1392339116905-0.2876651016995311/tmp.tgz /home/vagrant/.npm/3c31dcc2-16905-0-2876651016995311-tmp-tgz.lock
468 silly gunzTarPerm extractEntry .npmignore
469 silly gunzTarPerm extractEntry README.md
470 silly gunzTarPerm extractEntry README.md
471 silly gunzTarPerm extractEntry LICENSE
472 silly gunzTarPerm extractEntry README.md
473 silly gunzTarPerm extractEntry index.js
474 silly gunzTarPerm modes [ '755', '644' ]
475 http 200 https://registry.npmjs.org/he/-/he-0.3.6.tgz
476 silly gunzTarPerm extractEntry package.json
477 silly gunzTarPerm extractEntry package.json
478 silly gunzTarPerm extractEntry .npmignore
479 silly gunzTarPerm extractEntry README.md
480 silly gunzTarPerm extractEntry index.js
481 silly gunzTarPerm extractEntry .travis.yml
482 silly gunzTarPerm extractEntry LICENSE
483 silly gunzTarPerm extractEntry tests/public-address.js
484 verbose tar unpack /home/vagrant/tmp/npm-2653-guL4N6pB/1392339116952-0.48120681708678603/tmp.tgz
485 silly lockFile face144d-6952-0-48120681708678603-package tar:///home/vagrant/tmp/npm-2653-guL4N6pB/1392339116952-0.48120681708678603/package
486 verbose lock tar:///home/vagrant/tmp/npm-2653-guL4N6pB/1392339116952-0.48120681708678603/package /home/vagrant/.npm/face144d-6952-0-48120681708678603-package.lock
487 silly lockFile 826f9ba4-6952-0-48120681708678603-tmp-tgz tar:///home/vagrant/tmp/npm-2653-guL4N6pB/1392339116952-0.48120681708678603/tmp.tgz
488 verbose lock tar:///home/vagrant/tmp/npm-2653-guL4N6pB/1392339116952-0.48120681708678603/tmp.tgz /home/vagrant/.npm/826f9ba4-6952-0-48120681708678603-tmp-tgz.lock
489 silly gunzTarPerm extractEntry .npmignore
490 silly gunzTarPerm extractEntry README.md
491 silly gunzTarPerm modes [ '755', '644' ]
492 silly gunzTarPerm extractEntry duplex.js
493 silly gunzTarPerm extractEntry transform.js
494 silly gunzTarPerm extractEntry LICENSE
495 silly gunzTarPerm extractEntry package.json
496 silly gunzTarPerm extractEntry lib/mailer.js
497 silly gunzTarPerm extractEntry lib/queue.js
498 silly gunzTarPerm extractEntry tests/mailer.js
499 silly gunzTarPerm extractEntry tests/queue.js
500 silly gunzTarPerm extractEntry LICENSE
501 silly gunzTarPerm extractEntry README.md
502 silly gunzTarPerm extractEntry he.js
503 silly gunzTarPerm extractEntry .travis.yml
504 silly gunzTarPerm extractEntry lib/mailcomposer.js
505 silly gunzTarPerm extractEntry index.js
506 silly gunzTarPerm extractEntry .travis.yml
507 silly gunzTarPerm extractEntry LICENSE-MIT.txt
508 silly lockFile 3f5898b3-16671-0-3442700773011893-package tar:///home/vagrant/tmp/npm-2653-guL4N6pB/1392339116671-0.3442700773011893/package
509 silly lockFile 3f5898b3-16671-0-3442700773011893-package tar:///home/vagrant/tmp/npm-2653-guL4N6pB/1392339116671-0.3442700773011893/package
510 silly lockFile 6b2e934c-16671-0-3442700773011893-tmp-tgz tar:///home/vagrant/tmp/npm-2653-guL4N6pB/1392339116671-0.3442700773011893/tmp.tgz
511 silly lockFile 6b2e934c-16671-0-3442700773011893-tmp-tgz tar:///home/vagrant/tmp/npm-2653-guL4N6pB/1392339116671-0.3442700773011893/tmp.tgz
512 verbose tar pack [ '/home/vagrant/.npm/public-address/0.1.0/package.tgz',
512 verbose tar pack   '/home/vagrant/tmp/npm-2653-guL4N6pB/1392339116671-0.3442700773011893/package' ]
513 verbose tarball /home/vagrant/.npm/public-address/0.1.0/package.tgz
514 verbose folder /home/vagrant/tmp/npm-2653-guL4N6pB/1392339116671-0.3442700773011893/package
515 silly lockFile 3f5898b3-16671-0-3442700773011893-package tar:///home/vagrant/tmp/npm-2653-guL4N6pB/1392339116671-0.3442700773011893/package
516 verbose lock tar:///home/vagrant/tmp/npm-2653-guL4N6pB/1392339116671-0.3442700773011893/package /home/vagrant/.npm/3f5898b3-16671-0-3442700773011893-package.lock
517 silly lockFile 3cdb4709-public-address-0-1-0-package-tgz tar:///home/vagrant/.npm/public-address/0.1.0/package.tgz
518 verbose lock tar:///home/vagrant/.npm/public-address/0.1.0/package.tgz /home/vagrant/.npm/3cdb4709-public-address-0-1-0-package-tgz.lock
519 silly gunzTarPerm extractEntry lib/topunycode.js
520 silly gunzTarPerm extractEntry lib/urlfetch.js
521 silly gunzTarPerm extractEntry bin/he
522 silly gunzTarPerm extractEntry man/he.1
523 silly gunzTarPerm extractEntry CHANGELOG.md
524 silly gunzTarPerm extractEntry examples/simpleserver.js
525 silly gunzTarPerm extractEntry passthrough.js
526 silly gunzTarPerm extractEntry readable.js
527 silly gunzTarPerm extractEntry test/mailcomposer.js
528 silly gunzTarPerm extractEntry test/image3.png
529 silly gunzTarPerm extractEntry examples/size.js
530 silly gunzTarPerm extractEntry examples/validate-recipient.js
531 silly gunzTarPerm extractEntry test/test_private.pem
532 silly gunzTarPerm extractEntry test/textfile.txt
533 silly gunzTarPerm extractEntry writable.js
534 silly gunzTarPerm extractEntry float.patch
535 silly gunzTarPerm extractEntry lib/client.js
536 silly gunzTarPerm extractEntry lib/pool.js
537 silly gunzTarPerm extractEntry lib/_stream_duplex.js
538 silly gunzTarPerm extractEntry lib/_stream_passthrough.js
539 silly gunzTarPerm extractEntry lib/server.js
540 silly gunzTarPerm extractEntry lib/simpleserver.js
541 silly lockFile 3f5898b3-16671-0-3442700773011893-package tar:///home/vagrant/tmp/npm-2653-guL4N6pB/1392339116671-0.3442700773011893/package
542 silly lockFile 3f5898b3-16671-0-3442700773011893-package tar:///home/vagrant/tmp/npm-2653-guL4N6pB/1392339116671-0.3442700773011893/package
543 silly gunzTarPerm extractEntry lib/_stream_readable.js
544 silly gunzTarPerm extractEntry lib/_stream_transform.js
545 silly lockFile 3cdb4709-public-address-0-1-0-package-tgz tar:///home/vagrant/.npm/public-address/0.1.0/package.tgz
546 silly lockFile 3cdb4709-public-address-0-1-0-package-tgz tar:///home/vagrant/.npm/public-address/0.1.0/package.tgz
547 silly gunzTarPerm extractEntry test/client.js
548 silly gunzTarPerm extractEntry test/pool.js
549 silly lockFile 4c838682-npm-public-address-0-1-0-package /home/vagrant/.npm/public-address/0.1.0/package
550 verbose lock /home/vagrant/.npm/public-address/0.1.0/package /home/vagrant/.npm/4c838682-npm-public-address-0-1-0-package.lock
551 silly lockFile 4c838682-npm-public-address-0-1-0-package /home/vagrant/.npm/public-address/0.1.0/package
552 silly lockFile 4c838682-npm-public-address-0-1-0-package /home/vagrant/.npm/public-address/0.1.0/package
553 silly gunzTarPerm extractEntry lib/_stream_writable.js
554 verbose tar unpack /home/vagrant/.npm/public-address/0.1.0/package.tgz
555 silly lockFile e52313e9-npm-public-address-0-1-0-package tar:///home/vagrant/.npm/public-address/0.1.0/package
556 verbose lock tar:///home/vagrant/.npm/public-address/0.1.0/package /home/vagrant/.npm/e52313e9-npm-public-address-0-1-0-package.lock
557 silly lockFile 3cdb4709-public-address-0-1-0-package-tgz tar:///home/vagrant/.npm/public-address/0.1.0/package.tgz
558 verbose lock tar:///home/vagrant/.npm/public-address/0.1.0/package.tgz /home/vagrant/.npm/3cdb4709-public-address-0-1-0-package-tgz.lock
559 silly gunzTarPerm modes [ '755', '644' ]
560 silly gunzTarPerm extractEntry test/server.js
561 silly gunzTarPerm extractEntry test/testmessage.eml
562 silly gunzTarPerm extractEntry package.json
563 silly gunzTarPerm modified mode [ 'package.json', 384, 420 ]
564 silly gunzTarPerm extractEntry README.md
565 silly gunzTarPerm modified mode [ 'README.md', 384, 420 ]
566 silly gunzTarPerm extractEntry index.js
567 silly gunzTarPerm modified mode [ 'index.js', 384, 420 ]
568 silly lockFile 60ce982e-116621-0-968885759357363-package tar:///home/vagrant/tmp/npm-2653-guL4N6pB/1392339116621-0.968885759357363/package
569 silly lockFile 60ce982e-116621-0-968885759357363-package tar:///home/vagrant/tmp/npm-2653-guL4N6pB/1392339116621-0.968885759357363/package
570 silly lockFile 17336f7d-116621-0-968885759357363-tmp-tgz tar:///home/vagrant/tmp/npm-2653-guL4N6pB/1392339116621-0.968885759357363/tmp.tgz
571 silly lockFile 17336f7d-116621-0-968885759357363-tmp-tgz tar:///home/vagrant/tmp/npm-2653-guL4N6pB/1392339116621-0.968885759357363/tmp.tgz
572 verbose tar pack [ '/home/vagrant/.npm/directmail/0.1.6/package.tgz',
572 verbose tar pack   '/home/vagrant/tmp/npm-2653-guL4N6pB/1392339116621-0.968885759357363/package' ]
573 verbose tarball /home/vagrant/.npm/directmail/0.1.6/package.tgz
574 verbose folder /home/vagrant/tmp/npm-2653-guL4N6pB/1392339116621-0.968885759357363/package
575 silly lockFile 60ce982e-116621-0-968885759357363-package tar:///home/vagrant/tmp/npm-2653-guL4N6pB/1392339116621-0.968885759357363/package
576 verbose lock tar:///home/vagrant/tmp/npm-2653-guL4N6pB/1392339116621-0.968885759357363/package /home/vagrant/.npm/60ce982e-116621-0-968885759357363-package.lock
577 silly lockFile 7e2fda72-npm-directmail-0-1-6-package-tgz tar:///home/vagrant/.npm/directmail/0.1.6/package.tgz
578 verbose lock tar:///home/vagrant/.npm/directmail/0.1.6/package.tgz /home/vagrant/.npm/7e2fda72-npm-directmail-0-1-6-package-tgz.lock
579 silly gunzTarPerm extractEntry tests/public-address.js
580 silly gunzTarPerm modified mode [ 'tests/public-address.js', 384, 420 ]
581 silly lockFile e52313e9-npm-public-address-0-1-0-package tar:///home/vagrant/.npm/public-address/0.1.0/package
582 silly lockFile e52313e9-npm-public-address-0-1-0-package tar:///home/vagrant/.npm/public-address/0.1.0/package
583 silly lockFile 3cdb4709-public-address-0-1-0-package-tgz tar:///home/vagrant/.npm/public-address/0.1.0/package.tgz
584 silly lockFile 3cdb4709-public-address-0-1-0-package-tgz tar:///home/vagrant/.npm/public-address/0.1.0/package.tgz
585 verbose chmod /home/vagrant/.npm/public-address/0.1.0/package.tgz 644
586 verbose chown /home/vagrant/.npm/public-address/0.1.0/package.tgz [ 1000, 1000 ]
587 silly lockFile 479206a1-address-public-address-0-1-0-tgz https://registry.npmjs.org/public-address/-/public-address-0.1.0.tgz
588 silly lockFile 479206a1-address-public-address-0-1-0-tgz https://registry.npmjs.org/public-address/-/public-address-0.1.0.tgz
589 silly lockFile fc4818ff-public-address-0-1-0 public-address@0.1.0
590 silly lockFile fc4818ff-public-address-0-1-0 public-address@0.1.0
591 silly lockFile 0d2be6b6-public-address-0-1-0 public-address@~0.1.0
592 silly lockFile 0d2be6b6-public-address-0-1-0 public-address@~0.1.0
593 silly lockFile 60ce982e-116621-0-968885759357363-package tar:///home/vagrant/tmp/npm-2653-guL4N6pB/1392339116621-0.968885759357363/package
594 silly lockFile 60ce982e-116621-0-968885759357363-package tar:///home/vagrant/tmp/npm-2653-guL4N6pB/1392339116621-0.968885759357363/package
595 silly lockFile 7e2fda72-npm-directmail-0-1-6-package-tgz tar:///home/vagrant/.npm/directmail/0.1.6/package.tgz
596 silly lockFile 7e2fda72-npm-directmail-0-1-6-package-tgz tar:///home/vagrant/.npm/directmail/0.1.6/package.tgz
597 silly lockFile 6b6b1b36-ant-npm-directmail-0-1-6-package /home/vagrant/.npm/directmail/0.1.6/package
598 verbose lock /home/vagrant/.npm/directmail/0.1.6/package /home/vagrant/.npm/6b6b1b36-ant-npm-directmail-0-1-6-package.lock
599 silly lockFile 6b6b1b36-ant-npm-directmail-0-1-6-package /home/vagrant/.npm/directmail/0.1.6/package
600 silly lockFile 6b6b1b36-ant-npm-directmail-0-1-6-package /home/vagrant/.npm/directmail/0.1.6/package
601 verbose tar unpack /home/vagrant/.npm/directmail/0.1.6/package.tgz
602 silly lockFile 1fcf796b-ant-npm-directmail-0-1-6-package tar:///home/vagrant/.npm/directmail/0.1.6/package
603 verbose lock tar:///home/vagrant/.npm/directmail/0.1.6/package /home/vagrant/.npm/1fcf796b-ant-npm-directmail-0-1-6-package.lock
604 silly lockFile 7e2fda72-npm-directmail-0-1-6-package-tgz tar:///home/vagrant/.npm/directmail/0.1.6/package.tgz
605 verbose lock tar:///home/vagrant/.npm/directmail/0.1.6/package.tgz /home/vagrant/.npm/7e2fda72-npm-directmail-0-1-6-package-tgz.lock
606 silly gunzTarPerm modes [ '755', '644' ]
607 silly gunzTarPerm extractEntry package.json
608 silly gunzTarPerm modified mode [ 'package.json', 384, 420 ]
609 silly gunzTarPerm extractEntry README.md
610 silly gunzTarPerm modified mode [ 'README.md', 384, 420 ]
611 silly gunzTarPerm extractEntry LICENSE
612 silly gunzTarPerm modified mode [ 'LICENSE', 384, 420 ]
613 silly gunzTarPerm extractEntry index.js
614 silly gunzTarPerm modified mode [ 'index.js', 384, 420 ]
615 silly gunzTarPerm extractEntry .travis.yml
616 silly gunzTarPerm modified mode [ '.travis.yml', 384, 420 ]
617 silly gunzTarPerm extractEntry lib/mailer.js
618 silly gunzTarPerm modified mode [ 'lib/mailer.js', 384, 420 ]
619 silly gunzTarPerm extractEntry lib/queue.js
620 silly gunzTarPerm modified mode [ 'lib/queue.js', 384, 420 ]
621 silly gunzTarPerm extractEntry tests/mailer.js
622 silly gunzTarPerm modified mode [ 'tests/mailer.js', 384, 420 ]
623 silly gunzTarPerm extractEntry tests/queue.js
624 silly gunzTarPerm modified mode [ 'tests/queue.js', 384, 420 ]
625 silly lockFile face144d-6952-0-48120681708678603-package tar:///home/vagrant/tmp/npm-2653-guL4N6pB/1392339116952-0.48120681708678603/package
626 silly lockFile face144d-6952-0-48120681708678603-package tar:///home/vagrant/tmp/npm-2653-guL4N6pB/1392339116952-0.48120681708678603/package
627 silly lockFile 826f9ba4-6952-0-48120681708678603-tmp-tgz tar:///home/vagrant/tmp/npm-2653-guL4N6pB/1392339116952-0.48120681708678603/tmp.tgz
628 silly lockFile 826f9ba4-6952-0-48120681708678603-tmp-tgz tar:///home/vagrant/tmp/npm-2653-guL4N6pB/1392339116952-0.48120681708678603/tmp.tgz
629 verbose tar pack [ '/home/vagrant/.npm/he/0.3.6/package.tgz',
629 verbose tar pack   '/home/vagrant/tmp/npm-2653-guL4N6pB/1392339116952-0.48120681708678603/package' ]
630 verbose tarball /home/vagrant/.npm/he/0.3.6/package.tgz
631 verbose folder /home/vagrant/tmp/npm-2653-guL4N6pB/1392339116952-0.48120681708678603/package
632 silly lockFile face144d-6952-0-48120681708678603-package tar:///home/vagrant/tmp/npm-2653-guL4N6pB/1392339116952-0.48120681708678603/package
633 verbose lock tar:///home/vagrant/tmp/npm-2653-guL4N6pB/1392339116952-0.48120681708678603/package /home/vagrant/.npm/face144d-6952-0-48120681708678603-package.lock
634 silly lockFile 5068ace3-vagrant-npm-he-0-3-6-package-tgz tar:///home/vagrant/.npm/he/0.3.6/package.tgz
635 verbose lock tar:///home/vagrant/.npm/he/0.3.6/package.tgz /home/vagrant/.npm/5068ace3-vagrant-npm-he-0-3-6-package-tgz.lock
636 silly lockFile 5cc6368e-16602-0-8731026493478566-package tar:///home/vagrant/tmp/npm-2653-guL4N6pB/1392339116602-0.8731026493478566/package
637 silly lockFile 5cc6368e-16602-0-8731026493478566-package tar:///home/vagrant/tmp/npm-2653-guL4N6pB/1392339116602-0.8731026493478566/package
638 silly lockFile 9752323b-16602-0-8731026493478566-tmp-tgz tar:///home/vagrant/tmp/npm-2653-guL4N6pB/1392339116602-0.8731026493478566/tmp.tgz
639 silly lockFile 9752323b-16602-0-8731026493478566-tmp-tgz tar:///home/vagrant/tmp/npm-2653-guL4N6pB/1392339116602-0.8731026493478566/tmp.tgz
640 verbose tar pack [ '/home/vagrant/.npm/readable-stream/1.1.10/package.tgz',
640 verbose tar pack   '/home/vagrant/tmp/npm-2653-guL4N6pB/1392339116602-0.8731026493478566/package' ]
641 verbose tarball /home/vagrant/.npm/readable-stream/1.1.10/package.tgz
642 verbose folder /home/vagrant/tmp/npm-2653-guL4N6pB/1392339116602-0.8731026493478566/package
643 silly lockFile 5cc6368e-16602-0-8731026493478566-package tar:///home/vagrant/tmp/npm-2653-guL4N6pB/1392339116602-0.8731026493478566/package
644 verbose lock tar:///home/vagrant/tmp/npm-2653-guL4N6pB/1392339116602-0.8731026493478566/package /home/vagrant/.npm/5cc6368e-16602-0-8731026493478566-package.lock
645 silly lockFile aa22e79b-adable-stream-1-1-10-package-tgz tar:///home/vagrant/.npm/readable-stream/1.1.10/package.tgz
646 verbose lock tar:///home/vagrant/.npm/readable-stream/1.1.10/package.tgz /home/vagrant/.npm/aa22e79b-adable-stream-1-1-10-package-tgz.lock
647 silly lockFile 1fcf796b-ant-npm-directmail-0-1-6-package tar:///home/vagrant/.npm/directmail/0.1.6/package
648 silly lockFile 1fcf796b-ant-npm-directmail-0-1-6-package tar:///home/vagrant/.npm/directmail/0.1.6/package
649 silly lockFile 7e2fda72-npm-directmail-0-1-6-package-tgz tar:///home/vagrant/.npm/directmail/0.1.6/package.tgz
650 silly lockFile 7e2fda72-npm-directmail-0-1-6-package-tgz tar:///home/vagrant/.npm/directmail/0.1.6/package.tgz
651 verbose chmod /home/vagrant/.npm/directmail/0.1.6/package.tgz 644
652 verbose chown /home/vagrant/.npm/directmail/0.1.6/package.tgz [ 1000, 1000 ]
653 silly lockFile 759b95dc--directmail-directmail-0-1-6-tgz https://registry.npmjs.org/directmail/-/directmail-0.1.6.tgz
654 silly lockFile 759b95dc--directmail-directmail-0-1-6-tgz https://registry.npmjs.org/directmail/-/directmail-0.1.6.tgz
655 silly lockFile 27ceb7c0-directmail-0-1-6 directmail@0.1.6
656 silly lockFile 27ceb7c0-directmail-0-1-6 directmail@0.1.6
657 silly lockFile a048f12c-directmail-0-1-6 directmail@~0.1.6
658 silly lockFile a048f12c-directmail-0-1-6 directmail@~0.1.6
659 silly lockFile b821b94e-6825-0-14684996102005243-package tar:///home/vagrant/tmp/npm-2653-guL4N6pB/1392339116825-0.14684996102005243/package
660 silly lockFile b821b94e-6825-0-14684996102005243-package tar:///home/vagrant/tmp/npm-2653-guL4N6pB/1392339116825-0.14684996102005243/package
661 silly lockFile 89643c22-6825-0-14684996102005243-tmp-tgz tar:///home/vagrant/tmp/npm-2653-guL4N6pB/1392339116825-0.14684996102005243/tmp.tgz
662 silly lockFile 89643c22-6825-0-14684996102005243-tmp-tgz tar:///home/vagrant/tmp/npm-2653-guL4N6pB/1392339116825-0.14684996102005243/tmp.tgz
663 verbose tar pack [ '/home/vagrant/.npm/mailcomposer/0.2.8/package.tgz',
663 verbose tar pack   '/home/vagrant/tmp/npm-2653-guL4N6pB/1392339116825-0.14684996102005243/package' ]
664 verbose tarball /home/vagrant/.npm/mailcomposer/0.2.8/package.tgz
665 verbose folder /home/vagrant/tmp/npm-2653-guL4N6pB/1392339116825-0.14684996102005243/package
666 silly lockFile b821b94e-6825-0-14684996102005243-package tar:///home/vagrant/tmp/npm-2653-guL4N6pB/1392339116825-0.14684996102005243/package
667 verbose lock tar:///home/vagrant/tmp/npm-2653-guL4N6pB/1392339116825-0.14684996102005243/package /home/vagrant/.npm/b821b94e-6825-0-14684996102005243-package.lock
668 silly lockFile 0087c768-m-mailcomposer-0-2-8-package-tgz tar:///home/vagrant/.npm/mailcomposer/0.2.8/package.tgz
669 verbose lock tar:///home/vagrant/.npm/mailcomposer/0.2.8/package.tgz /home/vagrant/.npm/0087c768-m-mailcomposer-0-2-8-package-tgz.lock
670 silly lockFile b88cb88c-16905-0-2876651016995311-package tar:///home/vagrant/tmp/npm-2653-guL4N6pB/1392339116905-0.2876651016995311/package
671 silly lockFile b88cb88c-16905-0-2876651016995311-package tar:///home/vagrant/tmp/npm-2653-guL4N6pB/1392339116905-0.2876651016995311/package
672 silly lockFile 3c31dcc2-16905-0-2876651016995311-tmp-tgz tar:///home/vagrant/tmp/npm-2653-guL4N6pB/1392339116905-0.2876651016995311/tmp.tgz
673 silly lockFile 3c31dcc2-16905-0-2876651016995311-tmp-tgz tar:///home/vagrant/tmp/npm-2653-guL4N6pB/1392339116905-0.2876651016995311/tmp.tgz
674 verbose tar pack [ '/home/vagrant/.npm/simplesmtp/0.3.20/package.tgz',
674 verbose tar pack   '/home/vagrant/tmp/npm-2653-guL4N6pB/1392339116905-0.2876651016995311/package' ]
675 verbose tarball /home/vagrant/.npm/simplesmtp/0.3.20/package.tgz
676 verbose folder /home/vagrant/tmp/npm-2653-guL4N6pB/1392339116905-0.2876651016995311/package
677 silly lockFile b88cb88c-16905-0-2876651016995311-package tar:///home/vagrant/tmp/npm-2653-guL4N6pB/1392339116905-0.2876651016995311/package
678 verbose lock tar:///home/vagrant/tmp/npm-2653-guL4N6pB/1392339116905-0.2876651016995311/package /home/vagrant/.npm/b88cb88c-16905-0-2876651016995311-package.lock
679 silly lockFile 53cb1c28-pm-simplesmtp-0-3-20-package-tgz tar:///home/vagrant/.npm/simplesmtp/0.3.20/package.tgz
680 verbose lock tar:///home/vagrant/.npm/simplesmtp/0.3.20/package.tgz /home/vagrant/.npm/53cb1c28-pm-simplesmtp-0-3-20-package-tgz.lock
681 silly lockFile face144d-6952-0-48120681708678603-package tar:///home/vagrant/tmp/npm-2653-guL4N6pB/1392339116952-0.48120681708678603/package
682 silly lockFile face144d-6952-0-48120681708678603-package tar:///home/vagrant/tmp/npm-2653-guL4N6pB/1392339116952-0.48120681708678603/package
683 silly lockFile 5068ace3-vagrant-npm-he-0-3-6-package-tgz tar:///home/vagrant/.npm/he/0.3.6/package.tgz
684 silly lockFile 5068ace3-vagrant-npm-he-0-3-6-package-tgz tar:///home/vagrant/.npm/he/0.3.6/package.tgz
685 silly lockFile 308afccd-ome-vagrant-npm-he-0-3-6-package /home/vagrant/.npm/he/0.3.6/package
686 verbose lock /home/vagrant/.npm/he/0.3.6/package /home/vagrant/.npm/308afccd-ome-vagrant-npm-he-0-3-6-package.lock
687 silly lockFile 308afccd-ome-vagrant-npm-he-0-3-6-package /home/vagrant/.npm/he/0.3.6/package
688 silly lockFile 308afccd-ome-vagrant-npm-he-0-3-6-package /home/vagrant/.npm/he/0.3.6/package
689 verbose tar unpack /home/vagrant/.npm/he/0.3.6/package.tgz
690 silly lockFile 023b244e-ome-vagrant-npm-he-0-3-6-package tar:///home/vagrant/.npm/he/0.3.6/package
691 verbose lock tar:///home/vagrant/.npm/he/0.3.6/package /home/vagrant/.npm/023b244e-ome-vagrant-npm-he-0-3-6-package.lock
692 silly lockFile 5068ace3-vagrant-npm-he-0-3-6-package-tgz tar:///home/vagrant/.npm/he/0.3.6/package.tgz
693 verbose lock tar:///home/vagrant/.npm/he/0.3.6/package.tgz /home/vagrant/.npm/5068ace3-vagrant-npm-he-0-3-6-package-tgz.lock
694 silly gunzTarPerm modes [ '755', '644' ]
695 silly gunzTarPerm extractEntry package.json
696 silly gunzTarPerm modified mode [ 'package.json', 384, 420 ]
697 silly gunzTarPerm extractEntry README.md
698 silly gunzTarPerm modified mode [ 'README.md', 384, 420 ]
699 silly gunzTarPerm extractEntry he.js
700 silly gunzTarPerm modified mode [ 'he.js', 384, 420 ]
701 silly gunzTarPerm extractEntry LICENSE-MIT.txt
702 silly gunzTarPerm modified mode [ 'LICENSE-MIT.txt', 384, 420 ]
703 silly gunzTarPerm extractEntry bin/he
704 silly gunzTarPerm modified mode [ 'bin/he', 384, 420 ]
705 silly gunzTarPerm extractEntry man/he.1
706 silly gunzTarPerm modified mode [ 'man/he.1', 384, 420 ]
707 silly lockFile 5cc6368e-16602-0-8731026493478566-package tar:///home/vagrant/tmp/npm-2653-guL4N6pB/1392339116602-0.8731026493478566/package
708 silly lockFile 5cc6368e-16602-0-8731026493478566-package tar:///home/vagrant/tmp/npm-2653-guL4N6pB/1392339116602-0.8731026493478566/package
709 silly lockFile aa22e79b-adable-stream-1-1-10-package-tgz tar:///home/vagrant/.npm/readable-stream/1.1.10/package.tgz
710 silly lockFile aa22e79b-adable-stream-1-1-10-package-tgz tar:///home/vagrant/.npm/readable-stream/1.1.10/package.tgz
711 silly lockFile f40b0c45-m-readable-stream-1-1-10-package /home/vagrant/.npm/readable-stream/1.1.10/package
712 verbose lock /home/vagrant/.npm/readable-stream/1.1.10/package /home/vagrant/.npm/f40b0c45-m-readable-stream-1-1-10-package.lock
713 silly lockFile f40b0c45-m-readable-stream-1-1-10-package /home/vagrant/.npm/readable-stream/1.1.10/package
714 silly lockFile f40b0c45-m-readable-stream-1-1-10-package /home/vagrant/.npm/readable-stream/1.1.10/package
715 verbose tar unpack /home/vagrant/.npm/readable-stream/1.1.10/package.tgz
716 silly lockFile 30057488-m-readable-stream-1-1-10-package tar:///home/vagrant/.npm/readable-stream/1.1.10/package
717 verbose lock tar:///home/vagrant/.npm/readable-stream/1.1.10/package /home/vagrant/.npm/30057488-m-readable-stream-1-1-10-package.lock
718 silly lockFile aa22e79b-adable-stream-1-1-10-package-tgz tar:///home/vagrant/.npm/readable-stream/1.1.10/package.tgz
719 verbose lock tar:///home/vagrant/.npm/readable-stream/1.1.10/package.tgz /home/vagrant/.npm/aa22e79b-adable-stream-1-1-10-package-tgz.lock
720 silly gunzTarPerm modes [ '755', '644' ]
721 silly gunzTarPerm extractEntry package.json
722 silly gunzTarPerm modified mode [ 'package.json', 384, 420 ]
723 silly gunzTarPerm extractEntry .npmignore
724 silly gunzTarPerm modified mode [ '.npmignore', 384, 420 ]
725 silly gunzTarPerm extractEntry README.md
726 silly gunzTarPerm modified mode [ 'README.md', 384, 420 ]
727 silly gunzTarPerm extractEntry LICENSE
728 silly gunzTarPerm modified mode [ 'LICENSE', 384, 420 ]
729 silly gunzTarPerm extractEntry duplex.js
730 silly gunzTarPerm modified mode [ 'duplex.js', 384, 420 ]
731 silly gunzTarPerm extractEntry transform.js
732 silly gunzTarPerm modified mode [ 'transform.js', 384, 420 ]
733 silly gunzTarPerm extractEntry passthrough.js
734 silly gunzTarPerm modified mode [ 'passthrough.js', 384, 420 ]
735 silly gunzTarPerm extractEntry readable.js
736 silly gunzTarPerm modified mode [ 'readable.js', 384, 420 ]
737 silly gunzTarPerm extractEntry writable.js
738 silly gunzTarPerm modified mode [ 'writable.js', 384, 420 ]
739 silly gunzTarPerm extractEntry float.patch
740 silly gunzTarPerm modified mode [ 'float.patch', 384, 420 ]
741 silly gunzTarPerm extractEntry lib/_stream_duplex.js
742 silly gunzTarPerm modified mode [ 'lib/_stream_duplex.js', 384, 420 ]
743 silly gunzTarPerm extractEntry lib/_stream_passthrough.js
744 silly gunzTarPerm modified mode [ 'lib/_stream_passthrough.js', 384, 420 ]
745 silly lockFile b88cb88c-16905-0-2876651016995311-package tar:///home/vagrant/tmp/npm-2653-guL4N6pB/1392339116905-0.2876651016995311/package
746 silly lockFile b88cb88c-16905-0-2876651016995311-package tar:///home/vagrant/tmp/npm-2653-guL4N6pB/1392339116905-0.2876651016995311/package
747 silly lockFile 53cb1c28-pm-simplesmtp-0-3-20-package-tgz tar:///home/vagrant/.npm/simplesmtp/0.3.20/package.tgz
748 silly lockFile 53cb1c28-pm-simplesmtp-0-3-20-package-tgz tar:///home/vagrant/.npm/simplesmtp/0.3.20/package.tgz
749 silly gunzTarPerm extractEntry lib/_stream_readable.js
750 silly gunzTarPerm modified mode [ 'lib/_stream_readable.js', 384, 420 ]
751 silly gunzTarPerm extractEntry lib/_stream_transform.js
752 silly gunzTarPerm modified mode [ 'lib/_stream_transform.js', 384, 420 ]
753 silly lockFile d0b8c6e9-nt-npm-simplesmtp-0-3-20-package /home/vagrant/.npm/simplesmtp/0.3.20/package
754 verbose lock /home/vagrant/.npm/simplesmtp/0.3.20/package /home/vagrant/.npm/d0b8c6e9-nt-npm-simplesmtp-0-3-20-package.lock
755 silly lockFile 023b244e-ome-vagrant-npm-he-0-3-6-package tar:///home/vagrant/.npm/he/0.3.6/package
756 silly lockFile 023b244e-ome-vagrant-npm-he-0-3-6-package tar:///home/vagrant/.npm/he/0.3.6/package
757 silly lockFile d0b8c6e9-nt-npm-simplesmtp-0-3-20-package /home/vagrant/.npm/simplesmtp/0.3.20/package
758 silly lockFile d0b8c6e9-nt-npm-simplesmtp-0-3-20-package /home/vagrant/.npm/simplesmtp/0.3.20/package
759 silly lockFile 5068ace3-vagrant-npm-he-0-3-6-package-tgz tar:///home/vagrant/.npm/he/0.3.6/package.tgz
760 silly lockFile 5068ace3-vagrant-npm-he-0-3-6-package-tgz tar:///home/vagrant/.npm/he/0.3.6/package.tgz
761 verbose tar unpack /home/vagrant/.npm/simplesmtp/0.3.20/package.tgz
762 silly lockFile 67a8c468-nt-npm-simplesmtp-0-3-20-package tar:///home/vagrant/.npm/simplesmtp/0.3.20/package
763 verbose lock tar:///home/vagrant/.npm/simplesmtp/0.3.20/package /home/vagrant/.npm/67a8c468-nt-npm-simplesmtp-0-3-20-package.lock
764 silly lockFile 53cb1c28-pm-simplesmtp-0-3-20-package-tgz tar:///home/vagrant/.npm/simplesmtp/0.3.20/package.tgz
765 verbose lock tar:///home/vagrant/.npm/simplesmtp/0.3.20/package.tgz /home/vagrant/.npm/53cb1c28-pm-simplesmtp-0-3-20-package-tgz.lock
766 silly gunzTarPerm extractEntry lib/_stream_writable.js
767 silly gunzTarPerm modified mode [ 'lib/_stream_writable.js', 384, 420 ]
768 silly gunzTarPerm modes [ '755', '644' ]
769 verbose chmod /home/vagrant/.npm/he/0.3.6/package.tgz 644
770 verbose chown /home/vagrant/.npm/he/0.3.6/package.tgz [ 1000, 1000 ]
771 silly lockFile 9ea0c52d-gistry-npmjs-org-he-he-0-3-6-tgz https://registry.npmjs.org/he/-/he-0.3.6.tgz
772 silly lockFile 9ea0c52d-gistry-npmjs-org-he-he-0-3-6-tgz https://registry.npmjs.org/he/-/he-0.3.6.tgz
773 silly lockFile fb88f3cf-he-0-3-6 he@0.3.6
774 silly lockFile fb88f3cf-he-0-3-6 he@0.3.6
775 silly lockFile 92ca361f-he-0-3-6 he@~0.3.6
776 silly lockFile 92ca361f-he-0-3-6 he@~0.3.6
777 silly gunzTarPerm extractEntry package.json
778 silly gunzTarPerm modified mode [ 'package.json', 384, 420 ]
779 silly gunzTarPerm extractEntry .npmignore
780 silly gunzTarPerm modified mode [ '.npmignore', 384, 420 ]
781 silly gunzTarPerm extractEntry README.md
782 silly gunzTarPerm modified mode [ 'README.md', 384, 420 ]
783 silly lockFile b821b94e-6825-0-14684996102005243-package tar:///home/vagrant/tmp/npm-2653-guL4N6pB/1392339116825-0.14684996102005243/package
784 silly lockFile b821b94e-6825-0-14684996102005243-package tar:///home/vagrant/tmp/npm-2653-guL4N6pB/1392339116825-0.14684996102005243/package
785 silly lockFile 0087c768-m-mailcomposer-0-2-8-package-tgz tar:///home/vagrant/.npm/mailcomposer/0.2.8/package.tgz
786 silly lockFile 0087c768-m-mailcomposer-0-2-8-package-tgz tar:///home/vagrant/.npm/mailcomposer/0.2.8/package.tgz
787 silly gunzTarPerm extractEntry LICENSE
788 silly gunzTarPerm modified mode [ 'LICENSE', 384, 420 ]
789 silly lockFile 5fda6c80-t-npm-mailcomposer-0-2-8-package /home/vagrant/.npm/mailcomposer/0.2.8/package
790 verbose lock /home/vagrant/.npm/mailcomposer/0.2.8/package /home/vagrant/.npm/5fda6c80-t-npm-mailcomposer-0-2-8-package.lock
791 silly lockFile 5fda6c80-t-npm-mailcomposer-0-2-8-package /home/vagrant/.npm/mailcomposer/0.2.8/package
792 silly lockFile 5fda6c80-t-npm-mailcomposer-0-2-8-package /home/vagrant/.npm/mailcomposer/0.2.8/package
793 verbose tar unpack /home/vagrant/.npm/mailcomposer/0.2.8/package.tgz
794 silly lockFile 2e72924b-t-npm-mailcomposer-0-2-8-package tar:///home/vagrant/.npm/mailcomposer/0.2.8/package
795 verbose lock tar:///home/vagrant/.npm/mailcomposer/0.2.8/package /home/vagrant/.npm/2e72924b-t-npm-mailcomposer-0-2-8-package.lock
796 silly lockFile 0087c768-m-mailcomposer-0-2-8-package-tgz tar:///home/vagrant/.npm/mailcomposer/0.2.8/package.tgz
797 verbose lock tar:///home/vagrant/.npm/mailcomposer/0.2.8/package.tgz /home/vagrant/.npm/0087c768-m-mailcomposer-0-2-8-package-tgz.lock
798 silly gunzTarPerm extractEntry index.js
799 silly gunzTarPerm modified mode [ 'index.js', 384, 420 ]
800 silly gunzTarPerm extractEntry .travis.yml
801 silly gunzTarPerm modified mode [ '.travis.yml', 384, 420 ]
802 silly gunzTarPerm modes [ '755', '644' ]
803 silly gunzTarPerm extractEntry package.json
804 silly gunzTarPerm modified mode [ 'package.json', 384, 420 ]
805 silly gunzTarPerm extractEntry .npmignore
806 silly gunzTarPerm modified mode [ '.npmignore', 384, 420 ]
807 silly gunzTarPerm extractEntry README.md
808 silly gunzTarPerm modified mode [ 'README.md', 384, 420 ]
809 silly gunzTarPerm extractEntry LICENSE
810 silly gunzTarPerm modified mode [ 'LICENSE', 384, 420 ]
811 silly gunzTarPerm extractEntry CHANGELOG.md
812 silly gunzTarPerm modified mode [ 'CHANGELOG.md', 384, 420 ]
813 silly gunzTarPerm extractEntry examples/simpleserver.js
814 silly gunzTarPerm modified mode [ 'examples/simpleserver.js', 384, 420 ]
815 silly gunzTarPerm extractEntry .travis.yml
816 silly gunzTarPerm modified mode [ '.travis.yml', 384, 420 ]
817 silly gunzTarPerm extractEntry lib/mailcomposer.js
818 silly gunzTarPerm modified mode [ 'lib/mailcomposer.js', 384, 420 ]
819 silly gunzTarPerm extractEntry examples/size.js
820 silly gunzTarPerm modified mode [ 'examples/size.js', 384, 420 ]
821 silly gunzTarPerm extractEntry examples/validate-recipient.js
822 silly gunzTarPerm modified mode [ 'examples/validate-recipient.js', 384, 420 ]
823 silly gunzTarPerm extractEntry lib/client.js
824 silly gunzTarPerm modified mode [ 'lib/client.js', 384, 420 ]
825 silly gunzTarPerm extractEntry lib/pool.js
826 silly gunzTarPerm modified mode [ 'lib/pool.js', 384, 420 ]
827 silly gunzTarPerm extractEntry lib/server.js
828 silly gunzTarPerm modified mode [ 'lib/server.js', 384, 420 ]
829 silly gunzTarPerm extractEntry lib/simpleserver.js
830 silly gunzTarPerm modified mode [ 'lib/simpleserver.js', 384, 420 ]
831 silly gunzTarPerm extractEntry lib/topunycode.js
832 silly gunzTarPerm modified mode [ 'lib/topunycode.js', 384, 420 ]
833 silly gunzTarPerm extractEntry lib/urlfetch.js
834 silly gunzTarPerm modified mode [ 'lib/urlfetch.js', 384, 420 ]
835 silly gunzTarPerm extractEntry test/client.js
836 silly gunzTarPerm modified mode [ 'test/client.js', 384, 420 ]
837 silly gunzTarPerm extractEntry test/pool.js
838 silly gunzTarPerm modified mode [ 'test/pool.js', 384, 420 ]
839 silly gunzTarPerm extractEntry test/mailcomposer.js
840 silly gunzTarPerm modified mode [ 'test/mailcomposer.js', 384, 420 ]
841 silly gunzTarPerm extractEntry test/image3.png
842 silly gunzTarPerm modified mode [ 'test/image3.png', 384, 420 ]
843 silly gunzTarPerm extractEntry test/server.js
844 silly gunzTarPerm modified mode [ 'test/server.js', 384, 420 ]
845 silly gunzTarPerm extractEntry test/testmessage.eml
846 silly gunzTarPerm modified mode [ 'test/testmessage.eml', 384, 420 ]
847 silly gunzTarPerm extractEntry test/test_private.pem
848 silly gunzTarPerm modified mode [ 'test/test_private.pem', 384, 420 ]
849 silly gunzTarPerm extractEntry test/textfile.txt
850 silly gunzTarPerm modified mode [ 'test/textfile.txt', 384, 420 ]
851 silly lockFile 30057488-m-readable-stream-1-1-10-package tar:///home/vagrant/.npm/readable-stream/1.1.10/package
852 silly lockFile 30057488-m-readable-stream-1-1-10-package tar:///home/vagrant/.npm/readable-stream/1.1.10/package
853 silly lockFile aa22e79b-adable-stream-1-1-10-package-tgz tar:///home/vagrant/.npm/readable-stream/1.1.10/package.tgz
854 silly lockFile aa22e79b-adable-stream-1-1-10-package-tgz tar:///home/vagrant/.npm/readable-stream/1.1.10/package.tgz
855 verbose chmod /home/vagrant/.npm/readable-stream/1.1.10/package.tgz 644
856 verbose chown /home/vagrant/.npm/readable-stream/1.1.10/package.tgz [ 1000, 1000 ]
857 silly lockFile a0f976f2-tream-readable-stream-1-1-10-tgz https://registry.npmjs.org/readable-stream/-/readable-stream-1.1.10.tgz
858 silly lockFile a0f976f2-tream-readable-stream-1-1-10-tgz https://registry.npmjs.org/readable-stream/-/readable-stream-1.1.10.tgz
859 silly lockFile 987e367e-readable-stream-1-1-10 readable-stream@1.1.10
860 silly lockFile 987e367e-readable-stream-1-1-10 readable-stream@1.1.10
861 silly lockFile f517707b-readable-stream-1-1-9 readable-stream@~1.1.9
862 silly lockFile f517707b-readable-stream-1-1-9 readable-stream@~1.1.9
863 silly lockFile 67a8c468-nt-npm-simplesmtp-0-3-20-package tar:///home/vagrant/.npm/simplesmtp/0.3.20/package
864 silly lockFile 67a8c468-nt-npm-simplesmtp-0-3-20-package tar:///home/vagrant/.npm/simplesmtp/0.3.20/package
865 silly lockFile 53cb1c28-pm-simplesmtp-0-3-20-package-tgz tar:///home/vagrant/.npm/simplesmtp/0.3.20/package.tgz
866 silly lockFile 53cb1c28-pm-simplesmtp-0-3-20-package-tgz tar:///home/vagrant/.npm/simplesmtp/0.3.20/package.tgz
867 verbose chmod /home/vagrant/.npm/simplesmtp/0.3.20/package.tgz 644
868 verbose chown /home/vagrant/.npm/simplesmtp/0.3.20/package.tgz [ 1000, 1000 ]
869 silly lockFile afa29330-simplesmtp-simplesmtp-0-3-20-tgz https://registry.npmjs.org/simplesmtp/-/simplesmtp-0.3.20.tgz
870 silly lockFile afa29330-simplesmtp-simplesmtp-0-3-20-tgz https://registry.npmjs.org/simplesmtp/-/simplesmtp-0.3.20.tgz
871 silly lockFile fa437f23-simplesmtp-0-3-20 simplesmtp@0.3.20
872 silly lockFile fa437f23-simplesmtp-0-3-20 simplesmtp@0.3.20
873 silly lockFile 2e72924b-t-npm-mailcomposer-0-2-8-package tar:///home/vagrant/.npm/mailcomposer/0.2.8/package
874 silly lockFile 2e72924b-t-npm-mailcomposer-0-2-8-package tar:///home/vagrant/.npm/mailcomposer/0.2.8/package
875 silly lockFile 53ed49a0-simplesmtp-0-2-0-3 simplesmtp@~0.2 || ~0.3
876 silly lockFile 53ed49a0-simplesmtp-0-2-0-3 simplesmtp@~0.2 || ~0.3
877 silly lockFile 0087c768-m-mailcomposer-0-2-8-package-tgz tar:///home/vagrant/.npm/mailcomposer/0.2.8/package.tgz
878 silly lockFile 0087c768-m-mailcomposer-0-2-8-package-tgz tar:///home/vagrant/.npm/mailcomposer/0.2.8/package.tgz
879 verbose chmod /home/vagrant/.npm/mailcomposer/0.2.8/package.tgz 644
880 verbose chown /home/vagrant/.npm/mailcomposer/0.2.8/package.tgz [ 1000, 1000 ]
881 silly lockFile 58410585-lcomposer-mailcomposer-0-2-8-tgz https://registry.npmjs.org/mailcomposer/-/mailcomposer-0.2.8.tgz
882 silly lockFile 58410585-lcomposer-mailcomposer-0-2-8-tgz https://registry.npmjs.org/mailcomposer/-/mailcomposer-0.2.8.tgz
883 silly lockFile e39bbbd5-mailcomposer-0-2-8 mailcomposer@0.2.8
884 silly lockFile e39bbbd5-mailcomposer-0-2-8 mailcomposer@0.2.8
885 silly lockFile c5995a0c-mailcomposer-0-2-7 mailcomposer@~0.2.7
886 silly lockFile c5995a0c-mailcomposer-0-2-7 mailcomposer@~0.2.7
887 silly resolved [ { name: 'public-address',
887 silly resolved     version: '0.1.0',
887 silly resolved     description: 'Resolve public IP address and hostname',
887 silly resolved     main: 'index.js',
887 silly resolved     scripts: { test: 'nodeunit tests/' },
887 silly resolved     repository:
887 silly resolved      { type: 'git',
887 silly resolved        url: 'git://github.com/andris9/public-address.git' },
887 silly resolved     author: { name: 'Andris Reinman' },
887 silly resolved     license: 'MIT',
887 silly resolved     bugs: { url: 'https://github.com/andris9/public-address/issues' },
887 silly resolved     homepage: 'https://github.com/andris9/public-address',
887 silly resolved     devDependencies: { nodeunit: '~0.8.2' },
887 silly resolved     readme: '# public-address\n\nResolve the public IP address and hostname of your current machine.\n\nThis module makes a HTTP request to www.remoteaddress.net IP resolving service.\n\n## Installation\n\n    npm install public-address\n\n## Usage\n\n    var publicAddress = require("public-address");\n    publicAddress([options,] callback);\n\nWhere\n\n  * **options** - an optional options object. Everything in this object is passed to the HTTP request object (eg. `agent`, `localAddress` etc.)\n  * **callback** - function to run once the resolving succeeded or failed. Has error object and response data as arguments\n\nThe data argument for `callback` has the following properties\n\n  * **address** - public IP address\n  * **hostname** - (if available) hostname of the IP address\n\n## Example\n\nResolve public IP:\n\n    publicAddress(function(err, data){\n        console.log(err || data);\n    });\n\nExample response:\n\n    {\n        "address": "193.152.61.139",\n        "hostname": "gprs-inet-61-139.example.com"\n    }\n\n## License\n\n**MIT**\n',
887 silly resolved     readmeFilename: 'README.md',
887 silly resolved     _id: 'public-address@0.1.0',
887 silly resolved     dist: { shasum: '2238479c43f45f3765065ab0181a1ca47a08a48f' },
887 silly resolved     _from: 'public-address@~0.1.0',
887 silly resolved     _resolved: 'https://registry.npmjs.org/public-address/-/public-address-0.1.0.tgz' },
887 silly resolved   { name: 'directmail',
887 silly resolved     version: '0.1.6',
887 silly resolved     description: 'Sendmail replacement, sends mail directly to recipients SMTP server',
887 silly resolved     main: 'index.js',
887 silly resolved     scripts: { test: 'nodeunit tests' },
887 silly resolved     keywords: [ 'SMTP', 'sendmail', 'Nodemailer', 'email' ],
887 silly resolved     author: { name: 'Andris Reinman' },
887 silly resolved     license: 'MIT',
887 silly resolved     dependencies: { simplesmtp: '~0.3.15' },
887 silly resolved     devDependencies: { nodeunit: '~0.8.2' },
887 silly resolved     repository: { type: 'git', url: 'git://github.com/andris9/directmail.git' },
887 silly resolved     readme: '# DirectMail\n\nSendmail alternative to send e-mails directly to recipients without a relaying service.\n\n### Support DirectMail development\n\n[![Donate to author](https://www.paypalobjects.com/en_US/i/btn/btn_donate_SM.gif)](https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=DB26KWR2BQX5W)\n\nIf you want to support with Bitcoins then my wallet address is `15Z8ADxhssKUiwP3jbbqJwA21744KMCfTM`\n\n## Usage\n\n### Setup\n\nRequire *directmail* object\n\n    var createDirectmail = require("directmail"),\n        directmail = createDirectmail(options);\n\nWhere\n\n  * **options** is an optional options object with the following properties\n    * *debug* - if set to true, prints all traffic to console\n    * *name* - hostname to be used when introducing the client to the MX server\n\n### Send mail\n\nPush a message to the outgoing queue\n\n    directmail.send({\n        from: "sender@example.com",\n        recipients: ["receiver1@example.com", "receiver2@example.com"],\n        message: "Subject: test\\r\\n\\r\\nHello world!"\n    });\n\nWhere\n\n  * **from** (string) is the e-mail address of the sender\n  * **recipients** (array) is an array of recipient e-mails. Put all `to`, `cc` and `bcc` addresses here.\n  * **message** (string|buffer) is the RFC2822 message to be sent\n\n### Check queue length\n\nYou can check the count of unsent messages from the `.length` property of the directmail object\n\n    console.log(directmail.length); // nr of messages to be sent\n\nIf you try to send a message with multiple recipients then every unique recipient domain counts as a different message.\n\n## Issues\n\n*Directmail* is very inefficient as it queues all e-mails to be sent into memory. Additionally, if a message is not yet sent and the process is closed, all data about queued messages are lost. Thus *directmail* is only suitable for low throughput systems, like password remainders and such, where the message can be processed immediatelly. *Directmail* is not suitable for spamming.\n\nWhile not being 100% reliable (remember - if process exits, entire queue is lost), *directmail* can still handle sending errors, graylisting and such. If a message can not be sent, it is requeued and retried later.\n\n## License\n\n**MIT**\n',
887 silly resolved     readmeFilename: 'README.md',
887 silly resolved     bugs: { url: 'https://github.com/andris9/directmail/issues' },
887 silly resolved     homepage: 'https://github.com/andris9/directmail',
887 silly resolved     _id: 'directmail@0.1.6',
887 silly resolved     dist: { shasum: '0e96beee1ab4058a16fc38bbe20ee8eaa1e4aeaa' },
887 silly resolved     _from: 'directmail@~0.1.6',
887 silly resolved     _resolved: 'https://registry.npmjs.org/directmail/-/directmail-0.1.6.tgz' },
887 silly resolved   { name: 'he',
887 silly resolved     version: '0.3.6',
887 silly resolved     description: 'A robust HTML entities encoder/decoder with full Unicode support.',
887 silly resolved     homepage: 'http://mths.be/he',
887 silly resolved     main: 'he.js',
887 silly resolved     bin: { he: 'bin/he' },
887 silly resolved     man: [ 'man/he.1' ],
887 silly resolved     keywords:
887 silly resolved      [ 'string',
887 silly resolved        'entities',
887 silly resolved        'entity',
887 silly resolved        'html',
887 silly resolved        'encode',
887 silly resolved        'decode',
887 silly resolved        'unicode' ],
887 silly resolved     licenses: [ [Object] ],
887 silly resolved     author: { name: 'Mathias Bynens', url: 'http://mathiasbynens.be/' },
887 silly resolved     repository: { type: 'git', url: 'https://github.com/mathiasbynens/he.git' },
887 silly resolved     bugs: { url: 'https://github.com/mathiasbynens/he/issues' },
887 silly resolved     files: [ 'LICENSE-MIT.txt', 'he.js', 'bin/', 'man/' ],
887 silly resolved     directories: { test: 'tests' },
887 silly resolved     scripts: { test: 'node tests/tests.js' },
887 silly resolved     dependencies: {},
887 silly resolved     devDependencies:
887 silly resolved      { grunt: '~0.4.1',
887 silly resolved        'grunt-shell': '~0.3.1',
887 silly resolved        'grunt-template': '~0.2.0',
887 silly resolved        istanbul: '~0.1.43',
887 silly resolved        jsesc: '~0.4.1',
887 silly resolved        lodash: '~1.3.1',
887 silly resolved        'qunit-clib': '~1.3.0',
887 silly resolved        qunitjs: '~1.11.0',
887 silly resolved        regenerate: '~0.5.2',
887 silly resolved        requirejs: '~2.1.8' },
887 silly resolved     readme: '# he [![Build status](https://travis-ci.org/mathiasbynens/he.png?branch=master)](https://travis-ci.org/mathiasbynens/he) [![Dependency status](https://gemnasium.com/mathiasbynens/he.png)](https://gemnasium.com/mathiasbynens/he)\n\n_he_ (for “HTML entities”) is a robust HTML entity encoder/decoder written in JavaScript. It supports [all standardized named character references as per HTML](http://www.whatwg.org/specs/web-apps/current-work/multipage/named-character-references.html), handles [ambiguous ampersands](http://mathiasbynens.be/notes/ambiguous-ampersands) and other edge cases [just like a browser would](http://www.whatwg.org/specs/web-apps/current-work/multipage/tokenization.html#tokenizing-character-references), has an extensive test suite, and — contrary to many other JavaScript solutions — _he_ handles astral Unicode symbols just fine. [An online demo is available.](http://mothereff.in/html-entities)\n\n## Installation\n\nVia [npm](http://npmjs.org/):\n\n```bash\nnpm install he\n```\n\nVia [Bower](http://bower.io/):\n\n```bash\nbower install he\n```\n\nVia [Component](https://github.com/component/component):\n\n```bash\ncomponent install mathiasbynens/he\n```\n\nIn a browser:\n\n```html\n<script src="he.js"></script>\n```\n\nIn [Narwhal](http://narwhaljs.org/), [Node.js](http://nodejs.org/), and [RingoJS](http://ringojs.org/):\n\n```js\nvar he = require(\'he\');\n```\n\nIn [Rhino](http://www.mozilla.org/rhino/):\n\n```js\nload(\'he.js\');\n```\n\nUsing an AMD loader like [RequireJS](http://requirejs.org/):\n\n```js\nrequire(\n  {\n    \'paths\': {\n      \'he\': \'path/to/he\'\n    }\n  },\n  [\'he\'],\n  function(he) {\n    console.log(he);\n  }\n);\n```\n\n## API\n\n### `he.version`\n\nA string representing the semantic version number.\n\n### `he.encode(text, options)`\n\nThis function takes a string of text and encodes (by default) any symbols that aren’t printable ASCII symbols, replacing them with character references. As long as the input string contains allowed code points only, the return value of this function is always valid HTML.\n\n```js\nhe.encode(\'foo © bar ≠ baz 𝌆 qux\');\n// → \'foo &#xA9; bar &#x2260; baz &#x1D306; qux\'\n```\n\nThe `options` object is optional. It recognizes the following properties:\n\n#### `useNamedReferences`\n\nThe default value for the `useNamedReferences` option is `false`. This means that `encode()` will not use any named character references (e.g. `&copy;`) in the output — hexadecimal escapes (e.g. `&#xA9;`) will be used instead. Set it to `true` to enable the use of named references.\n\n**Note that if compatibility with older browsers is a concern, this option should remain disabled.**\n\n```js\n// Using the global default setting (defaults to `false`):\nhe.encode(\'foo © bar ≠ baz 𝌆 qux\');\n// → \'foo &#xA9; bar &#x2260; baz &#x1D306; qux\'\n\n// Passing an `options` object to `encode`, to explicitly disallow named references:\nhe.encode(\'foo © bar ≠ baz 𝌆 qux\', {\n  \'useNamedReferences\': false\n});\n// → \'foo &#xA9; bar &#x2260; baz &#x1D306; qux\'\n\n// Passing an `options` object to `encode`, to explicitly allow named references:\nhe.encode(\'foo © bar ≠ baz 𝌆 qux\', {\n  \'useNamedReferences\': true\n});\n// → \'foo &copy; bar &ne; baz &#x1D306; qux\'\n```\n\n#### `encodeEverything`\n\nThe default value for the `encodeEverything` option is `false`. This means that `encode()` will not use any character references for printable ASCII symbols that don’t need escaping. Set it to `true` to encode every symbol in the input string.\n\n```js\n// Using the global default setting (defaults to `false`):\nhe.encode(\'foo © bar ≠ baz 𝌆 qux\');\n// → \'foo &#xA9; bar &#x2260; baz &#x1D306; qux\'\n\n// Passing an `options` object to `encode`, to explicitly encode all symbols:\nhe.encode(\'foo © bar ≠ baz 𝌆 qux\', {\n  \'encodeEverything\': true\n});\n// → \'&#x66;&#x6F;&#x6F;&#x20;&#xA9;&#x20;&#x62;&#x61;&#x72;&#x20;&#x2260;&#x20;&#x62;&#x61;&#x7A;&#x20;&#x1D306;&#x20;&#x71;&#x75;&#x78;\'\n\n// This setting can be combined with the `useNamedReferences` option:\nhe.encode(\'foo © bar ≠ baz 𝌆 qux\', {\n  \'encodeEverything\': true,\n  \'useNamedReferences\': true\n});\n// → \'&#x66;&#x6F;&#x6F;&#x20;&copy;&#x20;&#x62;&#x61;&#x72;&#x20;&ne;&#x20;&#x62;&#x61;&#x7A;&#x20;&#x1D306;&#x20;&#x71;&#x75;&#x78;\'\n```\n\n#### Overriding default `encode` options globally\n\nThe global default setting can be overridden by modifying the `he.encode.options` object. This saves you from passing in an `options` object for every call to `encode` if you want to use the non-default setting.\n\n```js\n// Read the global default setting:\nhe.encode.options.useNamedReferences;\n// → `false` by default\n\n// Override the global default setting:\nhe.encode.options.useNamedReferences = true;\n\n// Using the global default setting, which is now `true`:\nhe.encode(\'foo © bar ≠ baz 𝌆 qux\');\n// → \'foo &copy; bar &ne; baz &#x1D306; qux\'\n```\n\n### `he.decode(html, options)`\n\nThis function takes a string of HTML and decodes any named and numerical character references in it using [the algorithm described in section 12.2.4.69 of the HTML spec](http://www.whatwg.org/specs/web-apps/current-work/multipage/tokenization.html#tokenizing-character-references).\n\n```js\nhe.decode(\'foo &copy; bar &ne; baz &#x1D306; qux\');\n// → \'foo © bar ≠ baz 𝌆 qux\'\n```\n\nThe `options` object is optional. It recognizes the following properties:\n\n#### `isAttributeValue`\n\nThe default value for the `isAttributeValue` option is `false`. This means that `decode()` will decode the string as if it were used in a text context in an HTML document. HTML has different rules for parsing character references in attribute values — set this option to `true` to treat the input string as if it were used as an attribute value.\n\n```js\n// Using the global default setting (defaults to `false`, i.e. HTML text context):\nhe.decode(\'foo&ampbar\');\n// → \'foo&bar\'\n\n// Passing an `options` object to `decode`, to explicitly assume an HTML text context:\nhe.decode(\'foo&ampbar\', {\n  \'isAttributeValue\': false\n});\n// → \'foo&bar\'\n\n// Passing an `options` object to `decode`, to explicitly assume an HTML attribute value context:\nhe.decode(\'foo&ampbar\', {\n  \'isAttributeValue\': true\n});\n// → \'foo&ampbar\'\n```\n\n#### `strict`\n\nThe default value for the `strict` option is `false`. This means that `decode()` will decode any HTML text content you feed it, even if it contains any entities that cause [parse errors](http://www.whatwg.org/specs/web-apps/current-work/multipage/tokenization.html#tokenizing-character-references). To throw an error when such invalid HTML is encountered, set the `strict` option to `true`. This option makes it possible to use _he_ as part of HTML parsers and HTML validators.\n\n```js\n// Using the global default setting (defaults to `false`, i.e. error-tolerant mode):\nhe.decode(\'foo&ampbar\');\n// → \'foo&bar\'\n\n// Passing an `options` object to `decode`, to explicitly enable error-tolerant mode:\nhe.decode(\'foo&ampbar\', {\n  \'strict\': false\n});\n// → \'foo&bar\'\n\n// Passing an `options` object to `decode`, to explicitly enable strict mode:\nhe.decode(\'foo&ampbar\', {\n  \'strict\': true\n});\n// → Parse error\n```\n\n#### Overriding default `decode` options globally\n\nThe global default settings for the `decode` function can be overridden by modifying the `he.decode.options` object. This saves you from passing in an `options` object for every call to `decode` if you want to use a non-default setting.\n\n```js\n// Read the global default setting:\nhe.decode.options.isAttributeValue;\n// → `false` by default\n\n// Override the global default setting:\nhe.decode.options.isAttributeValue = true;\n\n// Using the global default setting, which is now `true`:\nhe.decode(\'foo&ampbar\');\n// → \'foo&ampbar\'\n```\n\n### `he.escape(text)`\n\nThis function takes a string of text and escapes it for use in text contexts in XML or HTML documents. Only the following characters are escaped: `&`, `<`, `>`, `"`, and `\'`.\n\n```js\nhe.escape(\'<img src=\\\'x\\\' onerror="prompt(1)">\');\n// → \'&lt;img src=&#x27;x&#x27; onerror=&quot;prompt(1)&quot;&gt;\'\n```\n\n### `he.unescape(html, options)`\n\n`he.unescape` is an alias for `he.decode`. It takes a string of HTML and decodes any named and numerical character references in it.\n\n### Using the `he` binary\n\nTo use the `he` binary in your shell, simply install _he_ globally using npm:\n\n```bash\nnpm install -g he\n```\n\nAfter that you will be able to encode/decode HTML entities from the command line:\n\n```bash\n$ he --encode \'föo ♥ bår 𝌆 baz\'\nf&#xF6;o &#x2665; b&#xE5;r &#x1D306; baz\n\n$ he --encode --use-named-refs \'föo ♥ bår 𝌆 baz\'\nf&ouml;o &hearts; b&aring;r &#x1D306; baz\n\n$ he --decode \'f&ouml;o &hearts; b&aring;r &#x1D306; baz\'\nföo ♥ bår 𝌆 baz\n```\n\nRead a local text file, encode it for use in an HTML text context, and save the result to a new file:\n\n```bash\n$ he --encode < foo.txt > foo-escaped.html\n```\n\nOr do the same with an online text file:\n\n```bash\n$ curl -sL "http://git.io/HnfEaw" | he --encode > escaped.html\n```\n\nOr, the opposite — read a local file containing a snippet of HTML in a text context, decode it back to plain text, and save the result to a new file:\n\n```bash\n$ he --decode < foo-escaped.html > foo.txt\n```\n\nOr do the same with an online HTML snippet:\n\n```bash\n$ curl -sL "http://git.io/HnfEaw" | he --decode > decoded.txt\n```\n\nSee `he --help` for the full list of options.\n\n## Support\n\nhe has been tested in at least Chrome 27-29, Firefox 3-22, Safari 4-6, Opera 10-12, IE 6-10, Node.js v0.10.0, Narwhal 0.3.2, RingoJS 0.8-0.9, PhantomJS 1.9.0, and Rhino 1.7RC4.\n\n## Unit tests & code coverage\n\nAfter cloning this repository, run `npm install` to install the dependencies needed for he development and testing. You may want to install Istanbul _globally_ using `npm install istanbul -g`.\n\nOnce that’s done, you can run the unit tests in Node using `npm test` or `node tests/tests.js`. To run the tests in Rhino, Ringo, Narwhal, and web browsers as well, use `grunt test`.\n\nTo generate [the code coverage report](http://rawgithub.com/mathiasbynens/he/master/coverage/he/he.js.html), use `grunt cover`.\n\n## Acknowledgements\n\nThanks to [Simon Pieters](http://simon.html5.org/) (@zcorpan) for the many suggestions.\n\n## Author\n\n| [![twitter/mathias](http://gravatar.com/avatar/24e08a9ea84deb17ae121074d0f17125?s=70)](http://twitter.com/mathias "Follow @mathias on Twitter") |\n|---|\n| [Mathias Bynens](http://mathiasbynens.be/) |\n\n## License\n\n_he_ is available under the [MIT](http://mths.be/mit) license.\n',
887 silly resolved     readmeFilename: 'README.md',
887 silly resolved     _id: 'he@0.3.6',
887 silly resolved     dist: { shasum: 'f5f9ee7841fb09ca15eb87ee84cdc2ed522f8a8e' },
887 silly resolved     _from: 'he@~0.3.6',
887 silly resolved     _resolved: 'https://registry.npmjs.org/he/-/he-0.3.6.tgz' },
887 silly resolved   { name: 'readable-stream',
887 silly resolved     version: '1.1.10',
887 silly resolved     description: 'An exploration of a new kind of readable streams for Node.js',
887 silly resolved     main: 'readable.js',
887 silly resolved     dependencies:
887 silly resolved      { 'core-util-is': '~1.0.0',
887 silly resolved        string_decoder: '~0.10.x',
887 silly resolved        debuglog: '0.0.2' },
887 silly resolved     devDependencies: { tap: '~0.2.6' },
887 silly resolved     scripts: { test: 'tap test/simple/*.js' },
887 silly resolved     repository: { type: 'git', url: 'git://github.com/isaacs/readable-stream' },
887 silly resolved     keywords: [ 'readable', 'stream', 'pipe' ],
887 silly resolved     author:
887 silly resolved      { name: 'Isaac Z. Schlueter',
887 silly resolved        email: 'i@izs.me',
887 silly resolved        url: 'http://blog.izs.me/' },
887 silly resolved     license: 'MIT',
887 silly resolved     optionalDependencies: { debuglog: '0.0.2' },
887 silly resolved     readme: '# readable-stream\n\nA new class of streams for Node.js\n\nThis module provides the new Stream base classes introduced in Node\nv0.10, for use in Node v0.8.  You can use it to have programs that\nhave to work with node v0.8, while being forward-compatible for v0.10\nand beyond.  When you drop support for v0.8, you can remove this\nmodule, and only use the native streams.\n\nThis is almost exactly the same codebase as appears in Node v0.10.\nHowever:\n\n1. The exported object is actually the Readable class.  Decorating the\n   native `stream` module would be global pollution.\n2. In v0.10, you can safely use `base64` as an argument to\n   `setEncoding` in Readable streams.  However, in v0.8, the\n   StringDecoder class has no `end()` method, which is problematic for\n   Base64.  So, don\'t use that, because it\'ll break and be weird.\n\nOther than that, the API is the same as `require(\'stream\')` in v0.10,\nso the API docs are reproduced below.\n\n----------\n\n    Stability: 2 - Unstable\n\nA stream is an abstract interface implemented by various objects in\nNode.  For example a request to an HTTP server is a stream, as is\nstdout. Streams are readable, writable, or both. All streams are\ninstances of [EventEmitter][]\n\nYou can load the Stream base classes by doing `require(\'stream\')`.\nThere are base classes provided for Readable streams, Writable\nstreams, Duplex streams, and Transform streams.\n\n## Compatibility\n\nIn earlier versions of Node, the Readable stream interface was\nsimpler, but also less powerful and less useful.\n\n* Rather than waiting for you to call the `read()` method, `\'data\'`\n  events would start emitting immediately.  If you needed to do some\n  I/O to decide how to handle data, then you had to store the chunks\n  in some kind of buffer so that they would not be lost.\n* The `pause()` method was advisory, rather than guaranteed.  This\n  meant that you still had to be prepared to receive `\'data\'` events\n  even when the stream was in a paused state.\n\nIn Node v0.10, the Readable class described below was added.  For\nbackwards compatibility with older Node programs, Readable streams\nswitch into "old mode" when a `\'data\'` event handler is added, or when\nthe `pause()` or `resume()` methods are called.  The effect is that,\neven if you are not using the new `read()` method and `\'readable\'`\nevent, you no longer have to worry about losing `\'data\'` chunks.\n\nMost programs will continue to function normally.  However, this\nintroduces an edge case in the following conditions:\n\n* No `\'data\'` event handler is added.\n* The `pause()` and `resume()` methods are never called.\n\nFor example, consider the following code:\n\n```javascript\n// WARNING!  BROKEN!\nnet.createServer(function(socket) {\n\n  // we add an \'end\' method, but never consume the data\n  socket.on(\'end\', function() {\n    // It will never get here.\n    socket.end(\'I got your message (but didnt read it)\\n\');\n  });\n\n}).listen(1337);\n```\n\nIn versions of node prior to v0.10, the incoming message data would be\nsimply discarded.  However, in Node v0.10 and beyond, the socket will\nremain paused forever.\n\nThe workaround in this situation is to call the `resume()` method to\ntrigger "old mode" behavior:\n\n```javascript\n// Workaround\nnet.createServer(function(socket) {\n\n  socket.on(\'end\', function() {\n    socket.end(\'I got your message (but didnt read it)\\n\');\n  });\n\n  // start the flow of data, discarding it.\n  socket.resume();\n\n}).listen(1337);\n```\n\nIn addition to new Readable streams switching into old-mode, pre-v0.10\nstyle streams can be wrapped in a Readable class using the `wrap()`\nmethod.\n\n## Class: stream.Readable\n\n<!--type=class-->\n\nA `Readable Stream` has the following methods, members, and events.\n\nNote that `stream.Readable` is an abstract class designed to be\nextended with an underlying implementation of the `_read(size)`\nmethod. (See below.)\n\n### new stream.Readable([options])\n\n* `options` {Object}\n  * `highWaterMark` {Number} The maximum number of bytes to store in\n    the internal buffer before ceasing to read from the underlying\n    resource.  Default=16kb\n  * `encoding` {String} If specified, then buffers will be decoded to\n    strings using the specified encoding.  Default=null\n  * `objectMode` {Boolean} Whether this stream should behave\n    as a stream of objects. Meaning that stream.read(n) returns\n    a single value instead of a Buffer of size n\n\nIn classes that extend the Readable class, make sure to call the\nconstructor so that the buffering settings can be properly\ninitialized.\n\n### readable.\\_read(size)\n\n* `size` {Number} Number of bytes to read asynchronously\n\nNote: **This function should NOT be called directly.**  It should be\nimplemented by child classes, and called by the internal Readable\nclass methods only.\n\nAll Readable stream implementations must provide a `_read` method\nto fetch data from the underlying resource.\n\nThis method is prefixed with an underscore because it is internal to\nthe class that defines it, and should not be called directly by user\nprograms.  However, you **are** expected to override this method in\nyour own extension classes.\n\nWhen data is available, put it into the read queue by calling\n`readable.push(chunk)`.  If `push` returns false, then you should stop\nreading.  When `_read` is called again, you should start pushing more\ndata.\n\nThe `size` argument is advisory.  Implementations where a "read" is a\nsingle call that returns data can use this to know how much data to\nfetch.  Implementations where that is not relevant, such as TCP or\nTLS, may ignore this argument, and simply provide data whenever it\nbecomes available.  There is no need, for example to "wait" until\n`size` bytes are available before calling `stream.push(chunk)`.\n\n### readable.push(chunk)\n\n* `chunk` {Buffer | null | String} Chunk of data to push into the read queue\n* return {Boolean} Whether or not more pushes should be performed\n\nNote: **This function should be called by Readable implementors, NOT\nby consumers of Readable subclasses.**  The `_read()` function will not\nbe called again until at least one `push(chunk)` call is made.  If no\ndata is available, then you MAY call `push(\'\')` (an empty string) to\nallow a future `_read` call, without adding any data to the queue.\n\nThe `Readable` class works by putting data into a read queue to be\npulled out later by calling the `read()` method when the `\'readable\'`\nevent fires.\n\nThe `push()` method will explicitly insert some data into the read\nqueue.  If it is called with `null` then it will signal the end of the\ndata.\n\nIn some cases, you may be wrapping a lower-level source which has some\nsort of pause/resume mechanism, and a data callback.  In those cases,\nyou could wrap the low-level source object by doing something like\nthis:\n\n```javascript\n// source is an object with readStop() and readStart() methods,\n// and an `ondata` member that gets called when it has data, and\n// an `onend` member that gets called when the data is over.\n\nvar stream = new Readable();\n\nsource.ondata = function(chunk) {\n  // if push() returns false, then we need to stop reading from source\n  if (!stream.push(chunk))\n    source.readStop();\n};\n\nsource.onend = function() {\n  stream.push(null);\n};\n\n// _read will be called when the stream wants to pull more data in\n// the advisory size argument is ignored in this case.\nstream._read = function(n) {\n  source.readStart();\n};\n```\n\n### readable.unshift(chunk)\n\n* `chunk` {Buffer | null | String} Chunk of data to unshift onto the read queue\n* return {Boolean} Whether or not more pushes should be performed\n\nThis is the corollary of `readable.push(chunk)`.  Rather than putting\nthe data at the *end* of the read queue, it puts it at the *front* of\nthe read queue.\n\nThis is useful in certain use-cases where a stream is being consumed\nby a parser, which needs to "un-consume" some data that it has\noptimistically pulled out of the source.\n\n```javascript\n// A parser for a simple data protocol.\n// The "header" is a JSON object, followed by 2 \\n characters, and\n// then a message body.\n//\n// Note: This can be done more simply as a Transform stream.  See below.\n\nfunction SimpleProtocol(source, options) {\n  if (!(this instanceof SimpleProtocol))\n    return new SimpleProtocol(options);\n\n  Readable.call(this, options);\n  this._inBody = false;\n  this._sawFirstCr = false;\n\n  // source is a readable stream, such as a socket or file\n  this._source = source;\n\n  var self = this;\n  source.on(\'end\', function() {\n    self.push(null);\n  });\n\n  // give it a kick whenever the source is readable\n  // read(0) will not consume any bytes\n  source.on(\'readable\', function() {\n    self.read(0);\n  });\n\n  this._rawHeader = [];\n  this.header = null;\n}\n\nSimpleProtocol.prototype = Object.create(\n  Readable.prototype, { constructor: { value: SimpleProtocol }});\n\nSimpleProtocol.prototype._read = function(n) {\n  if (!this._inBody) {\n    var chunk = this._source.read();\n\n    // if the source doesn\'t have data, we don\'t have data yet.\n    if (chunk === null)\n      return this.push(\'\');\n\n    // check if the chunk has a \\n\\n\n    var split = -1;\n    for (var i = 0; i < chunk.length; i++) {\n      if (chunk[i] === 10) { // \'\\n\'\n        if (this._sawFirstCr) {\n          split = i;\n          break;\n        } else {\n          this._sawFirstCr = true;\n        }\n      } else {\n        this._sawFirstCr = false;\n      }\n    }\n\n    if (split === -1) {\n      // still waiting for the \\n\\n\n      // stash the chunk, and try again.\n      this._rawHeader.push(chunk);\n      this.push(\'\');\n    } else {\n      this._inBody = true;\n      var h = chunk.slice(0, split);\n      this._rawHeader.push(h);\n      var header = Buffer.concat(this._rawHeader).toString();\n      try {\n        this.header = JSON.parse(header);\n      } catch (er) {\n        this.emit(\'error\', new Error(\'invalid simple protocol data\'));\n        return;\n      }\n      // now, because we got some extra data, unshift the rest\n      // back into the read queue so that our consumer will see it.\n      var b = chunk.slice(split);\n      this.unshift(b);\n\n      // and let them know that we are done parsing the header.\n      this.emit(\'header\', this.header);\n    }\n  } else {\n    // from there on, just provide the data to our consumer.\n    // careful not to push(null), since that would indicate EOF.\n    var chunk = this._source.read();\n    if (chunk) this.push(chunk);\n  }\n};\n\n// Usage:\nvar parser = new SimpleProtocol(source);\n// Now parser is a readable stream that will emit \'header\'\n// with the parsed header data.\n```\n\n### readable.wrap(stream)\n\n* `stream` {Stream} An "old style" readable stream\n\nIf you are using an older Node library that emits `\'data\'` events and\nhas a `pause()` method that is advisory only, then you can use the\n`wrap()` method to create a Readable stream that uses the old stream\nas its data source.\n\nFor example:\n\n```javascript\nvar OldReader = require(\'./old-api-module.js\').OldReader;\nvar oreader = new OldReader;\nvar Readable = require(\'stream\').Readable;\nvar myReader = new Readable().wrap(oreader);\n\nmyReader.on(\'readable\', function() {\n  myReader.read(); // etc.\n});\n```\n\n### Event: \'readable\'\n\nWhen there is data ready to be consumed, this event will fire.\n\nWhen this event emits, call the `read()` method to consume the data.\n\n### Event: \'end\'\n\nEmitted when the stream has received an EOF (FIN in TCP terminology).\nIndicates that no more `\'data\'` events will happen. If the stream is\nalso writable, it may be possible to continue writing.\n\n### Event: \'data\'\n\nThe `\'data\'` event emits either a `Buffer` (by default) or a string if\n`setEncoding()` was used.\n\nNote that adding a `\'data\'` event listener will switch the Readable\nstream into "old mode", where data is emitted as soon as it is\navailable, rather than waiting for you to call `read()` to consume it.\n\n### Event: \'error\'\n\nEmitted if there was an error receiving data.\n\n### Event: \'close\'\n\nEmitted when the underlying resource (for example, the backing file\ndescriptor) has been closed. Not all streams will emit this.\n\n### readable.setEncoding(encoding)\n\nMakes the `\'data\'` event emit a string instead of a `Buffer`. `encoding`\ncan be `\'utf8\'`, `\'utf16le\'` (`\'ucs2\'`), `\'ascii\'`, or `\'hex\'`.\n\nThe encoding can also be set by specifying an `encoding` field to the\nconstructor.\n\n### readable.read([size])\n\n* `size` {Number | null} Optional number of bytes to read.\n* Return: {Buffer | String | null}\n\nNote: **This function SHOULD be called by Readable stream users.**\n\nCall this method to consume data once the `\'readable\'` event is\nemitted.\n\nThe `size` argument will set a minimum number of bytes that you are\ninterested in.  If not set, then the entire content of the internal\nbuffer is returned.\n\nIf there is no data to consume, or if there are fewer bytes in the\ninternal buffer than the `size` argument, then `null` is returned, and\na future `\'readable\'` event will be emitted when more is available.\n\nCalling `stream.read(0)` will always return `null`, and will trigger a\nrefresh of the internal buffer, but otherwise be a no-op.\n\n### readable.pipe(destination, [options])\n\n* `destination` {Writable Stream}\n* `options` {Object} Optional\n  * `end` {Boolean} Default=true\n\nConnects this readable stream to `destination` WriteStream. Incoming\ndata on this stream gets written to `destination`.  Properly manages\nback-pressure so that a slow destination will not be overwhelmed by a\nfast readable stream.\n\nThis function returns the `destination` stream.\n\nFor example, emulating the Unix `cat` command:\n\n    process.stdin.pipe(process.stdout);\n\nBy default `end()` is called on the destination when the source stream\nemits `end`, so that `destination` is no longer writable. Pass `{ end:\nfalse }` as `options` to keep the destination stream open.\n\nThis keeps `writer` open so that "Goodbye" can be written at the\nend.\n\n    reader.pipe(writer, { end: false });\n    reader.on("end", function() {\n      writer.end("Goodbye\\n");\n    });\n\nNote that `process.stderr` and `process.stdout` are never closed until\nthe process exits, regardless of the specified options.\n\n### readable.unpipe([destination])\n\n* `destination` {Writable Stream} Optional\n\nUndo a previously established `pipe()`.  If no destination is\nprovided, then all previously established pipes are removed.\n\n### readable.pause()\n\nSwitches the readable stream into "old mode", where data is emitted\nusing a `\'data\'` event rather than being buffered for consumption via\nthe `read()` method.\n\nCeases the flow of data.  No `\'data\'` events are emitted while the\nstream is in a paused state.\n\n### readable.resume()\n\nSwitches the readable stream into "old mode", where data is emitted\nusing a `\'data\'` event rather than being buffered for consumption via\nthe `read()` method.\n\nResumes the incoming `\'data\'` events after a `pause()`.\n\n\n## Class: stream.Writable\n\n<!--type=class-->\n\nA `Writable` Stream has the following methods, members, and events.\n\nNote that `stream.Writable` is an abstract class designed to be\nextended with an underlying implementation of the\n`_write(chunk, encoding, cb)` method. (See below.)\n\n### new stream.Writable([options])\n\n* `options` {Object}\n  * `highWaterMark` {Number} Buffer level when `write()` starts\n    returning false. Default=16kb\n  * `decodeStrings` {Boolean} Whether or not to decode strings into\n    Buffers before passing them to `_write()`.  Default=true\n\nIn classes that extend the Writable class, make sure to call the\nconstructor so that the buffering settings can be properly\ninitialized.\n\n### writable.\\_write(chunk, encoding, callback)\n\n* `chunk` {Buffer | String} The chunk to be written.  Will always\n  be a buffer unless the `decodeStrings` option was set to `false`.\n* `encoding` {String} If the chunk is a string, then this is the\n  encoding type.  Ignore chunk is a buffer.  Note that chunk will\n  **always** be a buffer unless the `decodeStrings` option is\n  explicitly set to `false`.\n* `callback` {Function} Call this function (optionally with an error\n  argument) when you are done processing the supplied chunk.\n\nAll Writable stream implementations must provide a `_write` method to\nsend data to the underlying resource.\n\nNote: **This function MUST NOT be called directly.**  It should be\nimplemented by child classes, and called by the internal Writable\nclass methods only.\n\nCall the callback using the standard `callback(error)` pattern to\nsignal that the write completed successfully or with an error.\n\nIf the `decodeStrings` flag is set in the constructor options, then\n`chunk` may be a string rather than a Buffer, and `encoding` will\nindicate the sort of string that it is.  This is to support\nimplementations that have an optimized handling for certain string\ndata encodings.  If you do not explicitly set the `decodeStrings`\noption to `false`, then you can safely ignore the `encoding` argument,\nand assume that `chunk` will always be a Buffer.\n\nThis method is prefixed with an underscore because it is internal to\nthe class that defines it, and should not be called directly by user\nprograms.  However, you **are** expected to override this method in\nyour own extension classes.\n\n\n### writable.write(chunk, [encoding], [callback])\n\n* `chunk` {Buffer | String} Data to be written\n* `encoding` {String} Optional.  If `chunk` is a string, then encoding\n  defaults to `\'utf8\'`\n* `callback` {Function} Optional.  Called when this chunk is\n  successfully written.\n* Returns {Boolean}\n\nWrites `chunk` to the stream.  Returns `true` if the data has been\nflushed to the underlying resource.  Returns `false` to indicate that\nthe buffer is full, and the data will be sent out in the future. The\n`\'drain\'` event will indicate when the buffer is empty again.\n\nThe specifics of when `write()` will return false, is determined by\nthe `highWaterMark` option provided to the constructor.\n\n### writable.end([chunk], [encoding], [callback])\n\n* `chunk` {Buffer | String} Optional final data to be written\n* `encoding` {String} Optional.  If `chunk` is a string, then encoding\n  defaults to `\'utf8\'`\n* `callback` {Function} Optional.  Called when the final chunk is\n  successfully written.\n\nCall this method to signal the end of the data being written to the\nstream.\n\n### Event: \'drain\'\n\nEmitted when the stream\'s write queue empties and it\'s safe to write\nwithout buffering again. Listen for it when `stream.write()` returns\n`false`.\n\n### Event: \'close\'\n\nEmitted when the underlying resource (for example, the backing file\ndescriptor) has been closed. Not all streams will emit this.\n\n### Event: \'finish\'\n\nWhen `end()` is called and there are no more chunks to write, this\nevent is emitted.\n\n### Event: \'pipe\'\n\n* `source` {Readable Stream}\n\nEmitted when the stream is passed to a readable stream\'s pipe method.\n\n### Event \'unpipe\'\n\n* `source` {Readable Stream}\n\nEmitted when a previously established `pipe()` is removed using the\nsource Readable stream\'s `unpipe()` method.\n\n## Class: stream.Duplex\n\n<!--type=class-->\n\nA "duplex" stream is one that is both Readable and Writable, such as a\nTCP socket connection.\n\nNote that `stream.Duplex` is an abstract class designed to be\nextended with an underlying implementation of the `_read(size)`\nand `_write(chunk, encoding, callback)` methods as you would with a Readable or\nWritable stream class.\n\nSince JavaScript doesn\'t have multiple prototypal inheritance, this\nclass prototypally inherits from Readable, and then parasitically from\nWritable.  It is thus up to the user to implement both the lowlevel\n`_read(n)` method as well as the lowlevel `_write(chunk, encoding, cb)` method\non extension duplex classes.\n\n### new stream.Duplex(options)\n\n* `options` {Object} Passed to both Writable and Readable\n  constructors. Also has the following fields:\n  * `allowHalfOpen` {Boolean} Default=true.  If set to `false`, then\n    the stream will automatically end the readable side when the\n    writable side ends and vice versa.\n\nIn classes that extend the Duplex class, make sure to call the\nconstructor so that the buffering settings can be properly\ninitialized.\n\n## Class: stream.Transform\n\nA "transform" stream is a duplex stream where the output is causally\nconnected in some way to the input, such as a zlib stream or a crypto\nstream.\n\nThere is no requirement that the output be the same size as the input,\nthe same number of chunks, or arrive at the same time.  For example, a\nHash stream will only ever have a single chunk of output which is\nprovided when the input is ended.  A zlib stream will either produce\nmuch smaller or much larger than its input.\n\nRather than implement the `_read()` and `_write()` methods, Transform\nclasses must implement the `_transform()` method, and may optionally\nalso implement the `_flush()` method.  (See below.)\n\n### new stream.Transform([options])\n\n* `options` {Object} Passed to both Writable and Readable\n  constructors.\n\nIn classes that extend the Transform class, make sure to call the\nconstructor so that the buffering settings can be properly\ninitialized.\n\n### transform.\\_transform(chunk, encoding, callback)\n\n* `chunk` {Buffer | String} The chunk to be transformed.  Will always\n  be a buffer unless the `decodeStrings` option was set to `false`.\n* `encoding` {String} If the chunk is a string, then this is the\n  encoding type.  (Ignore if `decodeStrings` chunk is a buffer.)\n* `callback` {Function} Call this function (optionally with an error\n  argument) when you are done processing the supplied chunk.\n\nNote: **This function MUST NOT be called directly.**  It should be\nimplemented by child classes, and called by the internal Transform\nclass methods only.\n\nAll Transform stream implementations must provide a `_transform`\nmethod to accept input and produce output.\n\n`_transform` should do whatever has to be done in this specific\nTransform class, to handle the bytes being written, and pass them off\nto the readable portion of the interface.  Do asynchronous I/O,\nprocess things, and so on.\n\nCall `transform.push(outputChunk)` 0 or more times to generate output\nfrom this input chunk, depending on how much data you want to output\nas a result of this chunk.\n\nCall the callback function only when the current chunk is completely\nconsumed.  Note that there may or may not be output as a result of any\nparticular input chunk.\n\nThis method is prefixed with an underscore because it is internal to\nthe class that defines it, and should not be called directly by user\nprograms.  However, you **are** expected to override this method in\nyour own extension classes.\n\n### transform.\\_flush(callback)\n\n* `callback` {Function} Call this function (optionally with an error\n  argument) when you are done flushing any remaining data.\n\nNote: **This function MUST NOT be called directly.**  It MAY be implemented\nby child classes, and if so, will be called by the internal Transform\nclass methods only.\n\nIn some cases, your transform operation may need to emit a bit more\ndata at the end of the stream.  For example, a `Zlib` compression\nstream will store up some internal state so that it can optimally\ncompress the output.  At the end, however, it needs to do the best it\ncan with what is left, so that the data will be complete.\n\nIn those cases, you can implement a `_flush` method, which will be\ncalled at the very end, after all the written data is consumed, but\nbefore emitting `end` to signal the end of the readable side.  Just\nlike with `_transform`, call `transform.push(chunk)` zero or more\ntimes, as appropriate, and call `callback` when the flush operation is\ncomplete.\n\nThis method is prefixed with an underscore because it is internal to\nthe class that defines it, and should not be called directly by user\nprograms.  However, you **are** expected to override this method in\nyour own extension classes.\n\n### Example: `SimpleProtocol` parser\n\nThe example above of a simple protocol parser can be implemented much\nmore simply by using the higher level `Transform` stream class.\n\nIn this example, rather than providing the input as an argument, it\nwould be piped into the parser, which is a more idiomatic Node stream\napproach.\n\n```javascript\nfunction SimpleProtocol(options) {\n  if (!(this instanceof SimpleProtocol))\n    return new SimpleProtocol(options);\n\n  Transform.call(this, options);\n  this._inBody = false;\n  this._sawFirstCr = false;\n  this._rawHeader = [];\n  this.header = null;\n}\n\nSimpleProtocol.prototype = Object.create(\n  Transform.prototype, { constructor: { value: SimpleProtocol }});\n\nSimpleProtocol.prototype._transform = function(chunk, encoding, done) {\n  if (!this._inBody) {\n    // check if the chunk has a \\n\\n\n    var split = -1;\n    for (var i = 0; i < chunk.length; i++) {\n      if (chunk[i] === 10) { // \'\\n\'\n        if (this._sawFirstCr) {\n          split = i;\n          break;\n        } else {\n          this._sawFirstCr = true;\n        }\n      } else {\n        this._sawFirstCr = false;\n      }\n    }\n\n    if (split === -1) {\n      // still waiting for the \\n\\n\n      // stash the chunk, and try again.\n      this._rawHeader.push(chunk);\n    } else {\n      this._inBody = true;\n      var h = chunk.slice(0, split);\n      this._rawHeader.push(h);\n      var header = Buffer.concat(this._rawHeader).toString();\n      try {\n        this.header = JSON.parse(header);\n      } catch (er) {\n        this.emit(\'error\', new Error(\'invalid simple protocol data\'));\n        return;\n      }\n      // and let them know that we are done parsing the header.\n      this.emit(\'header\', this.header);\n\n      // now, because we got some extra data, emit this first.\n      this.push(b);\n    }\n  } else {\n    // from there on, just provide the data to our consumer as-is.\n    this.push(b);\n  }\n  done();\n};\n\nvar parser = new SimpleProtocol();\nsource.pipe(parser)\n\n// Now parser is a readable stream that will emit \'header\'\n// with the parsed header data.\n```\n\n\n## Class: stream.PassThrough\n\nThis is a trivial implementation of a `Transform` stream that simply\npasses the input bytes across to the output.  Its purpose is mainly\nfor examples and testing, but there are occasionally use cases where\nit can come in handy.\n\n\n[EventEmitter]: events.html#events_class_events_eventemitter\n',
887 silly resolved     readmeFilename: 'README.md',
887 silly resolved     bugs: { url: 'https://github.com/isaacs/readable-stream/issues' },
887 silly resolved     homepage: 'https://github.com/isaacs/readable-stream',
887 silly resolved     _id: 'readable-stream@1.1.10',
887 silly resolved     dist: { shasum: '48fd4e9a349c53e4d34b778c1cde397c190a15ef' },
887 silly resolved     _from: 'readable-stream@~1.1.9',
887 silly resolved     _resolved: 'https://registry.npmjs.org/readable-stream/-/readable-stream-1.1.10.tgz' },
887 silly resolved   { name: 'simplesmtp',
887 silly resolved     description: 'Simple SMTP server module to create custom SMTP servers',
887 silly resolved     version: '0.3.20',
887 silly resolved     author: { name: 'Andris Reinman' },
887 silly resolved     maintainers: [ [Object] ],
887 silly resolved     repository: { type: 'git', url: 'http://github.com/andris9/simplesmtp.git' },
887 silly resolved     scripts: { test: 'nodeunit test/' },
887 silly resolved     main: './lib/smtp',
887 silly resolved     licenses: [ [Object] ],
887 silly resolved     dependencies: { rai: '~0.1', xoauth2: '~0.1' },
887 silly resolved     devDependencies: { nodeunit: '*', mailcomposer: '*' },
887 silly resolved     engines: { node: '>=0.8.0' },
887 silly resolved     keywords: [ 'servers', 'text-based', 'smtp', 'email', 'mail', 'e-mail' ],
887 silly resolved     readme: '# simplesmtp\n\nThis is a module to easily create custom SMTP servers and clients - use SMTP as a first class protocol in Node.JS!\n\n[![Build Status](https://secure.travis-ci.org/andris9/simplesmtp.png)](http://travis-ci.org/andris9/simplesmtp)\n[![NPM version](https://badge.fury.io/js/simplesmtp.png)](http://badge.fury.io/js/simplesmtp)\n\n## Version warning!\n\nIf you are using node v0.6, then the last usable version of **simplesmtp** is v0.2.7\n\nCurrent version of simplesmtp is fully supported for Node v0.8+\n\n## Support simplesmtp development\n\n[![Donate to author](https://www.paypalobjects.com/en_US/i/btn/btn_donate_SM.gif)](https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=DB26KWR2BQX5W)\n\n## SMTP Server\n\n## Simple SMTP server\n\nFor a simple inbound only, no authentication SMTP server you can use\n\n    simplesmtp.createSimpleServer([options], requestListener).listen(port);\n\nExample\n\n    simplesmtp.createSimpleServer({SMTPBanner:"My Server"}, function(req){\n        req.pipe(process.stdout);\n        req.accept();\n    }).listen(port);\n\nProperties\n\n  * **req.from** - From address\n  * **req.to** - an array of To addresses\n  * **req.host** - hostname reported by the client\n  * **req.remodeAddress** - client IP address\n\nMethods\n\n  * **req.accept** *([id])* - Accept the message with the selected ID\n  * **req.reject** *([message])* - Reject the message with the selected message\n  * **req.pipe** *(stream)* - Pipe the incoming data to a writable stream\n\nEvents\n\n  * **\'data\'** *(chunk)* - A chunk (Buffer) of the message.\n  * **\'end\'** - The message has been transferred\n\n\n## Advanced SMTP server\n\n### Usage\n\nCreate a new SMTP server instance with\n\n    var smtp = simplesmtp.createServer([options]);\n\nAnd start listening on selected port\n\n    smtp.listen(25, [function(err){}]);\n\nSMTP options can include the following:\n\n  * **name** - the hostname of the server, will be used for informational messages\n  * **debug** - if set to true, print out messages about the connection\n  * **timeout** - client timeout in milliseconds, defaults to 60 000 (60 sec.)\n  * **secureConnection** - start a server on secure connection\n  * **SMTPBanner** - greeting banner that is sent to the client on connection\n  * **requireAuthentication** - if set to true, require that the client must authenticate itself\n  * **enableAuthentication** - if set to true, client may authenticate itself but don\'t have to (as opposed to `requireAuthentication` that explicitly requires clients to authenticate themselves)\n  * **maxSize** - maximum size of an e-mail in bytes (currently informational only)\n  * **credentials** - TLS credentials (`{key:\'\', cert:\'\', ca:[\'\']}`) for the server\n  * **authMethods** - allowed authentication methods, defaults to `["PLAIN", "LOGIN"]`\n  * **disableEHLO** - if set to true, support HELO command only\n  * **ignoreTLS** - if set to true, allow client do not use STARTTLS\n  * **disableDNSValidation** - if set, do not validate sender domains\n\n### Example\n\n    var simplesmtp = require("simplesmtp"),\n        fs = require("fs");\n\n    var smtp = simplesmtp.createServer();\n    smtp.listen(25);\n\n    smtp.on("startData", function(connection){\n        console.log("Message from:", connection.from);\n        console.log("Message to:", connection.to);\n        connection.saveStream = fs.createWriteStream("/tmp/message.txt");\n    });\n\n    smtp.on("data", function(connection, chunk){\n        connection.saveStream.write(chunk);\n    });\n\n    smtp.on("dataReady", function(connection, callback){\n        connection.saveStream.end();\n        console.log("Incoming message saved to /tmp/message.txt");\n        callback(null, "ABC1"); // ABC1 is the queue id to be advertised to the client\n        // callback(new Error("Rejected as spam!")); // reported back to the client\n    });\n\n### Events\n\n  * **startData** *(connection)* - DATA stream is opened by the client (`connection` is an object with `from`, `to`, `host` and `remoteAddress` properties)\n  * **data** *(connection, chunk)* - e-mail data chunk is passed from the client\n  * **dataReady** *(connection, callback)* - client is finished passing e-mail data, `callback` returns the queue id to the client\n  * **authorizeUser** *(connection, username, password, callback)* - will be emitted if `requireAuthentication` option is set to true. `callback` has two parameters *(err, success)* where `success` is Boolean and should be true, if user is authenticated successfully\n  * **validateSender** *(connection, email, callback)* - will be emitted if `validateSender` listener is set up\n  * **validateRecipient** *(connection, email, callback)* - will be emitted it `validataRecipients` listener is set up\n  * **close** *(connection)* - emitted when the connection to client is closed\n\n## SMTP Client\n\n### Usage\n\nSMTP client can be created with `simplesmtp.connect(port[,host][, options])`\nwhere\n\n  * **port** is the port to connect to\n  * **host** is the hostname to connect to (defaults to "localhost")\n  * **options** is an optional options object (see below)\n\n### Connection options\n\nThe following connection options can be used with `simplesmtp.connect`:\n\n  * **secureConnection** - use SSL\n  * **name** - the name of the client server\n  * **auth** - authentication object `{user:"...", pass:"..."}` or `{XOAuthToken:"base64data"}`\n  * **ignoreTLS** - ignore server support for STARTTLS\n  * **tls** - optional options object for `tls.connect`, also applies to STARTTLS. For example `rejectUnauthorized` is set to `false` by default. You can override this option by setting `tls: {rejectUnauthorized: true}`\n  * **debug** - output client and server messages to console\n  * **logFile** - optional filename where communication with remote server has to be logged\n  * **instanceId** - unique instance id for debugging (will be output console with the messages)\n  * **localAddress** - local interface to bind to for network connections (needs Node.js >= 0.11.3 for working with tls)\n  * **greetingTimeout** (defaults to 10000) - Time to wait in ms until greeting message is received from the server\n  * **connectionTimeout** (system default if not set) - Time to wait in ms until the socket is opened to the server\n  * **rejectUnathorized** (defaults to false) - if set to true accepts only valid server certificates. You can override this option with the `tls` option, this is just a shorthand\n  * **dsn** - An object with methods `success`, `failure` and `delay`. If any of these are set to true, DSN will be used\n\n### Connection events\n\nOnce a connection is set up the following events can be listened to:\n\n  * **\'idle\'** - the connection to the SMTP server has been successfully set up and the client is waiting for an envelope\n  * **\'message\'** - the envelope is passed successfully to the server and a message stream can be started\n  * **\'ready\'** `(success)` - the message was sent\n  * **\'rcptFailed\'** `(addresses)` - not all recipients were accepted (invalid addresses are included as an array)\n  * **\'error\'** `(err, stage)` - An error occurred. The connection is closed and an \'end\' event is emitted shortly. Second argument indicates on which SMTP session stage an error occured.\n  * **\'end\'** - connection to the client is closed\n\n### Sending an envelope\n\nWhen an `\'idle\'` event is emitted, an envelope object can be sent to the server.\nThis includes a string `from` and an array of strings `to` property.\n\nEnvelope can be sent with `client.useEnvelope(envelope)`\n\n    // run only once as \'idle\' is emitted again after message delivery\n    client.once("idle", function(){\n        client.useEnvelope({\n            from: "me@example.com",\n            to: ["receiver1@example.com", "receiver2@example.com"]\n        });\n    });\n\nThe `to` part of the envelope includes **all** recipients from `To:`, `Cc:` and `Bcc:` fields.\n\nIf setting the envelope up fails, an error is emitted. If only some (not all)\nrecipients are not accepted, the mail can still be sent but an `rcptFailed`\nevent is emitted.\n\n    client.on("rcptFailed", function(addresses){\n        console.log("The following addresses were rejected: ", addresses);\n    });\n\nIf the envelope is set up correctly a `\'message\'` event is emitted.\n\n### Sending a message\n\nWhen `\'message\'` event is emitted, it is possible to send mail. To do this\nyou can pipe directly a message source (for example an .eml file) to the client\nor alternatively you can send the message with `client.write` calls (you also\nneed to call `client.end()` once the message is completed.\n\nIf you are piping a stream to the client, do not leave the `\'end\'` event out,\nthis is needed to complete the message sequence by the client.\n\n    client.on("message", function(){\n        fs.createReadStream("test.eml").pipe(client);\n    });\n\nOnce the message is delivered a `\'ready\'` event is emitted. The event has an\nparameter which indicates if the message was transmitted( (true) or not (false)\nand another which includes the last received data from the server.\n\n    client.on("ready", function(success, response){\n        if(success){\n            console.log("The message was transmitted successfully with "+response);\n        }\n    });\n\n### XOAUTH\n\n**simplesmtp** supports [XOAUTH2 and XOAUTH](https://developers.google.com/google-apps/gmail/oauth_protocol) authentication.\n\n#### XOAUTH2\n\nTo use this feature you can set `XOAuth2` param as an `auth` option\n\n    var mailOptions = {\n        ...,\n        auth:{\n            XOAuth2: {\n                user: "example.user@gmail.com",\n                clientId: "8819981768.apps.googleusercontent.com",\n                clientSecret: "{client_secret}",\n                refreshToken: "1/xEoDL4iW3cxlI7yDbSRFYNG01kVKM2C-259HOF2aQbI",\n                accessToken: "vF9dft4qmTc2Nvb3RlckBhdHRhdmlzdGEuY29tCg==",\n                timeout: 3600\n            }\n        }\n    }\n\n`accessToken` and `timeout` values are optional. If login fails a new access token is generated automatically.\n\n#### XOAUTH\n\nTo use this feature you can set `XOAuthToken` param as an `auth` option\n\n    var mailOptions = {\n        ...,\n        auth:{\n            XOAuthToken: "R0VUIGh0dHBzOi8vbWFpbC5nb29...."\n        }\n    }\n\nAlternatively it is also possible to use XOAuthToken generators (supported by Nodemailer) - this\nneeds to be an object with a mandatory method `generate` that takes a callback function for\ngenerating a XOAUTH token string. This is better for generating tokens only when needed -\nthere is no need to calculate unique token for every e-mail request, since a lot of these\nmight share the same connection and thus the cleint needs not to re-authenticate itself\nwith another token.\n\n    var XOGen = {\n        token: "abc",\n        generate: function(callback){\n            if(1 != 1){\n                return callback(new Error("Tokens can\'t be generated in strange environments"));\n            }\n            callback(null, new Buffer(this.token, "utf-8").toString("base64"));\n        }\n    }\n\n    var mailOptions = {\n        ...,\n        auth:{\n            XOAuthToken: XOGen\n        }\n    }\n\n### Error types\n\nEmitted errors include the reason for failing in the `name` property\n\n  * **UnknowAuthError** - the client tried to authenticate but the method was not supported\n  * **AuthError** - the username/password used were rejected\n  * **TLSError** - STARTTLS failed\n  * **SenderError** - the sender e-mail address was rejected\n  * **RecipientError** - all recipients were rejected (if only some of the recipients are rejected, a `\'rcptFailed\'` event is raised instead\n\nThere\'s also an additional property in the error object called `data` that includes\nthe last response received from the server (if available for the current error type).\n\n### About reusing the connection\n\nYou can reuse the same connection several times but you can\'t send a mail\nthrough the same connection concurrently. So if you catch and `\'idle\'` event\nlock the connection to a message process and unlock after `\'ready\'`.\n\nOn `\'error\'` events you should reschedule the message and on `\'end\'` events\nyou should recreate the connection.\n\n### Closing the client\n\nBy default the client tries to keep the connection up. If you want to close it,\nrun `client.quit()` - this sends a `QUIT` command to the server and closes the\nconnection\n\n    client.quit();\n\n## SMTP Client Connection pool\n\n**simplesmtp** has the option for connection pooling if you want to reuse a bulk\nof connections.\n\n### Usage\n\nCreate a connection pool of SMTP clients with\n\n    simplesmtp.createClientPool(port[,host][, options])\n\nwhere\n\n  * **port** is the port to connect to\n  * **host** is the hostname to connect to (defaults to "localhost")\n  * **options** is an optional options object (see below)\n\n### Connection options\n\nThe following connection options can be used with `simplesmtp.connect`:\n\n  * **secureConnection** - use SSL\n  * **name** - the name of the client server\n  * **auth** - authentication object `{user:"...", pass:"..."}` or  `{XOAuthToken:"base64data"}`\n  * **ignoreTLS** - ignore server support for STARTTLS\n  * **debug** - output client and server messages to console\n  * **logFile** - optional filename where communication with remote server has to be logged\n  * **maxConnections** - how many connections to keep in the pool (defaults to 5)\n  * **localAddress** - local interface to bind to for network connections (needs Node.js >= 0.11.3 for working with tls)\n  * **maxMessages** - limit the count of messages to send through a single connection (no limit by default)\n\n### Send an e-mail\n\nE-mails can be sent through the pool with\n\n    pool.sendMail(mail[, callback])\n\nwhere\n\n  * **mail** is a [MailComposer](https://github.com/andris9/mailcomposer) compatible object\n  * **callback** `(error, responseObj)` - is the callback function to run after the message is delivered or an error occured. `responseObj` may include `failedRecipients` which is an array with e-mail addresses that were rejected and `message` which is the last response from the server.\n\n### Errors\n\nIn addition to SMTP client errors another error name is used\n\n  * **DeliveryError** - used if the message was not accepted by the SMTP server\n\n## License\n\n**MIT**\n\n',
887 silly resolved     readmeFilename: 'README.md',
887 silly resolved     bugs: { url: 'https://github.com/andris9/simplesmtp/issues' },
887 silly resolved     homepage: 'https://github.com/andris9/simplesmtp',
887 silly resolved     _id: 'simplesmtp@0.3.20',
887 silly resolved     dist: { shasum: '564e9aee6889308b5ee06c9f4d14daf89f522a12' },
887 silly resolved     _from: 'simplesmtp@~0.2 || ~0.3',
887 silly resolved     _resolved: 'https://registry.npmjs.org/simplesmtp/-/simplesmtp-0.3.20.tgz' },
887 silly resolved   { name: 'mailcomposer',
887 silly resolved     description: 'Compose E-Mail messages',
887 silly resolved     version: '0.2.8',
887 silly resolved     author: { name: 'Andris Reinman' },
887 silly resolved     maintainers: [ [Object] ],
887 silly resolved     repository:
887 silly resolved      { type: 'git',
887 silly resolved        url: 'http://github.com/andris9/mailcomposer.git' },
887 silly resolved     scripts: { test: 'nodeunit test/' },
887 silly resolved     main: './lib/mailcomposer',
887 silly resolved     licenses: [ [Object] ],
887 silly resolved     dependencies:
887 silly resolved      { mimelib: '~0.2.14',
887 silly resolved        mime: '1.2.9',
887 silly resolved        he: '~0.3.6',
887 silly resolved        punycode: '~1.2.3',
887 silly resolved        'follow-redirects': '0.0.3',
887 silly resolved        'dkim-signer': '~0.1.0' },
887 silly resolved     devDependencies: { nodeunit: '*', mailparser: '~0.4.0' },
887 silly resolved     engine: { node: '>=0.4' },
887 silly resolved     keywords: [ 'e-mail', 'mime', 'parser' ],
887 silly resolved     readme: '# mailcomposer\n\n**mailcomposer** is a Node.JS module for generating e-mail messages that can be\nstreamed to SMTP or file.\n\nThis is a standalone module that only generates raw e-mail source, you need to\nwrite your own or use an existing transport mechanism (SMTP client, Amazon SES,\nSendGrid etc). **mailcomposer** frees you from the tedious task of generating\n[rfc2822](http://tools.ietf.org/html/rfc2822) compatible messages.\n\n[![Build Status](https://secure.travis-ci.org/andris9/mailcomposer.png)](http://travis-ci.org/andris9/mailcomposer)\n\n**mailcomposer** supports:\n\n  * **Unicode** to use any characters ✔\n  * **HTML** content as well as **plain text** alternative\n  * **Attachments** and streaming for larger files (use strings, buffers, files or binary streams as attachments)\n  * **Embedded images** in HTML\n  * **DKIM** signing\n  * usage of **your own** transport mechanism\n\n## Support mailcomposer development\n\n[![Donate to author](https://www.paypalobjects.com/en_US/i/btn/btn_donate_SM.gif)](https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=DB26KWR2BQX5W)\n\n## Installation\n\nInstall through NPM\n\n    npm install mailcomposer\n\n## Usage\n\n### Include mailcomposer module\n\n```javascript\nvar MailComposer = require("mailcomposer").MailComposer;\n```\n\n### Create a new `MailComposer` instance\n\n```javascript\nvar mailcomposer = new MailComposer([options]);\n```\n\nWhere `options` is an optional options object with the following possible properties:\n\n  * **escapeSMTP** - if set replaces dots in the beginning of a line with double dots\n  * **encoding** - sets transfer encoding for the textual parts (defaults to `"quoted-printable"`)\n  * **charset** - sets output character set for strings (defaults to `"utf-8"`)\n  * **keepBcc** - if set to true, includes `Bcc:` field in the message headers. Useful for *sendmail* command.\n  * **forceEmbeddedImages** - convert image urls and absolute paths in HTML to embedded attachments.\n\n### Simple example\n\nThe following example generates a simple e-mail message with plaintext and html\nbody.\n\n```javascript\nvar MailComposer = require("mailcomposer").MailComposer;\n    mailcomposer = new MailComposer(),\n    fs = require("fs");\n\n// add additional header field\nmailcomposer.addHeader("x-mailer", "Nodemailer 1.0");\n\n// setup message data\nmailcomposer.setMessageOption({\n    from: "andris@tr.ee",\n    to: "andris@node.ee",\n    body: "Hello world!",\n    html: "<b>Hello world!</b>"\n});\n\nmailcomposer.streamMessage();\n\n// pipe the output to a file\nmailcomposer.pipe(fs.createWriteStream("test.eml"));\n```\n\nThe output for such a script (the contents for "test.eml") would look like:\n\n    MIME-Version: 1.0\n    X-Mailer: Nodemailer 1.0\n    From: andris@tr.ee\n    To: andris@node.ee\n    Content-Type: multipart/alternative;\n            boundary="----mailcomposer-?=_1-1328088797399"\n\n    ------mailcomposer-?=_1-1328088797399\n    Content-Type: text/plain; charset=utf-8\n    Content-Transfer-Encoding: quoted-printable\n\n    Hello world!\n    ------mailcomposer-?=_1-1328088797399\n    Content-Type: text/html; charset=utf-8\n    Content-Transfer-Encoding: quoted-printable\n\n    <b>Hello world!</b>\n    ------mailcomposer-?=_1-1328088797399--\n\n## API\n\n### Add custom headers\n\nHeaders can be added with `mailcomposer.addHeader(key, value[, formatted])` where `formatted` indicates if the value should be kept as is. If the value is missing or falsy, header value is sanitized and folded. If true, the value is passed to output as is.\n\n```javascript\nvar mailcomposer = new MailComposer();\nmailcomposer.addHeader("x-mailer", "Nodemailer 1.0");\n```\n\nIf you add an header value with the same key several times, all of the values will be used\nin the generated header. For example:\n\n```javascript\nmailcomposer.addHeader("x-mailer", "Nodemailer 1.0");\nmailcomposer.addHeader("x-mailer", "Nodemailer 2.0");\n```\n\nWill be generated into\n\n    ...\n    X-Mailer: Nodemailer 1.0\n    X-Mailer: Nodemailer 2.0\n    ...\n\nThe contents of the field value is not edited in any way (except for the folding),\nso if you want to use unicode symbols you need to escape these to mime words\nby yourself. Exception being object values - in this case the object\nis automatically JSONized and mime encoded.\n\n```javascript\n// using objects as header values is allowed (will be converted to JSON)\nvar apiOptions = {};\napiOptions.category = "newuser";\napiOptions.tags = ["user", "web"];\nmailcomposer.addHeader("X-SMTPAPI", apiOptions)\n```\n\n### Add message parts\n\nYou can set message sender, receiver, subject line, message body etc. with\n`mailcomposer.setMessageOption(options)` where options is an object with the\ndata to be set. This function overwrites any previously set values with the\nsame key\n\nThe following example creates a simple e-mail with sender being `andris@tr.ee`,\nreceiver `andris@node.ee` and plaintext part of the message as `Hello world!`:\n\n```javascript\nmailcomposer.setMessageOption({\n    from: "andris@tr.ee",\n    to: "andris@node.ee",\n    body: "Hello world!"\n});\n```\n\nPossible options that can be used are (all fields accept unicode):\n\n  * **from** (alias `sender`) - the sender of the message. If several addresses are given, only the first one will be used\n  * **to** - receivers for the `To:` field\n  * **cc** - receivers for the `Cc:` field\n  * **bcc** - receivers for the `Bcc:` field\n  * **replyTo** (alias `reply_to`) - e-mail address for the `Reply-To:` field\n  * **inReplyTo** - The message-id this message is replying\n  * **references** - Message-id list\n  * **subject** - the subject line of the message\n  * **body** (alias `text`) - the plaintext part of the message\n  * **html** - the HTML part of the message\n  * **envelope** - optional SMTP envelope, if auto generated envelope is not suitable\n\nThis method can be called several times\n\n```javascript\nmailcomposer.setMessageOption({from: "andris@tr.ee"});\nmailcomposer.setMessageOption({to: "andris@node.ee"});\nmailcomposer.setMessageOption({body: "Hello world!"});\n```\n\nTrying to set the same key several times will yield in overwrite\n\n```javascript\nmailcomposer.setMessageOption({body: "Hello world!"});\nmailcomposer.setMessageOption({body: "Hello world?"});\n// body contents will be "Hello world?"\n```\n\n### Address format\n\nAll e-mail address fields take structured e-mail lists (comma separated)\nas the input. Unicode is allowed for all the parts (receiver name, e-mail username\nand domain) of the address. If the domain part contains unicode symbols, it is\nautomatically converted into punycode, user part will be converted into UTF-8\nmime word.\n\nE-mail addresses can be a plain e-mail addresses\n\n    username@example.com\n\nor with a formatted name\n\n    \'Ноде Майлер\' <username@example.com>\n\nOr in case of comma separated lists, the formatting can be mixed\n\n    username@example.com, \'Ноде Майлер\' <username@example.com>, "Name, User" <username@example.com>\n\n### SMTP envelope\n\nSMTP envelope is usually auto generated from `from`, `to`, `cc` and `bcc` fields but\nif for some reason you want to specify it yourself, you can do it with `envelope` property.\n\n`envelope` is an object with the following params: `from`, `to`, `cc` and `bcc` just like\nwith regular mail options. You can also use the regular address format.\n\n```javascript\nmailOptions = {\n    ...,\n    from: "mailer@node.ee",\n    to: "daemon@node.ee",\n    envelope: {\n        from: "Daemon <deamon@node.ee>",\n        to: "mailer@node.ee, Mailer <mailer2@node.ee>"\n    }\n}\n```\n\n### Add attachments\n\nAttachments can be added with `mailcomposer.addAttachment(attachment)` where\n`attachment` is an object with attachment (meta)data with the following possible\nproperties:\n\n  * **fileName** (alias `filename`) - filename to be reported as the name of the attached file, use of unicode is allowed\n  * **cid** - content id for using inline images in HTML message source\n  * **contents** - String or a Buffer contents for the attachment\n  * **filePath** - path to a file or an URL if you want to stream the file instead of including it (better for larger attachments)\n  * **streamSource** - Stream object for arbitrary binary streams if you want to stream the contents (needs to support *pause*/*resume*)\n  * **contentType** - content type for the attachment, if not set will be derived from the `fileName` property\n  * **contentDisposition** - content disposition type for the attachment, defaults to "attachment"\n  * **userAgent** - User-Agent string to be used if the fileName points to an URL\n\nOne of `contents`, `filePath` or `streamSource` must be specified, if none is\npresent, the attachment will be discarded. Other fields are optional.\n\nAttachments can be added as many as you want.\n\n**Using embedded images in HTML**\n\nAttachments can be used as embedded images in the HTML body. To use this\nfeature, you need to set additional property of the attachment - `cid`\n(unique identifier of the file) which is a reference to the attachment file.\nThe same `cid` value must be used as the image URL in HTML (using `cid:` as\nthe URL protocol, see example below).\n\nNB! the cid value should be as unique as possible!\n\n```javascript\nvar cid_value = Date.now() + \'.image.jpg\';\n\nvar html = \'Embedded image: <img src="cid:\' + cid_value + \'" />\';\n\nvar attachment = {\n    fileName: "image.png",\n    filePath: "/static/images/image.png",\n    cid: cid_value\n};\n```\n\n**Automatic embedding images**\n\nIf you want to convert images in the HTML to embedded images automatically, you can\nset mailcomposer option `forceEmbeddedImages` to true. In this case all images in\nthe HTML that are either using an absolute URL (http://...) or absolute file path\n(/path/to/file) are replaced with embedded attachments.\n\nFor example when using this code\n\n```javascript\nvar mailcomposer = new MailComposer({forceEmbeddedImages: true});\nmailcomposer.setMessageOption({\n    html: \'Embedded image: <img src="http://example.com/image.png">\'\n});\n```\n\nThe image linked is fetched and added automatically as an attachment and the url\nin the HTML is replaced automatically with a proper `cid:` string.\n\n### Add alternatives to HTML and text\n\nIn addition to text and HTML, any kind of data can be inserted as an alternative content of the main body - for example a word processing document with the same text as in the HTML field. It is the job of the e-mail client to select and show the best fitting alternative to the reader.\n\nAlternatives to text and HTML can be added with `mailcomposer.addAlternative(alternative)` where\n`alternative` is an object with alternative (meta)data with the following possible\nproperties:\n\n  * **contents** - String or a Buffer contents for the attachment\n  * **contentType** - optional content type for the attachment, if not set will be set to "application/octet-stream"\n  * **contentEncoding** - optional value of how the data is encoded, defaults to "base64"\n\nIf `contents` is empty, the alternative will be discarded. Other fields are optional.\n\n**Usage example:**\n\n```javascript\n// add HTML "alternative"\nmailcomposer.setMessageOption({\n    html: "<b>Hello world!</b>"\n});\n\n// add Markdown alternative\nmailcomposer.addAlternative({\n    contentType: "text/x-web-markdown",\n    contents: "**Hello world!**"\n});\n```\n\nIf the receiving e-mail client can render messages in Markdown syntax as well, it could prefer\nto display this alternative as the main content of the message.\n\nAlternatives can be added as many as you want.\n\n### DKIM Signing\n\n**mailcomposer** supports DKIM signing with very simple setup. Use this with caution\nthough since the generated message needs to be buffered entirely before it can be\nsigned - in this case the streaming capability offered by mailcomposer is illusionary,\nthere will only be one `\'data\'` event with the entire message. Not a big deal with\nsmall messages but might consume a lot of RAM when using larger attachments.\n\nSet up the DKIM signing with `useDKIM` method:\n\n```javascript\nmailcomposer.useDKIM(dkimOptions)\n```\n\nWhere `dkimOptions` includes necessary options for signing\n\n  * **domainName** - the domainname that is being used for signing\n  * **keySelector** - key selector. If you have set up a TXT record with DKIM public key at *zzz._domainkey.example.com* then `zzz` is the selector\n  * **privateKey** - DKIM private key that is used for signing as a string\n  * **headerFieldNames** - optional colon separated list of header fields to sign, by default all fields suggested by RFC4871 #5.5 are used\n\n**NB!** Currently if several header fields with the same name exists, only the last one (the one in the bottom) is signed.\n\nExample:\n\n```javascript\nmailcomposer.setMessageOption({from: "andris@tr.ee"});\nmailcomposer.setMessageOption({to: "andris@node.ee"});\nmailcomposer.setMessageOption({body: "Hello world!"});\nmailcomposer.useDKIM({\n    domainName: "node.ee",\n    keySelector: "dkim",\n    privateKey: fs.readFileSync("private_key.pem")\n});\n```\n\n### Start streaming\n\nWhen the message data is setup, streaming can be started. After this it is not\npossible to add headers, attachments or change body contents.\n\n```javascript\nmailcomposer.streamMessage();\n```\n\nThis generates `\'data\'` events for the message headers and body and final `\'end\'` event.\nAs `MailComposer` objects are Stream instances, these can be piped\n\n```javascript\n// save the output to a file\nmailcomposer.streamMessage();\nmailcomposer.pipe(fs.createWriteStream("out.txt"));\n```\n\n### Compile the message in one go\n\nIf you do not want to use the streaming possibilities, you can compile the entire\nmessage into a string in one go with `buildMessage`.\n\n```javascript\nmailcomposer.buildMessage(function(err, messageSource){\n    console.log(err || messageSource);\n});\n```\n\nThe function is actually just a wrapper around `streamMessage` and emitted events.\n\n## Envelope\n\nEnvelope can be generated with an `getEnvelope()` which returns an object\nthat includes a `from` address (string) and a list of `to` addresses (array of\nstrings) suitable for forwarding to a SMTP server as `MAIL FROM:` and `RCPT TO:`.\n\n```javascript\nconsole.log(mailcomposer.getEnvelope());\n// {from:"sender@example.com", to:["receiver@example.com"]}\n```\n\n**NB!** both `from` and `to` properties might be missing from the envelope object\nif corresponding addresses were not detected from the e-mail.\n\n## Running tests\n\nTests are run with [nodeunit](https://github.com/caolan/nodeunit)\n\nRun\n\n    npm test\n\n## License\n\n**MIT**\n',
887 silly resolved     readmeFilename: 'README.md',
887 silly resolved     bugs: { url: 'https://github.com/andris9/mailcomposer/issues' },
887 silly resolved     homepage: 'https://github.com/andris9/mailcomposer',
887 silly resolved     _id: 'mailcomposer@0.2.8',
887 silly resolved     dist: { shasum: 'e344f819ebff7aa11537340ef42cbf21b8db7469' },
887 silly resolved     _from: 'mailcomposer@~0.2.7',
887 silly resolved     _resolved: 'https://registry.npmjs.org/mailcomposer/-/mailcomposer-0.2.8.tgz' } ]
888 info install public-address@0.1.0 into /home/vagrant/openclothes/node_modules/nodemailer
889 info install directmail@0.1.6 into /home/vagrant/openclothes/node_modules/nodemailer
890 info install he@0.3.6 into /home/vagrant/openclothes/node_modules/nodemailer
891 info install readable-stream@1.1.10 into /home/vagrant/openclothes/node_modules/nodemailer
892 info install simplesmtp@0.3.20 into /home/vagrant/openclothes/node_modules/nodemailer
893 info install mailcomposer@0.2.8 into /home/vagrant/openclothes/node_modules/nodemailer
894 info installOne public-address@0.1.0
895 info installOne directmail@0.1.6
896 info installOne he@0.3.6
897 info installOne readable-stream@1.1.10
898 info installOne simplesmtp@0.3.20
899 info installOne mailcomposer@0.2.8
900 info /home/vagrant/openclothes/node_modules/nodemailer/node_modules/public-address unbuild
901 info /home/vagrant/openclothes/node_modules/nodemailer/node_modules/directmail unbuild
902 info /home/vagrant/openclothes/node_modules/nodemailer/node_modules/he unbuild
903 info /home/vagrant/openclothes/node_modules/nodemailer/node_modules/readable-stream unbuild
904 info /home/vagrant/openclothes/node_modules/nodemailer/node_modules/simplesmtp unbuild
905 info /home/vagrant/openclothes/node_modules/nodemailer/node_modules/mailcomposer unbuild
906 verbose tar unpack /home/vagrant/.npm/public-address/0.1.0/package.tgz
907 silly lockFile e504e2ba-iler-node-modules-public-address tar:///home/vagrant/openclothes/node_modules/nodemailer/node_modules/public-address
908 verbose lock tar:///home/vagrant/openclothes/node_modules/nodemailer/node_modules/public-address /home/vagrant/.npm/e504e2ba-iler-node-modules-public-address.lock
909 silly lockFile 3cdb4709-public-address-0-1-0-package-tgz tar:///home/vagrant/.npm/public-address/0.1.0/package.tgz
910 verbose lock tar:///home/vagrant/.npm/public-address/0.1.0/package.tgz /home/vagrant/.npm/3cdb4709-public-address-0-1-0-package-tgz.lock
911 verbose tar unpack /home/vagrant/.npm/directmail/0.1.6/package.tgz
912 silly lockFile 8d4c614e-demailer-node-modules-directmail tar:///home/vagrant/openclothes/node_modules/nodemailer/node_modules/directmail
913 verbose lock tar:///home/vagrant/openclothes/node_modules/nodemailer/node_modules/directmail /home/vagrant/.npm/8d4c614e-demailer-node-modules-directmail.lock
914 silly lockFile 7e2fda72-npm-directmail-0-1-6-package-tgz tar:///home/vagrant/.npm/directmail/0.1.6/package.tgz
915 verbose lock tar:///home/vagrant/.npm/directmail/0.1.6/package.tgz /home/vagrant/.npm/7e2fda72-npm-directmail-0-1-6-package-tgz.lock
916 verbose tar unpack /home/vagrant/.npm/he/0.3.6/package.tgz
917 silly lockFile 241dcdf1-dules-nodemailer-node-modules-he tar:///home/vagrant/openclothes/node_modules/nodemailer/node_modules/he
918 verbose lock tar:///home/vagrant/openclothes/node_modules/nodemailer/node_modules/he /home/vagrant/.npm/241dcdf1-dules-nodemailer-node-modules-he.lock
919 silly lockFile 5068ace3-vagrant-npm-he-0-3-6-package-tgz tar:///home/vagrant/.npm/he/0.3.6/package.tgz
920 verbose lock tar:///home/vagrant/.npm/he/0.3.6/package.tgz /home/vagrant/.npm/5068ace3-vagrant-npm-he-0-3-6-package-tgz.lock
921 verbose tar unpack /home/vagrant/.npm/readable-stream/1.1.10/package.tgz
922 silly lockFile 00985e66-ler-node-modules-readable-stream tar:///home/vagrant/openclothes/node_modules/nodemailer/node_modules/readable-stream
923 verbose lock tar:///home/vagrant/openclothes/node_modules/nodemailer/node_modules/readable-stream /home/vagrant/.npm/00985e66-ler-node-modules-readable-stream.lock
924 silly lockFile aa22e79b-adable-stream-1-1-10-package-tgz tar:///home/vagrant/.npm/readable-stream/1.1.10/package.tgz
925 verbose lock tar:///home/vagrant/.npm/readable-stream/1.1.10/package.tgz /home/vagrant/.npm/aa22e79b-adable-stream-1-1-10-package-tgz.lock
926 verbose tar unpack /home/vagrant/.npm/simplesmtp/0.3.20/package.tgz
927 silly lockFile 6528d3b5-demailer-node-modules-simplesmtp tar:///home/vagrant/openclothes/node_modules/nodemailer/node_modules/simplesmtp
928 verbose lock tar:///home/vagrant/openclothes/node_modules/nodemailer/node_modules/simplesmtp /home/vagrant/.npm/6528d3b5-demailer-node-modules-simplesmtp.lock
929 silly lockFile 53cb1c28-pm-simplesmtp-0-3-20-package-tgz tar:///home/vagrant/.npm/simplesmtp/0.3.20/package.tgz
930 verbose lock tar:///home/vagrant/.npm/simplesmtp/0.3.20/package.tgz /home/vagrant/.npm/53cb1c28-pm-simplesmtp-0-3-20-package-tgz.lock
931 verbose tar unpack /home/vagrant/.npm/mailcomposer/0.2.8/package.tgz
932 silly lockFile 8a212526-mailer-node-modules-mailcomposer tar:///home/vagrant/openclothes/node_modules/nodemailer/node_modules/mailcomposer
933 verbose lock tar:///home/vagrant/openclothes/node_modules/nodemailer/node_modules/mailcomposer /home/vagrant/.npm/8a212526-mailer-node-modules-mailcomposer.lock
934 silly lockFile 0087c768-m-mailcomposer-0-2-8-package-tgz tar:///home/vagrant/.npm/mailcomposer/0.2.8/package.tgz
935 verbose lock tar:///home/vagrant/.npm/mailcomposer/0.2.8/package.tgz /home/vagrant/.npm/0087c768-m-mailcomposer-0-2-8-package-tgz.lock
936 silly gunzTarPerm modes [ '755', '644' ]
937 silly gunzTarPerm modes [ '755', '644' ]
938 silly gunzTarPerm modes [ '755', '644' ]
939 silly gunzTarPerm modes [ '755', '644' ]
940 silly gunzTarPerm modes [ '755', '644' ]
941 silly gunzTarPerm modes [ '755', '644' ]
942 silly gunzTarPerm extractEntry package.json
943 silly gunzTarPerm modified mode [ 'package.json', 384, 420 ]
944 silly gunzTarPerm extractEntry package.json
945 silly gunzTarPerm modified mode [ 'package.json', 384, 420 ]
946 silly gunzTarPerm extractEntry package.json
947 silly gunzTarPerm modified mode [ 'package.json', 384, 420 ]
948 silly gunzTarPerm extractEntry package.json
949 silly gunzTarPerm modified mode [ 'package.json', 384, 420 ]
950 silly gunzTarPerm extractEntry package.json
951 silly gunzTarPerm modified mode [ 'package.json', 384, 420 ]
952 silly gunzTarPerm extractEntry package.json
953 silly gunzTarPerm modified mode [ 'package.json', 384, 420 ]
954 silly gunzTarPerm extractEntry README.md
955 silly gunzTarPerm modified mode [ 'README.md', 384, 420 ]
956 silly gunzTarPerm extractEntry index.js
957 silly gunzTarPerm modified mode [ 'index.js', 384, 420 ]
958 silly gunzTarPerm extractEntry README.md
959 silly gunzTarPerm modified mode [ 'README.md', 384, 420 ]
960 silly gunzTarPerm extractEntry LICENSE
961 silly gunzTarPerm modified mode [ 'LICENSE', 384, 420 ]
962 silly gunzTarPerm extractEntry README.md
963 silly gunzTarPerm modified mode [ 'README.md', 384, 420 ]
964 silly gunzTarPerm extractEntry he.js
965 silly gunzTarPerm modified mode [ 'he.js', 384, 420 ]
966 silly gunzTarPerm extractEntry .npmignore
967 silly gunzTarPerm modified mode [ '.npmignore', 384, 420 ]
968 silly gunzTarPerm extractEntry README.md
969 silly gunzTarPerm modified mode [ 'README.md', 384, 420 ]
970 silly gunzTarPerm extractEntry .npmignore
971 silly gunzTarPerm modified mode [ '.npmignore', 384, 420 ]
972 silly gunzTarPerm extractEntry README.md
973 silly gunzTarPerm modified mode [ 'README.md', 384, 420 ]
974 silly gunzTarPerm extractEntry .npmignore
975 silly gunzTarPerm modified mode [ '.npmignore', 384, 420 ]
976 silly gunzTarPerm extractEntry README.md
977 silly gunzTarPerm modified mode [ 'README.md', 384, 420 ]
978 silly gunzTarPerm extractEntry tests/public-address.js
979 silly gunzTarPerm modified mode [ 'tests/public-address.js', 384, 420 ]
980 silly gunzTarPerm extractEntry LICENSE
981 silly gunzTarPerm modified mode [ 'LICENSE', 384, 420 ]
982 silly gunzTarPerm extractEntry index.js
983 silly gunzTarPerm modified mode [ 'index.js', 384, 420 ]
984 silly gunzTarPerm extractEntry .travis.yml
985 silly gunzTarPerm modified mode [ '.travis.yml', 384, 420 ]
986 silly gunzTarPerm extractEntry LICENSE
987 silly gunzTarPerm modified mode [ 'LICENSE', 384, 420 ]
988 silly gunzTarPerm extractEntry LICENSE
989 silly gunzTarPerm modified mode [ 'LICENSE', 384, 420 ]
990 silly gunzTarPerm extractEntry LICENSE-MIT.txt
991 silly gunzTarPerm modified mode [ 'LICENSE-MIT.txt', 384, 420 ]
992 silly gunzTarPerm extractEntry duplex.js
993 silly gunzTarPerm modified mode [ 'duplex.js', 384, 420 ]
994 silly gunzTarPerm extractEntry transform.js
995 silly gunzTarPerm modified mode [ 'transform.js', 384, 420 ]
996 silly gunzTarPerm extractEntry index.js
997 silly gunzTarPerm modified mode [ 'index.js', 384, 420 ]
998 silly gunzTarPerm extractEntry .travis.yml
999 silly gunzTarPerm modified mode [ '.travis.yml', 384, 420 ]
1000 silly gunzTarPerm extractEntry .travis.yml
1001 silly gunzTarPerm modified mode [ '.travis.yml', 384, 420 ]
1002 silly gunzTarPerm extractEntry lib/mailcomposer.js
1003 silly gunzTarPerm modified mode [ 'lib/mailcomposer.js', 384, 420 ]
1004 silly gunzTarPerm extractEntry lib/mailer.js
1005 silly gunzTarPerm modified mode [ 'lib/mailer.js', 384, 420 ]
1006 silly gunzTarPerm extractEntry lib/queue.js
1007 silly gunzTarPerm modified mode [ 'lib/queue.js', 384, 420 ]
1008 silly gunzTarPerm extractEntry tests/mailer.js
1009 silly gunzTarPerm modified mode [ 'tests/mailer.js', 384, 420 ]
1010 silly gunzTarPerm extractEntry tests/queue.js
1011 silly gunzTarPerm modified mode [ 'tests/queue.js', 384, 420 ]
1012 silly gunzTarPerm extractEntry bin/he
1013 silly gunzTarPerm modified mode [ 'bin/he', 384, 420 ]
1014 silly gunzTarPerm extractEntry man/he.1
1015 silly gunzTarPerm modified mode [ 'man/he.1', 384, 420 ]
1016 silly gunzTarPerm extractEntry CHANGELOG.md
1017 silly gunzTarPerm modified mode [ 'CHANGELOG.md', 384, 420 ]
1018 silly gunzTarPerm extractEntry examples/simpleserver.js
1019 silly gunzTarPerm modified mode [ 'examples/simpleserver.js', 384, 420 ]
1020 silly gunzTarPerm extractEntry lib/topunycode.js
1021 silly gunzTarPerm modified mode [ 'lib/topunycode.js', 384, 420 ]
1022 silly gunzTarPerm extractEntry lib/urlfetch.js
1023 silly gunzTarPerm modified mode [ 'lib/urlfetch.js', 384, 420 ]
1024 silly lockFile e504e2ba-iler-node-modules-public-address tar:///home/vagrant/openclothes/node_modules/nodemailer/node_modules/public-address
1025 silly lockFile e504e2ba-iler-node-modules-public-address tar:///home/vagrant/openclothes/node_modules/nodemailer/node_modules/public-address
1026 silly lockFile 3cdb4709-public-address-0-1-0-package-tgz tar:///home/vagrant/.npm/public-address/0.1.0/package.tgz
1027 silly lockFile 3cdb4709-public-address-0-1-0-package-tgz tar:///home/vagrant/.npm/public-address/0.1.0/package.tgz
1028 info preinstall public-address@0.1.0
1029 silly gunzTarPerm extractEntry examples/size.js
1030 silly gunzTarPerm modified mode [ 'examples/size.js', 384, 420 ]
1031 silly gunzTarPerm extractEntry examples/validate-recipient.js
1032 silly gunzTarPerm modified mode [ 'examples/validate-recipient.js', 384, 420 ]
1033 verbose readDependencies using package.json deps
1034 silly gunzTarPerm extractEntry test/mailcomposer.js
1035 silly gunzTarPerm modified mode [ 'test/mailcomposer.js', 384, 420 ]
1036 silly gunzTarPerm extractEntry test/image3.png
1037 silly gunzTarPerm modified mode [ 'test/image3.png', 384, 420 ]
1038 verbose readDependencies using package.json deps
1039 silly resolved []
1040 verbose about to build /home/vagrant/openclothes/node_modules/nodemailer/node_modules/public-address
1041 info build /home/vagrant/openclothes/node_modules/nodemailer/node_modules/public-address
1042 verbose linkStuff [ false,
1042 verbose linkStuff   false,
1042 verbose linkStuff   false,
1042 verbose linkStuff   '/home/vagrant/openclothes/node_modules/nodemailer/node_modules' ]
1043 info linkStuff public-address@0.1.0
1044 verbose linkBins public-address@0.1.0
1045 verbose linkMans public-address@0.1.0
1046 verbose rebuildBundles public-address@0.1.0
1047 info install public-address@0.1.0
1048 info postinstall public-address@0.1.0
1049 silly gunzTarPerm extractEntry lib/client.js
1050 silly gunzTarPerm modified mode [ 'lib/client.js', 384, 420 ]
1051 silly gunzTarPerm extractEntry lib/pool.js
1052 silly gunzTarPerm modified mode [ 'lib/pool.js', 384, 420 ]
1053 silly gunzTarPerm extractEntry passthrough.js
1054 silly gunzTarPerm modified mode [ 'passthrough.js', 384, 420 ]
1055 silly gunzTarPerm extractEntry readable.js
1056 silly gunzTarPerm modified mode [ 'readable.js', 384, 420 ]
1057 silly gunzTarPerm extractEntry test/test_private.pem
1058 silly gunzTarPerm modified mode [ 'test/test_private.pem', 384, 420 ]
1059 silly gunzTarPerm extractEntry test/textfile.txt
1060 silly gunzTarPerm modified mode [ 'test/textfile.txt', 384, 420 ]
1061 silly gunzTarPerm extractEntry lib/server.js
1062 silly gunzTarPerm modified mode [ 'lib/server.js', 384, 420 ]
1063 silly gunzTarPerm extractEntry lib/simpleserver.js
1064 silly gunzTarPerm modified mode [ 'lib/simpleserver.js', 384, 420 ]
1065 silly gunzTarPerm extractEntry writable.js
1066 silly gunzTarPerm modified mode [ 'writable.js', 384, 420 ]
1067 silly gunzTarPerm extractEntry float.patch
1068 silly gunzTarPerm modified mode [ 'float.patch', 384, 420 ]
1069 silly gunzTarPerm extractEntry lib/_stream_duplex.js
1070 silly gunzTarPerm modified mode [ 'lib/_stream_duplex.js', 384, 420 ]
1071 silly gunzTarPerm extractEntry lib/_stream_passthrough.js
1072 silly gunzTarPerm modified mode [ 'lib/_stream_passthrough.js', 384, 420 ]
1073 silly gunzTarPerm extractEntry test/client.js
1074 silly gunzTarPerm modified mode [ 'test/client.js', 384, 420 ]
1075 silly gunzTarPerm extractEntry test/pool.js
1076 silly gunzTarPerm modified mode [ 'test/pool.js', 384, 420 ]
1077 silly gunzTarPerm extractEntry lib/_stream_readable.js
1078 silly gunzTarPerm modified mode [ 'lib/_stream_readable.js', 384, 420 ]
1079 silly gunzTarPerm extractEntry lib/_stream_transform.js
1080 silly gunzTarPerm modified mode [ 'lib/_stream_transform.js', 384, 420 ]
1081 silly gunzTarPerm extractEntry test/server.js
1082 silly gunzTarPerm modified mode [ 'test/server.js', 384, 420 ]
1083 silly gunzTarPerm extractEntry test/testmessage.eml
1084 silly gunzTarPerm modified mode [ 'test/testmessage.eml', 384, 420 ]
1085 silly gunzTarPerm extractEntry lib/_stream_writable.js
1086 silly gunzTarPerm modified mode [ 'lib/_stream_writable.js', 384, 420 ]
1087 silly lockFile 8d4c614e-demailer-node-modules-directmail tar:///home/vagrant/openclothes/node_modules/nodemailer/node_modules/directmail
1088 silly lockFile 8d4c614e-demailer-node-modules-directmail tar:///home/vagrant/openclothes/node_modules/nodemailer/node_modules/directmail
1089 silly lockFile 7e2fda72-npm-directmail-0-1-6-package-tgz tar:///home/vagrant/.npm/directmail/0.1.6/package.tgz
1090 silly lockFile 7e2fda72-npm-directmail-0-1-6-package-tgz tar:///home/vagrant/.npm/directmail/0.1.6/package.tgz
1091 info preinstall directmail@0.1.6
1092 verbose readDependencies using package.json deps
1093 verbose readDependencies using package.json deps
1094 silly resolved []
1095 verbose about to build /home/vagrant/openclothes/node_modules/nodemailer/node_modules/directmail
1096 info build /home/vagrant/openclothes/node_modules/nodemailer/node_modules/directmail
1097 verbose linkStuff [ false,
1097 verbose linkStuff   false,
1097 verbose linkStuff   false,
1097 verbose linkStuff   '/home/vagrant/openclothes/node_modules/nodemailer/node_modules' ]
1098 info linkStuff directmail@0.1.6
1099 verbose linkBins directmail@0.1.6
1100 verbose linkMans directmail@0.1.6
1101 verbose rebuildBundles directmail@0.1.6
1102 info install directmail@0.1.6
1103 info postinstall directmail@0.1.6
1104 silly lockFile 241dcdf1-dules-nodemailer-node-modules-he tar:///home/vagrant/openclothes/node_modules/nodemailer/node_modules/he
1105 silly lockFile 241dcdf1-dules-nodemailer-node-modules-he tar:///home/vagrant/openclothes/node_modules/nodemailer/node_modules/he
1106 silly lockFile 5068ace3-vagrant-npm-he-0-3-6-package-tgz tar:///home/vagrant/.npm/he/0.3.6/package.tgz
1107 silly lockFile 5068ace3-vagrant-npm-he-0-3-6-package-tgz tar:///home/vagrant/.npm/he/0.3.6/package.tgz
1108 info preinstall he@0.3.6
1109 verbose readDependencies using package.json deps
1110 verbose readDependencies using package.json deps
1111 silly resolved []
1112 verbose about to build /home/vagrant/openclothes/node_modules/nodemailer/node_modules/he
1113 info build /home/vagrant/openclothes/node_modules/nodemailer/node_modules/he
1114 verbose linkStuff [ false,
1114 verbose linkStuff   false,
1114 verbose linkStuff   false,
1114 verbose linkStuff   '/home/vagrant/openclothes/node_modules/nodemailer/node_modules' ]
1115 info linkStuff he@0.3.6
1116 verbose linkBins he@0.3.6
1117 verbose link bins [ { he: 'bin/he' },
1117 verbose link bins   '/home/vagrant/openclothes/node_modules/nodemailer/node_modules/.bin',
1117 verbose link bins   false ]
1118 verbose linkMans he@0.3.6
1119 verbose rebuildBundles he@0.3.6
1120 info /home/vagrant/openclothes/node_modules/nodemailer/node_modules/he unbuild
1121 info preuninstall he@0.3.6
1122 info uninstall he@0.3.6
1123 verbose false,/home/vagrant/openclothes/node_modules,/home/vagrant/openclothes/node_modules/nodemailer/node_modules unbuild he@0.3.6
1124 verbose /home/vagrant/openclothes/node_modules/nodemailer/node_modules/.bin,[object Object] binRoot
1125 info postuninstall he@0.3.6
1126 verbose about to build /home/vagrant/openclothes/node_modules/nodemailer
1127 info /home/vagrant/openclothes/node_modules/nodemailer unbuild
1128 info preuninstall nodemailer@0.6.0
1129 info uninstall nodemailer@0.6.0
1130 verbose true,/home/vagrant/openclothes/node_modules,/home/vagrant/openclothes/node_modules unbuild nodemailer@0.6.0
1131 info postuninstall nodemailer@0.6.0
1132 error error rolling back Error: UNKNOWN, unlink '/home/vagrant/openclothes/node_modules/nodemailer/node_modules/readable-stream/lib/_stream_writable.js'
1132 error error rolling back  nodemailer@0.6.0 { [Error: UNKNOWN, unlink '/home/vagrant/openclothes/node_modules/nodemailer/node_modules/readable-stream/lib/_stream_writable.js']
1132 error error rolling back   errno: -1,
1132 error error rolling back   code: 'UNKNOWN',
1132 error error rolling back   path: '/home/vagrant/openclothes/node_modules/nodemailer/node_modules/readable-stream/lib/_stream_writable.js' }
1133 error Error: UNKNOWN, symlink '../he/bin/he'
1134 error If you need help, you may report this *entire* log,
1134 error including the npm and node versions, at:
1134 error     <http://github.com/isaacs/npm/issues>
1135 error System Linux 3.2.0-23-generic-pae
1136 error command "/usr/local/bin/node" "/usr/local/bin/npm" "install" "nodemailer" "--save"
1137 error cwd /home/vagrant/openclothes
1138 error node -v v0.10.24
1139 error npm -v 1.3.21
1140 error path ../he/bin/he
1141 error code UNKNOWN
1142 error errno -1
1143 verbose exit [ -1, true ]
